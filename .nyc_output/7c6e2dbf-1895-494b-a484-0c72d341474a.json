{"/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/IInsightFacade.ts":{"path":"/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":86,"6":86,"7":1,"8":2,"9":2,"10":1,"11":2,"12":2,"13":1},"f":{"0":1,"1":86,"2":2,"3":2},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/IInsightFacade.ts","sources":["/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,2CAAqB,CAAA;IACrB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAUD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\n * This is the primary high-level API for the project. In this folder there should be:\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\n * You should not change this interface at all or the test suite will not work.\n */\n\nexport enum InsightDatasetKind {\n\tSections = \"sections\",\n\tRooms = \"rooms\",\n}\n\nexport interface InsightDataset {\n\tid: string;\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n}\n\nexport type InsightResult = Record<string, string | number>;\n\nexport class InsightError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, InsightError);\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, NotFoundError);\n\t}\n}\n\nexport class ResultTooLargeError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, ResultTooLargeError);\n\t}\n}\n\nexport interface IInsightFacade {\n\t/**\n\t * Add a dataset to insightUBC.\n\t *\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\n\t * @param kind  The kind of the dataset\n\t *\n\t * @return Promise <string[]>\n\t *\n\t * The promise should fulfill on a successful add, reject for any failures.\n\t * The promise should fulfill with a string array,\n\t * containing the ids of all currently added datasets upon a successful add.\n\t * The promise should reject with an InsightError describing the error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n\t *\n\t * After receiving the dataset, it should be processed into a data structure of\n\t * your design. The processed data structure should be persisted to disk; your\n\t * system should be able to load this persisted value into memory for answering\n\t * queries.\n\t *\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\n\t * be successfully answered.\n\t */\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\n\n\t/**\n\t * Remove a dataset from insightUBC.\n\t *\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\n\t *\n\t * @return Promise <string>\n\t *\n\t * The promise should fulfill upon a successful removal, reject on any error.\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t *\n\t * The promise should fulfill the id of the dataset that was removed.\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\n\t *\n\t * This will delete both disk and memory caches for the dataset for the id meaning\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\n\t */\n\tremoveDataset(id: string): Promise<string>;\n\n\t/**\n\t * Perform a query on insightUBC.\n\t *\n\t * @param query  The query to be performed.\n\t *\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\n\t * or references multiple datasets, it should be rejected.\n\t *\n\t * @return Promise <InsightResult[]>\n\t *\n\t * The promise should fulfill with an array of results.\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\n\t * or an InsightError (for any other source of failure) describing the error.\n\t */\n\tperformQuery(query: unknown): Promise<InsightResult[]>;\n\n\t/**\n\t * List all currently added datasets, their types, and number of rows.\n\t *\n\t * @return Promise <InsightDataset[]>\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\n\t */\n\tlistDatasets(): Promise<InsightDataset[]>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"26c4404533c9f60737b92205836f8b5dc1a0f115","contentHash":"2ea7e9b2273b2ffc8b51f4689880418cf2b4a220bc1e9b9e92beb0d260cc9390"},"/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/InsightFacade.ts":{"path":"/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":25},"end":{"line":6,"column":52}},"4":{"start":{"line":7,"column":25},"end":{"line":7,"column":69}},"5":{"start":{"line":8,"column":23},"end":{"line":8,"column":65}},"6":{"start":{"line":9,"column":29},"end":{"line":9,"column":77}},"7":{"start":{"line":10,"column":16},"end":{"line":10,"column":49}},"8":{"start":{"line":11,"column":31},"end":{"line":11,"column":81}},"9":{"start":{"line":12,"column":26},"end":{"line":12,"column":71}},"10":{"start":{"line":21,"column":8},"end":{"line":21,"column":61}},"11":{"start":{"line":22,"column":8},"end":{"line":22,"column":35}},"12":{"start":{"line":23,"column":8},"end":{"line":23,"column":88}},"13":{"start":{"line":24,"column":8},"end":{"line":24,"column":82}},"14":{"start":{"line":25,"column":8},"end":{"line":25,"column":57}},"15":{"start":{"line":26,"column":8},"end":{"line":26,"column":73}},"16":{"start":{"line":29,"column":8},"end":{"line":29,"column":49}},"17":{"start":{"line":30,"column":8},"end":{"line":30,"column":48}},"18":{"start":{"line":31,"column":8},"end":{"line":31,"column":53}},"19":{"start":{"line":32,"column":8},"end":{"line":53,"column":9}},"20":{"start":{"line":33,"column":12},"end":{"line":36,"column":13}},"21":{"start":{"line":34,"column":16},"end":{"line":34,"column":55}},"22":{"start":{"line":35,"column":16},"end":{"line":35,"column":42}},"23":{"start":{"line":37,"column":29},"end":{"line":37,"column":93}},"24":{"start":{"line":39,"column":12},"end":{"line":44,"column":13}},"25":{"start":{"line":40,"column":16},"end":{"line":40,"column":82}},"26":{"start":{"line":43,"column":16},"end":{"line":43,"column":79}},"27":{"start":{"line":45,"column":12},"end":{"line":47,"column":13}},"28":{"start":{"line":46,"column":16},"end":{"line":46,"column":94}},"29":{"start":{"line":48,"column":12},"end":{"line":48,"column":98}},"30":{"start":{"line":49,"column":12},"end":{"line":49,"column":72}},"31":{"start":{"line":52,"column":12},"end":{"line":52,"column":77}},"32":{"start":{"line":54,"column":8},"end":{"line":54,"column":51}},"33":{"start":{"line":57,"column":8},"end":{"line":60,"column":9}},"34":{"start":{"line":58,"column":12},"end":{"line":58,"column":51}},"35":{"start":{"line":59,"column":12},"end":{"line":59,"column":38}},"36":{"start":{"line":61,"column":8},"end":{"line":78,"column":9}},"37":{"start":{"line":62,"column":12},"end":{"line":64,"column":13}},"38":{"start":{"line":63,"column":16},"end":{"line":63,"column":80}},"39":{"start":{"line":65,"column":32},"end":{"line":65,"column":37}},"40":{"start":{"line":66,"column":12},"end":{"line":68,"column":13}},"41":{"start":{"line":67,"column":16},"end":{"line":67,"column":101}},"42":{"start":{"line":69,"column":12},"end":{"line":69,"column":49}},"43":{"start":{"line":72,"column":12},"end":{"line":77,"column":13}},"44":{"start":{"line":73,"column":16},"end":{"line":73,"column":28}},"45":{"start":{"line":76,"column":16},"end":{"line":76,"column":83}},"46":{"start":{"line":81,"column":27},"end":{"line":81,"column":60}},"47":{"start":{"line":82,"column":26},"end":{"line":82,"column":73}},"48":{"start":{"line":83,"column":8},"end":{"line":85,"column":9}},"49":{"start":{"line":84,"column":12},"end":{"line":84,"column":102}},"50":{"start":{"line":86,"column":28},"end":{"line":86,"column":66}},"51":{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},"52":{"start":{"line":88,"column":12},"end":{"line":88,"column":104}},"53":{"start":{"line":90,"column":28},"end":{"line":90,"column":137}},"54":{"start":{"line":91,"column":29},"end":{"line":91,"column":67}},"55":{"start":{"line":92,"column":27},"end":{"line":92,"column":31}},"56":{"start":{"line":93,"column":8},"end":{"line":95,"column":9}},"57":{"start":{"line":94,"column":12},"end":{"line":94,"column":61}},"58":{"start":{"line":96,"column":8},"end":{"line":96,"column":28}},"59":{"start":{"line":99,"column":8},"end":{"line":102,"column":9}},"60":{"start":{"line":100,"column":12},"end":{"line":100,"column":51}},"61":{"start":{"line":101,"column":12},"end":{"line":101,"column":38}},"62":{"start":{"line":103,"column":8},"end":{"line":103,"column":49}},"63":{"start":{"line":104,"column":8},"end":{"line":110,"column":9}},"64":{"start":{"line":105,"column":12},"end":{"line":105,"column":52}},"65":{"start":{"line":106,"column":12},"end":{"line":106,"column":72}},"66":{"start":{"line":109,"column":12},"end":{"line":109,"column":73}},"67":{"start":{"line":111,"column":8},"end":{"line":111,"column":35}},"68":{"start":{"line":114,"column":8},"end":{"line":117,"column":9}},"69":{"start":{"line":115,"column":12},"end":{"line":115,"column":51}},"70":{"start":{"line":116,"column":12},"end":{"line":116,"column":38}},"71":{"start":{"line":118,"column":8},"end":{"line":118,"column":55}},"72":{"start":{"line":121,"column":0},"end":{"line":121,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":18},"end":{"line":27,"column":5}},"line":20},"2":{"name":"(anonymous_2)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":40},"end":{"line":55,"column":5}},"line":28},"3":{"name":"(anonymous_3)","decl":{"start":{"line":56,"column":4},"end":{"line":56,"column":5}},"loc":{"start":{"line":56,"column":30},"end":{"line":79,"column":5}},"line":56},"4":{"name":"(anonymous_4)","decl":{"start":{"line":80,"column":4},"end":{"line":80,"column":5}},"loc":{"start":{"line":80,"column":35},"end":{"line":97,"column":5}},"line":80},"5":{"name":"(anonymous_5)","decl":{"start":{"line":98,"column":4},"end":{"line":98,"column":5}},"loc":{"start":{"line":98,"column":28},"end":{"line":112,"column":5}},"line":98},"6":{"name":"(anonymous_6)","decl":{"start":{"line":113,"column":4},"end":{"line":113,"column":5}},"loc":{"start":{"line":113,"column":25},"end":{"line":119,"column":5}},"line":113}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":33,"column":12},"end":{"line":36,"column":13}},"type":"if","locations":[{"start":{"line":33,"column":12},"end":{"line":36,"column":13}},{"start":{"line":33,"column":12},"end":{"line":36,"column":13}}],"line":33},"4":{"loc":{"start":{"line":39,"column":12},"end":{"line":44,"column":13}},"type":"if","locations":[{"start":{"line":39,"column":12},"end":{"line":44,"column":13}},{"start":{"line":39,"column":12},"end":{"line":44,"column":13}}],"line":39},"5":{"loc":{"start":{"line":45,"column":12},"end":{"line":47,"column":13}},"type":"if","locations":[{"start":{"line":45,"column":12},"end":{"line":47,"column":13}},{"start":{"line":45,"column":12},"end":{"line":47,"column":13}}],"line":45},"6":{"loc":{"start":{"line":57,"column":8},"end":{"line":60,"column":9}},"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":60,"column":9}},{"start":{"line":57,"column":8},"end":{"line":60,"column":9}}],"line":57},"7":{"loc":{"start":{"line":62,"column":12},"end":{"line":64,"column":13}},"type":"if","locations":[{"start":{"line":62,"column":12},"end":{"line":64,"column":13}},{"start":{"line":62,"column":12},"end":{"line":64,"column":13}}],"line":62},"8":{"loc":{"start":{"line":66,"column":12},"end":{"line":68,"column":13}},"type":"if","locations":[{"start":{"line":66,"column":12},"end":{"line":68,"column":13}},{"start":{"line":66,"column":12},"end":{"line":68,"column":13}}],"line":66},"9":{"loc":{"start":{"line":72,"column":12},"end":{"line":77,"column":13}},"type":"if","locations":[{"start":{"line":72,"column":12},"end":{"line":77,"column":13}},{"start":{"line":72,"column":12},"end":{"line":77,"column":13}}],"line":72},"10":{"loc":{"start":{"line":72,"column":16},"end":{"line":72,"column":119}},"type":"binary-expr","locations":[{"start":{"line":72,"column":16},"end":{"line":72,"column":62}},{"start":{"line":72,"column":66},"end":{"line":72,"column":119}}],"line":72},"11":{"loc":{"start":{"line":83,"column":8},"end":{"line":85,"column":9}},"type":"if","locations":[{"start":{"line":83,"column":8},"end":{"line":85,"column":9}},{"start":{"line":83,"column":8},"end":{"line":85,"column":9}}],"line":83},"12":{"loc":{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},"type":"if","locations":[{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},{"start":{"line":87,"column":8},"end":{"line":89,"column":9}}],"line":87},"13":{"loc":{"start":{"line":87,"column":12},"end":{"line":87,"column":133}},"type":"binary-expr","locations":[{"start":{"line":87,"column":12},"end":{"line":87,"column":72}},{"start":{"line":87,"column":76},"end":{"line":87,"column":133}}],"line":87},"14":{"loc":{"start":{"line":90,"column":28},"end":{"line":90,"column":137}},"type":"cond-expr","locations":[{"start":{"line":90,"column":91},"end":{"line":90,"column":114}},{"start":{"line":90,"column":117},"end":{"line":90,"column":137}}],"line":90},"15":{"loc":{"start":{"line":93,"column":8},"end":{"line":95,"column":9}},"type":"if","locations":[{"start":{"line":93,"column":8},"end":{"line":95,"column":9}},{"start":{"line":93,"column":8},"end":{"line":95,"column":9}}],"line":93},"16":{"loc":{"start":{"line":99,"column":8},"end":{"line":102,"column":9}},"type":"if","locations":[{"start":{"line":99,"column":8},"end":{"line":102,"column":9}},{"start":{"line":99,"column":8},"end":{"line":102,"column":9}}],"line":99},"17":{"loc":{"start":{"line":114,"column":8},"end":{"line":117,"column":9}},"type":"if","locations":[{"start":{"line":114,"column":8},"end":{"line":117,"column":9}},{"start":{"line":114,"column":8},"end":{"line":117,"column":9}}],"line":114}},"s":{"0":1,"1":6,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":61,"11":61,"12":61,"13":61,"14":61,"15":61,"16":57,"17":53,"18":52,"19":52,"20":52,"21":38,"22":38,"23":52,"24":50,"25":44,"26":6,"27":49,"28":9,"29":40,"30":40,"31":12,"32":40,"33":58,"34":0,"35":0,"36":58,"37":58,"38":2,"39":45,"40":45,"41":0,"42":45,"43":13,"44":13,"45":0,"46":45,"47":45,"48":45,"49":1,"50":44,"51":44,"52":0,"53":44,"54":44,"55":41,"56":41,"57":2,"58":39,"59":13,"60":4,"61":4,"62":13,"63":12,"64":12,"65":2,"66":10,"67":10,"68":27,"69":10,"70":10,"71":27,"72":1},"f":{"0":6,"1":61,"2":57,"3":58,"4":45,"5":13,"6":27},"b":{"0":[1,1,1],"1":[5,1],"2":[6,6],"3":[38,14],"4":[44,6],"5":[9,40],"6":[0,58],"7":[2,45],"8":[0,45],"9":[13,0],"10":[13,0],"11":[1,44],"12":[0,44],"13":[44,4],"14":[40,4],"15":[2,39],"16":[4,9],"17":[10,17]},"inputSourceMap":{"version":3,"file":"/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/InsightFacade.ts","sources":["/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/InsightFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tIInsightFacade,\n\tInsightDataset,\n\tInsightDatasetKind,\n\tInsightError,\n\tInsightResult,\n\tResultTooLargeError,\n\tNotFoundError,\n} from \"./IInsightFacade\";\nimport DatasetManager from \"./DatasetManager\";\nimport QueryChecker, { Query } from \"./QueryChecker\"; // Import Query interface\nimport SectionQueryRunner from \"./SectionQueryRunner\";\nimport JSZip from \"jszip\";\nimport QuerySingleIdChecker from \"./QuerySingleIdChecker\";\nimport RoomQueryRunner from \"./RoomQueryRunner\";\n\nexport default class InsightFacade implements IInsightFacade {\n\tprivate datasetManager: DatasetManager;\n\tprivate isInitialized: boolean; // Flag to track if initialization has been completed\n\tprivate queryChecker: QueryChecker;\n\tprivate sectionQueryRunner: SectionQueryRunner;\n\tprivate querySingleIdChecker: QuerySingleIdChecker;\n\tprivate roomQueryRunner: RoomQueryRunner;\n\n\tconstructor() {\n\t\tthis.datasetManager = new DatasetManager();\n\t\tthis.isInitialized = false; // Ensure the initialized flag is set to false initially\n\t\tthis.sectionQueryRunner = new SectionQueryRunner(this.datasetManager);\n\t\tthis.roomQueryRunner = new RoomQueryRunner(this.datasetManager);\n\t\tthis.queryChecker = new QueryChecker();\n\t\tthis.querySingleIdChecker = new QuerySingleIdChecker();\n\t}\n\n\tpublic async addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\n\t\t// Validate dataset ID and kind\n\t\tawait this.datasetManager.validateID(id);\n\t\tawait this.datasetManager.idExisted(id); // Check if the ID already exists\n\t\tawait this.datasetManager.validateKind(kind);\n\t\ttry {\n\t\t\t// Initialize dataset manager if not already initialized\n\t\t\tif (!this.isInitialized) {\n\t\t\t\tawait this.datasetManager.initialize();\n\t\t\t\tthis.isInitialized = true; // Set initialized to true after successful initialization\n\t\t\t}\n\t\t\tconst unzipped = await new JSZip().loadAsync(content, { base64: true });\n\t\t\tlet parsedEntries: any[];\n\n\t\t\tif (kind === InsightDatasetKind.Sections) {\n\t\t\t\t// const folderName = \"courses/\";\n\t\t\t\t// const courseFolder = unzipped.folder(folderName);\n\t\t\t\t// if (courseFolder === null) {\n\t\t\t\t// \tthrow new InsightError(\"No courses folder exists\");\n\t\t\t\t// }\n\t\t\t\t// // Parse sections from the course folder\n\t\t\t\t// parsedEntries = await this.datasetManager.parseSectionsJson(courseFolder);\n\t\t\t\tparsedEntries = await this.datasetManager.parseSections(unzipped);\n\t\t\t} else {\n\t\t\t\t// kind === InsightDatasetKind.Rooms\n\t\t\t\t// const indexFile = Object.values(unzipped.files).find(file => file.name.endsWith('index.htm'));\n\t\t\t\t// if (!indexFile) {\n\t\t\t\t// \tthrow new InsightError(\"No index.htm file exists\");\n\t\t\t\t// }\n\t\t\t\t// // Extract the folder path correctly\n\t\t\t\t// const folderPath = indexFile.name.substring(0, indexFile.name.lastIndexOf('/') + 1);\n\t\t\t\t// // Get the folder JSZip object\n\t\t\t\t// const folder = unzipped.folder(folderPath);\n\t\t\t\t// if (!folder) {\n\t\t\t\t// \tthrow new InsightError(`Folder not found: ${folderPath}`);\n\t\t\t\t// }\n\t\t\t\t// // Parse the rooms HTML\n\t\t\t\t// parsedEntries = await this.datasetManager.parseRoomsHTML(folder, indexFile);\n\t\t\t\tparsedEntries = await this.datasetManager.parseRooms(unzipped);\n\t\t\t}\n\t\t\tif (parsedEntries.length === 0) {\n\t\t\t\tthrow new InsightError(\"No valid sections found in dataset\");\n\t\t\t}\n\t\t\t// Write the dataset to disk and update internal maps\n\t\t\tawait this.datasetManager.writeDatasetToZip(id, kind, parsedEntries.length, unzipped);\n\t\t\tthis.datasetManager.setDatasetMaps(id, kind, parsedEntries);\n\t\t\t// this.datasetManager.printEntries();//to do\n\t\t} catch (_) {\n\t\t\t// Log error for debugging and throw a general error\n\t\t\t//  console.error(`Failed to add dataset: ${err}`);\n\t\t\tthrow new InsightError(\"Failed to add dataset\");\n\t\t\t// throw err;\n\t\t}\n\n\t\treturn this.datasetManager.getDatasetIDs(); // Return the list of dataset IDs\n\t}\n\n\tpublic async performQuery(query: unknown): Promise<InsightResult[]> {\n\t\t// Initialize the dataset manager if it hasn't been initialized yet\n\t\tif (!this.isInitialized) {\n\t\t\tawait this.datasetManager.initialize();\n\t\t\tthis.isInitialized = true;\n\t\t}\n\n\t\ttry {\n\t\t\t// Validate the query structure using the query validator\n\t\t\tif (!this.queryChecker.validateQueryFormat(query)) {\n\t\t\t\tthrow new InsightError(\"Invalid query format\");\n\t\t\t}\n\n\t\t\t// Assert that the query is of type Query at this point\n\t\t\tconst queryObject = query as Query;\n\n\t\t\t// Ensure the query references exactly one dataset\n\t\t\tif (!this.querySingleIdChecker.checkSingleDataset(queryObject)) {\n\t\t\t\tthrow new InsightError(\"Query must reference exactly one dataset.\");\n\t\t\t}\n\n\t\t\treturn this.queryRunner(queryObject);\n\t\t} catch (error) {\n\t\t\tif (error instanceof InsightError || error instanceof ResultTooLargeError) {\n\t\t\t\tthrow error;\n\t\t\t} else {\n\t\t\t\tthrow new InsightError(\"Failed to perform query\");\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async queryRunner(queryObject: Query): Promise<InsightResult[]> {\n\t\t// Retrieve available datasets and check if the required dataset exists\n\t\tconst datasetMap = this.datasetManager.getDatasets();\n\t\tconst datasetId = this.queryChecker.extractDatasetId(queryObject);\n\t\tif (!datasetMap.has(datasetId)) {\n\t\t\tthrow new InsightError(`Dataset with id \"${datasetId}\" does not exist.`);\n\t\t}\n\n\t\tconst datasetKind = this.datasetManager.getKind(datasetId);\n\n\t\t// Ensure the dataset is of the correct kind\n\t\tif (datasetKind !== InsightDatasetKind.Sections && datasetKind !== InsightDatasetKind.Rooms) {\n\t\t\tthrow new InsightError(`Invalid dataset kind for dataset id ${datasetId}`);\n\t\t}\n\n\t\t// Select the appropriate query runner based on the dataset kind\n\t\tconst queryRunner = datasetKind === InsightDatasetKind.Sections ? this.sectionQueryRunner : this.roomQueryRunner;\n\n\t\t// Execute the query using the selected query runner\n\t\tconst queryResults = await queryRunner.execute(queryObject);\n\n\t\t// Ensure that the result set is within the acceptable size limit\n\t\tconst maxResults = 5000;\n\t\tif (queryResults.length > maxResults) {\n\t\t\tthrow new ResultTooLargeError();\n\t\t}\n\n\t\treturn queryResults;\n\t}\n\n\tpublic async removeDataset(id: string): Promise<string> {\n\t\t// Initialize dataset manager if not already initialized\n\t\tif (!this.isInitialized) {\n\t\t\tawait this.datasetManager.initialize();\n\t\t\tthis.isInitialized = true;\n\t\t}\n\n\t\t// Validate the dataset ID\n\t\tawait this.datasetManager.validateID(id);\n\n\t\ttry {\n\t\t\t// Check if the dataset exists before removing\n\t\t\tawait this.datasetManager.idExisted(id);\n\t\t\treturn Promise.reject(new NotFoundError());\n\t\t} catch (_) {\n\t\t\t// Remove dataset from disk and internal maps\n\t\t\tawait this.datasetManager.removeDatasetFromFacadeAndDisk(id);\n\t\t}\n\n\t\treturn Promise.resolve(id); // Return the removed dataset ID\n\t}\n\n\tpublic async listDatasets(): Promise<InsightDataset[]> {\n\t\t// Initialize dataset manager if not already initialized\n\t\tif (!this.isInitialized) {\n\t\t\tawait this.datasetManager.initialize();\n\t\t\tthis.isInitialized = true;\n\t\t}\n\n\t\t// Return the list of available datasets\n\t\t// console.log(this.datasetManager.getInsightDataset());\n\t\treturn this.datasetManager.getInsightDataset();\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e048726aead520dcbf0e1ea6160e3645a6d82452","contentHash":"4d9c47ca9720606a921585e7659b338b43cd895ccc873db1ede0726fd27ee05e"},"/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/DatasetManager.ts":{"path":"/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/DatasetManager.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"25":{"start":{"line":26,"column":4},"end":{"line":26,"column":62}},"26":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"27":{"start":{"line":29,"column":16},"end":{"line":29,"column":49}},"28":{"start":{"line":30,"column":19},"end":{"line":30,"column":55}},"29":{"start":{"line":31,"column":20},"end":{"line":31,"column":57}},"30":{"start":{"line":32,"column":18},"end":{"line":32,"column":55}},"31":{"start":{"line":33,"column":15},"end":{"line":33,"column":49}},"32":{"start":{"line":34,"column":25},"end":{"line":34,"column":52}},"33":{"start":{"line":35,"column":15},"end":{"line":35,"column":46}},"34":{"start":{"line":37,"column":22},"end":{"line":37,"column":31}},"35":{"start":{"line":38,"column":20},"end":{"line":38,"column":29}},"36":{"start":{"line":39,"column":17},"end":{"line":39,"column":66}},"37":{"start":{"line":41,"column":28},"end":{"line":41,"column":56}},"38":{"start":{"line":42,"column":8},"end":{"line":42,"column":54}},"39":{"start":{"line":45,"column":8},"end":{"line":45,"column":36}},"40":{"start":{"line":48,"column":30},"end":{"line":48,"column":56}},"41":{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},"42":{"start":{"line":50,"column":12},"end":{"line":50,"column":36}},"43":{"start":{"line":52,"column":8},"end":{"line":52,"column":25}},"44":{"start":{"line":55,"column":8},"end":{"line":55,"column":46}},"45":{"start":{"line":56,"column":8},"end":{"line":56,"column":59}},"46":{"start":{"line":59,"column":8},"end":{"line":59,"column":55}},"47":{"start":{"line":62,"column":32},"end":{"line":62,"column":34}},"48":{"start":{"line":63,"column":20},"end":{"line":63,"column":40}},"49":{"start":{"line":64,"column":8},"end":{"line":69,"column":9}},"50":{"start":{"line":65,"column":34},"end":{"line":65,"column":60}},"51":{"start":{"line":66,"column":25},"end":{"line":66,"column":41}},"52":{"start":{"line":67,"column":28},"end":{"line":67,"column":44}},"53":{"start":{"line":68,"column":12},"end":{"line":68,"column":56}},"54":{"start":{"line":70,"column":8},"end":{"line":70,"column":31}},"55":{"start":{"line":73,"column":25},"end":{"line":73,"column":27}},"56":{"start":{"line":74,"column":8},"end":{"line":83,"column":9}},"57":{"start":{"line":75,"column":12},"end":{"line":75,"column":98}},"58":{"start":{"line":76,"column":31},"end":{"line":76,"column":92}},"59":{"start":{"line":77,"column":32},"end":{"line":77,"column":85}},"60":{"start":{"line":78,"column":12},"end":{"line":78,"column":49}},"61":{"start":{"line":79,"column":12},"end":{"line":79,"column":30}},"62":{"start":{"line":82,"column":12},"end":{"line":82,"column":30}},"63":{"start":{"line":86,"column":8},"end":{"line":86,"column":60}},"64":{"start":{"line":87,"column":25},"end":{"line":100,"column":13}},"65":{"start":{"line":87,"column":62},"end":{"line":100,"column":12}},"66":{"start":{"line":88,"column":24},"end":{"line":88,"column":45}},"67":{"start":{"line":89,"column":27},"end":{"line":89,"column":126}},"68":{"start":{"line":90,"column":28},"end":{"line":90,"column":53}},"69":{"start":{"line":91,"column":29},"end":{"line":91,"column":75}},"70":{"start":{"line":92,"column":12},"end":{"line":99,"column":13}},"71":{"start":{"line":93,"column":33},"end":{"line":93,"column":67}},"72":{"start":{"line":94,"column":16},"end":{"line":94,"column":32}},"73":{"start":{"line":97,"column":30},"end":{"line":97,"column":61}},"74":{"start":{"line":98,"column":16},"end":{"line":98,"column":29}},"75":{"start":{"line":101,"column":37},"end":{"line":101,"column":64}},"76":{"start":{"line":102,"column":8},"end":{"line":107,"column":9}},"77":{"start":{"line":102,"column":21},"end":{"line":102,"column":22}},"78":{"start":{"line":103,"column":12},"end":{"line":106,"column":13}},"79":{"start":{"line":104,"column":16},"end":{"line":104,"column":85}},"80":{"start":{"line":105,"column":16},"end":{"line":105,"column":104}},"81":{"start":{"line":110,"column":26},"end":{"line":110,"column":103}},"82":{"start":{"line":110,"column":71},"end":{"line":110,"column":102}},"83":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"84":{"start":{"line":112,"column":12},"end":{"line":112,"column":80}},"85":{"start":{"line":114,"column":27},"end":{"line":114,"column":91}},"86":{"start":{"line":115,"column":23},"end":{"line":115,"column":50}},"87":{"start":{"line":116,"column":8},"end":{"line":118,"column":9}},"88":{"start":{"line":117,"column":12},"end":{"line":117,"column":87}},"89":{"start":{"line":119,"column":22},"end":{"line":119,"column":66}},"90":{"start":{"line":120,"column":8},"end":{"line":120,"column":21}},"91":{"start":{"line":123,"column":29},"end":{"line":123,"column":56}},"92":{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},"93":{"start":{"line":125,"column":12},"end":{"line":125,"column":71}},"94":{"start":{"line":127,"column":25},"end":{"line":127,"column":67}},"95":{"start":{"line":128,"column":8},"end":{"line":128,"column":24}},"96":{"start":{"line":131,"column":8},"end":{"line":133,"column":9}},"97":{"start":{"line":132,"column":12},"end":{"line":132,"column":73}},"98":{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},"99":{"start":{"line":137,"column":12},"end":{"line":137,"column":66}},"100":{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},"101":{"start":{"line":142,"column":12},"end":{"line":142,"column":68}},"102":{"start":{"line":146,"column":8},"end":{"line":155,"column":9}},"103":{"start":{"line":147,"column":12},"end":{"line":147,"column":64}},"104":{"start":{"line":148,"column":29},"end":{"line":148,"column":83}},"105":{"start":{"line":149,"column":31},"end":{"line":149,"column":87}},"106":{"start":{"line":150,"column":12},"end":{"line":150,"column":60}},"107":{"start":{"line":151,"column":12},"end":{"line":151,"column":69}},"108":{"start":{"line":154,"column":12},"end":{"line":154,"column":80}},"109":{"start":{"line":158,"column":25},"end":{"line":158,"column":27}},"110":{"start":{"line":159,"column":8},"end":{"line":178,"column":11}},"111":{"start":{"line":160,"column":12},"end":{"line":177,"column":13}},"112":{"start":{"line":161,"column":16},"end":{"line":176,"column":22}},"113":{"start":{"line":162,"column":20},"end":{"line":175,"column":21}},"114":{"start":{"line":163,"column":44},"end":{"line":163,"column":70}},"115":{"start":{"line":164,"column":43},"end":{"line":164,"column":66}},"116":{"start":{"line":165,"column":24},"end":{"line":167,"column":25}},"117":{"start":{"line":166,"column":28},"end":{"line":166,"column":91}},"118":{"start":{"line":168,"column":24},"end":{"line":168,"column":87}},"119":{"start":{"line":171,"column":24},"end":{"line":172,"column":25}},"120":{"start":{"line":173,"column":38},"end":{"line":173,"column":40}},"121":{"start":{"line":174,"column":24},"end":{"line":174,"column":54}},"122":{"start":{"line":179,"column":30},"end":{"line":179,"column":57}},"123":{"start":{"line":180,"column":8},"end":{"line":180,"column":36}},"124":{"start":{"line":183,"column":8},"end":{"line":183,"column":60}},"125":{"start":{"line":184,"column":25},"end":{"line":184,"column":79}},"126":{"start":{"line":185,"column":8},"end":{"line":188,"column":11}},"127":{"start":{"line":186,"column":12},"end":{"line":187,"column":13}},"128":{"start":{"line":189,"column":8},"end":{"line":189,"column":52}},"129":{"start":{"line":190,"column":8},"end":{"line":190,"column":38}},"130":{"start":{"line":191,"column":8},"end":{"line":191,"column":40}},"131":{"start":{"line":194,"column":25},"end":{"line":194,"column":86}},"132":{"start":{"line":195,"column":25},"end":{"line":195,"column":53}},"133":{"start":{"line":196,"column":8},"end":{"line":201,"column":9}},"134":{"start":{"line":197,"column":12},"end":{"line":197,"column":50}},"135":{"start":{"line":200,"column":12},"end":{"line":200,"column":69}},"136":{"start":{"line":200,"column":53},"end":{"line":200,"column":67}},"137":{"start":{"line":202,"column":8},"end":{"line":208,"column":9}},"138":{"start":{"line":203,"column":24},"end":{"line":203,"column":25}},"139":{"start":{"line":204,"column":12},"end":{"line":204,"column":104}},"140":{"start":{"line":207,"column":12},"end":{"line":207,"column":84}},"141":{"start":{"line":211,"column":8},"end":{"line":213,"column":9}},"142":{"start":{"line":212,"column":12},"end":{"line":212,"column":39}},"143":{"start":{"line":214,"column":29},"end":{"line":214,"column":60}},"144":{"start":{"line":215,"column":28},"end":{"line":215,"column":54}},"145":{"start":{"line":216,"column":31},"end":{"line":216,"column":63}},"146":{"start":{"line":217,"column":8},"end":{"line":219,"column":9}},"147":{"start":{"line":218,"column":12},"end":{"line":218,"column":73}},"148":{"start":{"line":220,"column":25},"end":{"line":220,"column":79}},"149":{"start":{"line":221,"column":26},"end":{"line":221,"column":62}},"150":{"start":{"line":222,"column":8},"end":{"line":222,"column":25}},"151":{"start":{"line":225,"column":8},"end":{"line":225,"column":44}},"152":{"start":{"line":228,"column":8},"end":{"line":233,"column":9}},"153":{"start":{"line":229,"column":26},"end":{"line":229,"column":85}},"154":{"start":{"line":229,"column":58},"end":{"line":229,"column":84}},"155":{"start":{"line":230,"column":12},"end":{"line":232,"column":13}},"156":{"start":{"line":231,"column":16},"end":{"line":231,"column":28}},"157":{"start":{"line":234,"column":8},"end":{"line":241,"column":9}},"158":{"start":{"line":235,"column":12},"end":{"line":240,"column":13}},"159":{"start":{"line":236,"column":31},"end":{"line":236,"column":56}},"160":{"start":{"line":237,"column":16},"end":{"line":239,"column":17}},"161":{"start":{"line":238,"column":20},"end":{"line":238,"column":34}},"162":{"start":{"line":242,"column":8},"end":{"line":242,"column":20}},"163":{"start":{"line":245,"column":32},"end":{"line":248,"column":10}},"164":{"start":{"line":249,"column":27},"end":{"line":251,"column":80}},"165":{"start":{"line":250,"column":30},"end":{"line":250,"column":52}},"166":{"start":{"line":251,"column":29},"end":{"line":251,"column":79}},"167":{"start":{"line":251,"column":58},"end":{"line":251,"column":78}},"168":{"start":{"line":252,"column":26},"end":{"line":252,"column":110}},"169":{"start":{"line":252,"column":49},"end":{"line":252,"column":109}},"170":{"start":{"line":252,"column":74},"end":{"line":252,"column":95}},"171":{"start":{"line":253,"column":8},"end":{"line":257,"column":9}},"172":{"start":{"line":254,"column":12},"end":{"line":256,"column":13}},"173":{"start":{"line":255,"column":16},"end":{"line":255,"column":29}},"174":{"start":{"line":258,"column":8},"end":{"line":258,"column":20}},"175":{"start":{"line":261,"column":25},"end":{"line":261,"column":27}},"176":{"start":{"line":262,"column":22},"end":{"line":262,"column":91}},"177":{"start":{"line":262,"column":64},"end":{"line":262,"column":90}},"178":{"start":{"line":263,"column":8},"end":{"line":269,"column":9}},"179":{"start":{"line":264,"column":12},"end":{"line":268,"column":13}},"180":{"start":{"line":265,"column":16},"end":{"line":267,"column":17}},"181":{"start":{"line":266,"column":20},"end":{"line":266,"column":79}},"182":{"start":{"line":270,"column":8},"end":{"line":270,"column":24}},"183":{"start":{"line":277,"column":8},"end":{"line":295,"column":9}},"184":{"start":{"line":278,"column":12},"end":{"line":294,"column":13}},"185":{"start":{"line":279,"column":32},"end":{"line":279,"column":90}},"186":{"start":{"line":279,"column":61},"end":{"line":279,"column":82}},"187":{"start":{"line":280,"column":16},"end":{"line":293,"column":17}},"188":{"start":{"line":282,"column":24},"end":{"line":282,"column":64}},"189":{"start":{"line":283,"column":24},"end":{"line":283,"column":30}},"190":{"start":{"line":285,"column":24},"end":{"line":285,"column":73}},"191":{"start":{"line":286,"column":24},"end":{"line":286,"column":30}},"192":{"start":{"line":288,"column":24},"end":{"line":288,"column":72}},"193":{"start":{"line":289,"column":24},"end":{"line":289,"column":30}},"194":{"start":{"line":291,"column":24},"end":{"line":291,"column":71}},"195":{"start":{"line":292,"column":24},"end":{"line":292,"column":30}},"196":{"start":{"line":296,"column":8},"end":{"line":298,"column":9}},"197":{"start":{"line":297,"column":12},"end":{"line":297,"column":77}},"198":{"start":{"line":299,"column":28},"end":{"line":299,"column":57}},"199":{"start":{"line":300,"column":29},"end":{"line":300,"column":55}},"200":{"start":{"line":301,"column":8},"end":{"line":303,"column":9}},"201":{"start":{"line":302,"column":12},"end":{"line":302,"column":95}},"202":{"start":{"line":304,"column":31},"end":{"line":304,"column":79}},"203":{"start":{"line":305,"column":8},"end":{"line":305,"column":130}},"204":{"start":{"line":308,"column":23},"end":{"line":308,"column":76}},"205":{"start":{"line":308,"column":53},"end":{"line":308,"column":75}},"206":{"start":{"line":309,"column":8},"end":{"line":309,"column":73}},"207":{"start":{"line":309,"column":44},"end":{"line":309,"column":64}},"208":{"start":{"line":312,"column":8},"end":{"line":314,"column":9}},"209":{"start":{"line":313,"column":12},"end":{"line":313,"column":22}},"210":{"start":{"line":315,"column":8},"end":{"line":317,"column":9}},"211":{"start":{"line":316,"column":12},"end":{"line":316,"column":37}},"212":{"start":{"line":318,"column":8},"end":{"line":321,"column":20}},"213":{"start":{"line":319,"column":29},"end":{"line":319,"column":55}},"214":{"start":{"line":324,"column":0},"end":{"line":324,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":56},"end":{"line":25,"column":57}},"loc":{"start":{"line":25,"column":71},"end":{"line":27,"column":1}},"line":25},"7":{"name":"(anonymous_7)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":23},"end":{"line":43,"column":5}},"line":40},"8":{"name":"(anonymous_8)","decl":{"start":{"line":44,"column":4},"end":{"line":44,"column":5}},"loc":{"start":{"line":44,"column":18},"end":{"line":46,"column":5}},"line":44},"9":{"name":"(anonymous_9)","decl":{"start":{"line":47,"column":4},"end":{"line":47,"column":5}},"loc":{"start":{"line":47,"column":16},"end":{"line":53,"column":5}},"line":47},"10":{"name":"(anonymous_10)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":38},"end":{"line":57,"column":5}},"line":54},"11":{"name":"(anonymous_11)","decl":{"start":{"line":58,"column":4},"end":{"line":58,"column":5}},"loc":{"start":{"line":58,"column":20},"end":{"line":60,"column":5}},"line":58},"12":{"name":"(anonymous_12)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":24},"end":{"line":71,"column":5}},"line":61},"13":{"name":"(anonymous_13)","decl":{"start":{"line":72,"column":4},"end":{"line":72,"column":5}},"loc":{"start":{"line":72,"column":28},"end":{"line":84,"column":5}},"line":72},"14":{"name":"(anonymous_14)","decl":{"start":{"line":85,"column":4},"end":{"line":85,"column":5}},"loc":{"start":{"line":85,"column":45},"end":{"line":108,"column":5}},"line":85},"15":{"name":"(anonymous_15)","decl":{"start":{"line":87,"column":41},"end":{"line":87,"column":42}},"loc":{"start":{"line":87,"column":62},"end":{"line":100,"column":12}},"line":87},"16":{"name":"(anonymous_16)","decl":{"start":{"line":87,"column":63},"end":{"line":87,"column":64}},"loc":{"start":{"line":87,"column":75},"end":{"line":100,"column":9}},"line":87},"17":{"name":"(anonymous_17)","decl":{"start":{"line":109,"column":4},"end":{"line":109,"column":5}},"loc":{"start":{"line":109,"column":31},"end":{"line":121,"column":5}},"line":109},"18":{"name":"(anonymous_18)","decl":{"start":{"line":110,"column":61},"end":{"line":110,"column":62}},"loc":{"start":{"line":110,"column":71},"end":{"line":110,"column":102}},"line":110},"19":{"name":"(anonymous_19)","decl":{"start":{"line":122,"column":4},"end":{"line":122,"column":5}},"loc":{"start":{"line":122,"column":34},"end":{"line":129,"column":5}},"line":122},"20":{"name":"(anonymous_20)","decl":{"start":{"line":130,"column":4},"end":{"line":130,"column":5}},"loc":{"start":{"line":130,"column":25},"end":{"line":134,"column":5}},"line":130},"21":{"name":"(anonymous_21)","decl":{"start":{"line":135,"column":4},"end":{"line":135,"column":5}},"loc":{"start":{"line":135,"column":24},"end":{"line":139,"column":5}},"line":135},"22":{"name":"(anonymous_22)","decl":{"start":{"line":140,"column":4},"end":{"line":140,"column":5}},"loc":{"start":{"line":140,"column":29},"end":{"line":144,"column":5}},"line":140},"23":{"name":"(anonymous_23)","decl":{"start":{"line":145,"column":4},"end":{"line":145,"column":5}},"loc":{"start":{"line":145,"column":60},"end":{"line":156,"column":5}},"line":145},"24":{"name":"(anonymous_24)","decl":{"start":{"line":157,"column":4},"end":{"line":157,"column":5}},"loc":{"start":{"line":157,"column":42},"end":{"line":181,"column":5}},"line":157},"25":{"name":"(anonymous_25)","decl":{"start":{"line":159,"column":29},"end":{"line":159,"column":30}},"loc":{"start":{"line":159,"column":42},"end":{"line":178,"column":9}},"line":159},"26":{"name":"(anonymous_26)","decl":{"start":{"line":161,"column":31},"end":{"line":161,"column":32}},"loc":{"start":{"line":161,"column":43},"end":{"line":176,"column":17}},"line":161},"27":{"name":"(anonymous_27)","decl":{"start":{"line":182,"column":4},"end":{"line":182,"column":5}},"loc":{"start":{"line":182,"column":45},"end":{"line":192,"column":5}},"line":182},"28":{"name":"(anonymous_28)","decl":{"start":{"line":185,"column":44},"end":{"line":185,"column":45}},"loc":{"start":{"line":185,"column":53},"end":{"line":188,"column":9}},"line":185},"29":{"name":"(anonymous_29)","decl":{"start":{"line":193,"column":4},"end":{"line":193,"column":5}},"loc":{"start":{"line":193,"column":47},"end":{"line":209,"column":5}},"line":193},"30":{"name":"(anonymous_30)","decl":{"start":{"line":200,"column":43},"end":{"line":200,"column":44}},"loc":{"start":{"line":200,"column":53},"end":{"line":200,"column":67}},"line":200},"31":{"name":"(anonymous_31)","decl":{"start":{"line":210,"column":4},"end":{"line":210,"column":5}},"loc":{"start":{"line":210,"column":46},"end":{"line":223,"column":5}},"line":210},"32":{"name":"(anonymous_32)","decl":{"start":{"line":224,"column":4},"end":{"line":224,"column":5}},"loc":{"start":{"line":224,"column":29},"end":{"line":226,"column":5}},"line":224},"33":{"name":"(anonymous_33)","decl":{"start":{"line":227,"column":4},"end":{"line":227,"column":5}},"loc":{"start":{"line":227,"column":24},"end":{"line":243,"column":5}},"line":227},"34":{"name":"(anonymous_34)","decl":{"start":{"line":229,"column":47},"end":{"line":229,"column":48}},"loc":{"start":{"line":229,"column":58},"end":{"line":229,"column":84}},"line":229},"35":{"name":"(anonymous_35)","decl":{"start":{"line":244,"column":4},"end":{"line":244,"column":5}},"loc":{"start":{"line":244,"column":41},"end":{"line":259,"column":5}},"line":244},"36":{"name":"(anonymous_36)","decl":{"start":{"line":250,"column":20},"end":{"line":250,"column":21}},"loc":{"start":{"line":250,"column":30},"end":{"line":250,"column":52}},"line":250},"37":{"name":"(anonymous_37)","decl":{"start":{"line":251,"column":21},"end":{"line":251,"column":22}},"loc":{"start":{"line":251,"column":29},"end":{"line":251,"column":79}},"line":251},"38":{"name":"(anonymous_38)","decl":{"start":{"line":251,"column":50},"end":{"line":251,"column":51}},"loc":{"start":{"line":251,"column":58},"end":{"line":251,"column":78}},"line":251},"39":{"name":"(anonymous_39)","decl":{"start":{"line":252,"column":41},"end":{"line":252,"column":42}},"loc":{"start":{"line":252,"column":49},"end":{"line":252,"column":109}},"line":252},"40":{"name":"(anonymous_40)","decl":{"start":{"line":252,"column":64},"end":{"line":252,"column":65}},"loc":{"start":{"line":252,"column":74},"end":{"line":252,"column":95}},"line":252},"41":{"name":"(anonymous_41)","decl":{"start":{"line":260,"column":4},"end":{"line":260,"column":5}},"loc":{"start":{"line":260,"column":54},"end":{"line":271,"column":5}},"line":260},"42":{"name":"(anonymous_42)","decl":{"start":{"line":262,"column":53},"end":{"line":262,"column":54}},"loc":{"start":{"line":262,"column":64},"end":{"line":262,"column":90}},"line":262},"43":{"name":"(anonymous_43)","decl":{"start":{"line":272,"column":4},"end":{"line":272,"column":5}},"loc":{"start":{"line":272,"column":46},"end":{"line":306,"column":5}},"line":272},"44":{"name":"(anonymous_44)","decl":{"start":{"line":279,"column":51},"end":{"line":279,"column":52}},"loc":{"start":{"line":279,"column":61},"end":{"line":279,"column":82}},"line":279},"45":{"name":"(anonymous_45)","decl":{"start":{"line":307,"column":4},"end":{"line":307,"column":5}},"loc":{"start":{"line":307,"column":20},"end":{"line":310,"column":5}},"line":307},"46":{"name":"(anonymous_46)","decl":{"start":{"line":308,"column":42},"end":{"line":308,"column":43}},"loc":{"start":{"line":308,"column":53},"end":{"line":308,"column":75}},"line":308},"47":{"name":"(anonymous_47)","decl":{"start":{"line":309,"column":34},"end":{"line":309,"column":35}},"loc":{"start":{"line":309,"column":44},"end":{"line":309,"column":64}},"line":309},"48":{"name":"(anonymous_48)","decl":{"start":{"line":311,"column":4},"end":{"line":311,"column":5}},"loc":{"start":{"line":311,"column":25},"end":{"line":322,"column":5}},"line":311},"49":{"name":"(anonymous_49)","decl":{"start":{"line":319,"column":18},"end":{"line":319,"column":19}},"loc":{"start":{"line":319,"column":29},"end":{"line":319,"column":55}},"line":319}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":27}},{"start":{"line":25,"column":31},"end":{"line":25,"column":51}},{"start":{"line":25,"column":56},"end":{"line":27,"column":1}}],"line":25},"17":{"loc":{"start":{"line":26,"column":11},"end":{"line":26,"column":61}},"type":"cond-expr","locations":[{"start":{"line":26,"column":37},"end":{"line":26,"column":40}},{"start":{"line":26,"column":43},"end":{"line":26,"column":61}}],"line":26},"18":{"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":33}},"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":15}},{"start":{"line":26,"column":19},"end":{"line":26,"column":33}}],"line":26},"19":{"loc":{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},{"start":{"line":49,"column":8},"end":{"line":51,"column":9}}],"line":49},"20":{"loc":{"start":{"line":92,"column":12},"end":{"line":99,"column":13}},"type":"if","locations":[{"start":{"line":92,"column":12},"end":{"line":99,"column":13}},{"start":{"line":92,"column":12},"end":{"line":99,"column":13}}],"line":92},"21":{"loc":{"start":{"line":103,"column":12},"end":{"line":106,"column":13}},"type":"if","locations":[{"start":{"line":103,"column":12},"end":{"line":106,"column":13}},{"start":{"line":103,"column":12},"end":{"line":106,"column":13}}],"line":103},"22":{"loc":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},{"start":{"line":111,"column":8},"end":{"line":113,"column":9}}],"line":111},"23":{"loc":{"start":{"line":116,"column":8},"end":{"line":118,"column":9}},"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":118,"column":9}},{"start":{"line":116,"column":8},"end":{"line":118,"column":9}}],"line":116},"24":{"loc":{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},"type":"if","locations":[{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},{"start":{"line":124,"column":8},"end":{"line":126,"column":9}}],"line":124},"25":{"loc":{"start":{"line":131,"column":8},"end":{"line":133,"column":9}},"type":"if","locations":[{"start":{"line":131,"column":8},"end":{"line":133,"column":9}},{"start":{"line":131,"column":8},"end":{"line":133,"column":9}}],"line":131},"26":{"loc":{"start":{"line":131,"column":12},"end":{"line":131,"column":55}},"type":"binary-expr","locations":[{"start":{"line":131,"column":12},"end":{"line":131,"column":21}},{"start":{"line":131,"column":25},"end":{"line":131,"column":35}},{"start":{"line":131,"column":39},"end":{"line":131,"column":55}}],"line":131},"27":{"loc":{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},"type":"if","locations":[{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},{"start":{"line":136,"column":8},"end":{"line":138,"column":9}}],"line":136},"28":{"loc":{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},"type":"if","locations":[{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},{"start":{"line":141,"column":8},"end":{"line":143,"column":9}}],"line":141},"29":{"loc":{"start":{"line":141,"column":12},"end":{"line":141,"column":119}},"type":"binary-expr","locations":[{"start":{"line":141,"column":12},"end":{"line":141,"column":65}},{"start":{"line":141,"column":69},"end":{"line":141,"column":119}}],"line":141},"30":{"loc":{"start":{"line":160,"column":12},"end":{"line":177,"column":13}},"type":"if","locations":[{"start":{"line":160,"column":12},"end":{"line":177,"column":13}},{"start":{"line":160,"column":12},"end":{"line":177,"column":13}}],"line":160},"31":{"loc":{"start":{"line":160,"column":16},"end":{"line":160,"column":99}},"type":"binary-expr","locations":[{"start":{"line":160,"column":16},"end":{"line":160,"column":25}},{"start":{"line":160,"column":29},"end":{"line":160,"column":63}},{"start":{"line":160,"column":67},"end":{"line":160,"column":99}}],"line":160},"32":{"loc":{"start":{"line":165,"column":24},"end":{"line":167,"column":25}},"type":"if","locations":[{"start":{"line":165,"column":24},"end":{"line":167,"column":25}},{"start":{"line":165,"column":24},"end":{"line":167,"column":25}}],"line":165},"33":{"loc":{"start":{"line":171,"column":24},"end":{"line":172,"column":25}},"type":"if","locations":[{"start":{"line":171,"column":24},"end":{"line":172,"column":25}},{"start":{"line":171,"column":24},"end":{"line":172,"column":25}}],"line":171},"34":{"loc":{"start":{"line":186,"column":12},"end":{"line":187,"column":13}},"type":"if","locations":[{"start":{"line":186,"column":12},"end":{"line":187,"column":13}},{"start":{"line":186,"column":12},"end":{"line":187,"column":13}}],"line":186},"35":{"loc":{"start":{"line":196,"column":8},"end":{"line":201,"column":9}},"type":"if","locations":[{"start":{"line":196,"column":8},"end":{"line":201,"column":9}},{"start":{"line":196,"column":8},"end":{"line":201,"column":9}}],"line":196},"36":{"loc":{"start":{"line":211,"column":8},"end":{"line":213,"column":9}},"type":"if","locations":[{"start":{"line":211,"column":8},"end":{"line":213,"column":9}},{"start":{"line":211,"column":8},"end":{"line":213,"column":9}}],"line":211},"37":{"loc":{"start":{"line":217,"column":8},"end":{"line":219,"column":9}},"type":"if","locations":[{"start":{"line":217,"column":8},"end":{"line":219,"column":9}},{"start":{"line":217,"column":8},"end":{"line":219,"column":9}}],"line":217},"38":{"loc":{"start":{"line":228,"column":8},"end":{"line":233,"column":9}},"type":"if","locations":[{"start":{"line":228,"column":8},"end":{"line":233,"column":9}},{"start":{"line":228,"column":8},"end":{"line":233,"column":9}}],"line":228},"39":{"loc":{"start":{"line":230,"column":12},"end":{"line":232,"column":13}},"type":"if","locations":[{"start":{"line":230,"column":12},"end":{"line":232,"column":13}},{"start":{"line":230,"column":12},"end":{"line":232,"column":13}}],"line":230},"40":{"loc":{"start":{"line":230,"column":16},"end":{"line":230,"column":66}},"type":"binary-expr","locations":[{"start":{"line":230,"column":16},"end":{"line":230,"column":21}},{"start":{"line":230,"column":25},"end":{"line":230,"column":66}}],"line":230},"41":{"loc":{"start":{"line":234,"column":8},"end":{"line":241,"column":9}},"type":"if","locations":[{"start":{"line":234,"column":8},"end":{"line":241,"column":9}},{"start":{"line":234,"column":8},"end":{"line":241,"column":9}}],"line":234},"42":{"loc":{"start":{"line":237,"column":16},"end":{"line":239,"column":17}},"type":"if","locations":[{"start":{"line":237,"column":16},"end":{"line":239,"column":17}},{"start":{"line":237,"column":16},"end":{"line":239,"column":17}}],"line":237},"43":{"loc":{"start":{"line":252,"column":49},"end":{"line":252,"column":109}},"type":"binary-expr","locations":[{"start":{"line":252,"column":49},"end":{"line":252,"column":103}},{"start":{"line":252,"column":107},"end":{"line":252,"column":109}}],"line":252},"44":{"loc":{"start":{"line":254,"column":12},"end":{"line":256,"column":13}},"type":"if","locations":[{"start":{"line":254,"column":12},"end":{"line":256,"column":13}},{"start":{"line":254,"column":12},"end":{"line":256,"column":13}}],"line":254},"45":{"loc":{"start":{"line":263,"column":8},"end":{"line":269,"column":9}},"type":"if","locations":[{"start":{"line":263,"column":8},"end":{"line":269,"column":9}},{"start":{"line":263,"column":8},"end":{"line":269,"column":9}}],"line":263},"46":{"loc":{"start":{"line":265,"column":16},"end":{"line":267,"column":17}},"type":"if","locations":[{"start":{"line":265,"column":16},"end":{"line":267,"column":17}},{"start":{"line":265,"column":16},"end":{"line":267,"column":17}}],"line":265},"47":{"loc":{"start":{"line":278,"column":12},"end":{"line":294,"column":13}},"type":"if","locations":[{"start":{"line":278,"column":12},"end":{"line":294,"column":13}},{"start":{"line":278,"column":12},"end":{"line":294,"column":13}}],"line":278},"48":{"loc":{"start":{"line":280,"column":16},"end":{"line":293,"column":17}},"type":"switch","locations":[{"start":{"line":281,"column":20},"end":{"line":283,"column":30}},{"start":{"line":284,"column":20},"end":{"line":286,"column":30}},{"start":{"line":287,"column":20},"end":{"line":289,"column":30}},{"start":{"line":290,"column":20},"end":{"line":292,"column":30}}],"line":280},"49":{"loc":{"start":{"line":296,"column":8},"end":{"line":298,"column":9}},"type":"if","locations":[{"start":{"line":296,"column":8},"end":{"line":298,"column":9}},{"start":{"line":296,"column":8},"end":{"line":298,"column":9}}],"line":296},"50":{"loc":{"start":{"line":296,"column":12},"end":{"line":296,"column":87}},"type":"binary-expr","locations":[{"start":{"line":296,"column":12},"end":{"line":296,"column":24}},{"start":{"line":296,"column":28},"end":{"line":296,"column":45}},{"start":{"line":296,"column":49},"end":{"line":296,"column":67}},{"start":{"line":296,"column":71},"end":{"line":296,"column":87}}],"line":296},"51":{"loc":{"start":{"line":301,"column":8},"end":{"line":303,"column":9}},"type":"if","locations":[{"start":{"line":301,"column":8},"end":{"line":303,"column":9}},{"start":{"line":301,"column":8},"end":{"line":303,"column":9}}],"line":301},"52":{"loc":{"start":{"line":312,"column":8},"end":{"line":314,"column":9}},"type":"if","locations":[{"start":{"line":312,"column":8},"end":{"line":314,"column":9}},{"start":{"line":312,"column":8},"end":{"line":314,"column":9}}],"line":312},"53":{"loc":{"start":{"line":315,"column":8},"end":{"line":317,"column":9}},"type":"if","locations":[{"start":{"line":315,"column":8},"end":{"line":317,"column":9}},{"start":{"line":315,"column":8},"end":{"line":317,"column":9}}],"line":315}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":1,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":5,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":61,"35":61,"36":61,"37":52,"38":52,"39":167,"40":44,"41":44,"42":44,"43":0,"44":40,"45":40,"46":67,"47":27,"48":27,"49":27,"50":16,"51":16,"52":16,"53":16,"54":27,"55":102,"56":102,"57":102,"58":102,"59":102,"60":40,"61":40,"62":62,"63":52,"64":52,"65":16,"66":16,"67":16,"68":16,"69":16,"70":16,"71":14,"72":14,"73":2,"74":2,"75":52,"76":52,"77":52,"78":16,"79":13,"80":13,"81":8,"82":6505,"83":8,"84":1,"85":7,"86":7,"87":7,"88":0,"89":7,"90":7,"91":58,"92":58,"93":0,"94":58,"95":58,"96":70,"97":5,"98":65,"99":11,"100":52,"101":0,"102":40,"103":40,"104":40,"105":40,"106":40,"107":40,"108":0,"109":58,"110":58,"111":23908,"112":23858,"113":23858,"114":23858,"115":23858,"116":23854,"117":31,"118":23823,"119":35,"120":35,"121":35,"122":58,"123":58,"124":10,"125":10,"126":10,"127":10,"128":10,"129":10,"130":10,"131":50,"132":50,"133":50,"134":40,"135":10,"136":14,"137":50,"138":50,"139":50,"140":0,"141":7,"142":0,"143":7,"144":7,"145":7,"146":7,"147":0,"148":7,"149":7,"150":7,"151":7,"152":6853,"153":7,"154":28,"155":7,"156":7,"157":6846,"158":3458,"159":6846,"160":6846,"161":63,"162":6783,"163":7,"164":7,"165":1043,"166":518,"167":5698,"168":7,"169":2590,"170":2590,"171":7,"172":14,"173":0,"174":7,"175":7,"176":7,"177":28,"178":7,"179":7,"180":1043,"181":518,"182":7,"183":518,"184":5698,"185":2590,"186":2590,"187":2590,"188":518,"189":518,"190":518,"191":518,"192":518,"193":518,"194":518,"195":518,"196":518,"197":0,"198":518,"199":518,"200":518,"201":0,"202":518,"203":518,"204":518,"205":1036,"206":518,"207":518,"208":4662,"209":0,"210":4662,"211":2590,"212":2072,"213":3108,"214":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":1,"6":5,"7":52,"8":167,"9":44,"10":40,"11":67,"12":27,"13":102,"14":52,"15":16,"16":16,"17":8,"18":6505,"19":58,"20":70,"21":65,"22":52,"23":40,"24":58,"25":23908,"26":23858,"27":10,"28":10,"29":50,"30":14,"31":7,"32":7,"33":6853,"34":28,"35":7,"36":1043,"37":518,"38":5698,"39":2590,"40":2590,"41":7,"42":28,"43":518,"44":2590,"45":518,"46":1036,"47":518,"48":4662,"49":3108},"b":{"0":[1,1,1],"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[1,0],"12":[1,1],"13":[0,0],"14":[0,0],"15":[0,0],"16":[1,1,1],"17":[2,3],"18":[5,5],"19":[44,0],"20":[14,2],"21":[13,3],"22":[1,7],"23":[0,7],"24":[0,58],"25":[5,65],"26":[70,67,66],"27":[11,54],"28":[0,52],"29":[52,6],"30":[23858,50],"31":[23908,23908,23858],"32":[31,23823],"33":[35,0],"34":[0,10],"35":[40,10],"36":[0,7],"37":[0,7],"38":[7,6846],"39":[7,0],"40":[7,7],"41":[3458,3388],"42":[63,6783],"43":[2590,0],"44":[0,14],"45":[7,0],"46":[518,525],"47":[2590,3108],"48":[518,518,518,518],"49":[0,518],"50":[518,518,518,518],"51":[0,518],"52":[0,4662],"53":[2590,2072]},"inputSourceMap":{"version":3,"file":"/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/DatasetManager.ts","sources":["/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/DatasetManager.ts"],"names":[],"mappings":"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","sourcesContent":["import JSZip from \"jszip\";\nimport fs from \"fs-extra\";\nimport path from \"node:path\";\nimport Section from \"./Section\";\nimport Room from \"./Room\";\nimport { InsightDataset, InsightDatasetKind, InsightError } from \"./IInsightFacade\"; // Adjust the imports as needed\nimport * as parse5 from \"parse5\";\n\ntype DatasetEntry = Section | Room;\n\nexport default class DatasetManager {\n\tprivate datasetsEntries: Map<string, DatasetEntry[]> = new Map<string, DatasetEntry[]>();\n\tprivate datasetsKinds: Map<string, [InsightDatasetKind, number]> = new Map<string, [InsightDatasetKind, number]>();\n\tprivate folderPath = path.join(__dirname, \"../../data\");\n\n\tpublic async initialize(): Promise<void> {\n\t\tconst idsAndKinds = await this.readIdsFromFile();\n\t\tawait this.processStoredZipFiles(idsAndKinds);\n\t}\n\n\tpublic getDatasets(): Map<string, DatasetEntry[]> {\n\t\treturn this.datasetsEntries;\n\t}\n\n\tpublic getKind(id: string): InsightDatasetKind | undefined {\n\t\tconst kindAndRowNum = this.datasetsKinds.get(id);\n\t\tif (kindAndRowNum) {\n\t\t\treturn kindAndRowNum[0];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t// Setter for datasetsEntries\n\tpublic setDatasetMaps(id: string, kind: InsightDatasetKind, entries: DatasetEntry[]): void {\n\t\tthis.datasetsEntries.set(id, entries);\n\t\tthis.datasetsKinds.set(id, [kind, entries.length]);\n\t}\n\n\t// Getter for datasetsEntries IDS\n\tpublic getDatasetIDs(): string[] {\n\t\treturn Array.from(this.datasetsEntries.keys());\n\t}\n\n\tpublic getInsightDataset(): InsightDataset[] {\n\t\tconst InsightDatasets: InsightDataset[] = [];\n\t\tconst ids: string[] = this.getDatasetIDs();\n\t\tfor (const id of ids) {\n\t\t\tconst kindAndRowNum: [InsightDatasetKind, number] | undefined = this.datasetsKinds.get(id);\n\t\t\tconst kind: InsightDatasetKind = kindAndRowNum![0];\n\t\t\tconst numRows: number = kindAndRowNum![1];\n\t\t\tInsightDatasets.push({ id, kind, numRows });\n\t\t}\n\t\treturn InsightDatasets;\n\t}\n\n\tpublic async readIdsFromFile(): Promise<[string, [InsightDatasetKind, number]][]> {\n\t\tlet parsedData: [string, [InsightDatasetKind, number]][] = [];\n\t\ttry {\n\t\t\tawait fs.ensureDir(path.join(__dirname, \"../../data\"));\n\t\t\tconst idFilePath = path.join(__dirname, \"../../data/id_log.json\");\n\t\t\tconst fileContent = await fs.readFile(idFilePath, \"utf8\");\n\t\t\tparsedData = JSON.parse(fileContent);\n\t\t\treturn parsedData;\n\t\t} catch (_) {\n\t\t\treturn parsedData;\n\t\t}\n\t}\n\n\tpublic async processStoredZipFiles(idsAndKinds: [string, [InsightDatasetKind, number]][]): Promise<void> {\n\t\tawait fs.ensureDir(this.folderPath);\n\t\tconst promises: Promise<DatasetEntry[]>[] = idsAndKinds.map(async (idAndKind) =>\n\t\t\t(async (): Promise<DatasetEntry[]> => {\n\t\t\t\tconst zip = new JSZip();\n\t\t\t\tconst buffer = await fs.readFile(path.join(this.folderPath, `${idAndKind[0]}.zip`));\n\t\t\t\tconst content = buffer.toString(\"base64\");\n\t\t\t\tconst unzipped = await zip.loadAsync(content, { base64: true });\n\t\t\t\tif (idAndKind[1][0] === InsightDatasetKind.Sections) {\n\t\t\t\t\tconst sections = await this.parseSections(unzipped);\n\t\t\t\t\treturn sections;\n\t\t\t\t} else {\n\t\t\t\t\tconst rooms = await this.parseRooms(unzipped);\n\t\t\t\t\treturn rooms;\n\t\t\t\t}\n\t\t\t})()\n\t\t);\n\t\tconst arrayOfSectionsArray: DatasetEntry[][] = await Promise.all(promises);\n\t\tfor (let i = 0; i < idsAndKinds.length; i++) {\n\t\t\tif (!this.datasetsEntries.has(idsAndKinds[i][0])) {\n\t\t\t\t// check if id exists\n\t\t\t\tthis.datasetsEntries.set(idsAndKinds[i][0], arrayOfSectionsArray[i]);\n\t\t\t\tthis.datasetsKinds.set(idsAndKinds[i][0], [idsAndKinds[i][1][0], idsAndKinds[i][1][1]]);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async parseRooms(unzipped: JSZip): Promise<Room[]> {\n\t\tconst indexFile = Object.values(unzipped.files).find((file) => file.name.endsWith(\"index.htm\"));\n\t\tif (!indexFile) {\n\t\t\tthrow new InsightError(\"No index.htm file exists\");\n\t\t}\n\t\t// Extract the folder path correctly\n\t\tconst folderPath = indexFile.name.substring(0, indexFile.name.lastIndexOf(\"/\") + 1);\n\t\t// Get the folder JSZip object\n\t\tconst folder = unzipped.folder(folderPath);\n\t\tif (!folder) {\n\t\t\tthrow new InsightError(`Folder not found: ${folderPath}`);\n\t\t}\n\t\t// Parse the rooms HTML\n\t\tconst rooms = await this.parseRoomsHTML(folder, indexFile);\n\t\treturn rooms;\n\t}\n\n\tpublic async parseSections(unzipped: JSZip): Promise<Section[]> {\n\t\tconst courseFolder = unzipped.folder(\"courses/\");\n\t\tif (courseFolder === null) {\n\t\t\tthrow new Error(`No courses folder found in the zip file`);\n\t\t}\n\t\tconst sections = await this.parseSectionsJson(courseFolder);\n\t\treturn sections;\n\t}\n\n\tpublic async validateID(id: string): Promise<void> {\n\t\tif (id === \"\" || id === \" \" || id.includes(\"_\")) {\n\t\t\tthrow new InsightError(\"Invalid ID string\");\n\t\t}\n\t}\n\n\tpublic async idExisted(id: string): Promise<void> {\n\t\tif (this.datasetsEntries.has(id)) {\n\t\t\tthrow new InsightError(\"ID is used\");\n\t\t}\n\t}\n\n\tpublic async validateKind(kind: InsightDatasetKind): Promise<void> {\n\t\tif (kind !== InsightDatasetKind.Sections && kind !== InsightDatasetKind.Rooms) {\n\t\t\tthrow new InsightError(\"Invalid Kind\");\n\t\t}\n\t}\n\n\tpublic async writeDatasetToZip(\n\t\tid: string,\n\t\tkind: InsightDatasetKind,\n\t\trowNum: number,\n\t\tcourseFolder: JSZip\n\t): Promise<void> {\n\t\ttry {\n\t\t\tawait fs.ensureDir(this.folderPath);\n\t\t\tconst filePath = path.join(this.folderPath, `${id}.zip`);\n\t\t\tconst zipContent = await courseFolder.generateAsync({ type: \"nodebuffer\" });\n\t\t\tawait this.updateIdToJsonFile(id, kind, rowNum);\n\t\t\tawait fs.writeFile(filePath, zipContent);\n\t\t} catch (_) {\n\t\t\tthrow new InsightError(\"Failed to save .zip file\");\n\t\t}\n\t}\n\n\tpublic async parseSectionsJson(courseFolder: JSZip): Promise<Section[]> {\n\t\tconst promises: Promise<Section[]>[] = [];\n\t\tcourseFolder.forEach((_, file: JSZip.JSZipObject) => {\n\t\t\tif (!file.dir && !file.name.startsWith(\"courses/.\") && file.name.startsWith(\"courses/\")) {\n\t\t\t\tpromises.push(\n\t\t\t\t\t(async (): Promise<Section[]> => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst fileContent = await file.async(\"string\");\n\t\t\t\t\t\t\tconst parsedData = JSON.parse(fileContent);\n\t\t\t\t\t\t\tif (parsedData.result === undefined) {\n\t\t\t\t\t\t\t\tthrow new InsightError(\"Result is undefined\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// return this.validateAndExtractSectionQueryableFields(parsedData.result);\n\t\t\t\t\t\t\treturn Section.validateAndExtract(parsedData.result);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t// console.error(`Error parsing file ${file.name}:`, err);\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst empty: Section[] = [];\n\t\t\t\t\t\t\treturn Promise.resolve(empty);\n\t\t\t\t\t\t}\n\t\t\t\t\t})()\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\tconst sectionsArray = await Promise.all(promises);\n\t\treturn sectionsArray.flat();\n\t}\n\n\tpublic async removeDatasetFromFacadeAndDisk(id: string): Promise<void> {\n\t\tawait fs.ensureDir(this.folderPath);\n\t\tconst filePath = path.join(this.folderPath, `${id}.zip`);\n\t\tfs.unlink(filePath, (err) => {\n\t\t\tif (err) {\n\t\t\t\t//\n\t\t\t}\n\t\t});\n\t\tawait this.updateIdToJsonFile(id, null, -1);\n\t\tthis.datasetsKinds.delete(id);\n\t\tthis.datasetsEntries.delete(id);\n\t}\n\n\tprivate async updateIdToJsonFile(id: string, kind: InsightDatasetKind | null, rowNum: number): Promise<void> {\n\t\tconst filePath = path.join(__dirname, \"../../data/id_log.json\");\n\t\tlet parsedData: [string, [InsightDatasetKind, number]][] = await this.readIdsFromFile();\n\t\tif (kind !== null) {\n\t\t\tparsedData.push([id, [kind, rowNum]]);\n\t\t} else {\n\t\t\tparsedData = parsedData.filter((data) => data[0] !== id);\n\t\t}\n\n\t\ttry {\n\t\t\tconst two = 2;\n\t\t\tawait fs.writeFile(filePath, JSON.stringify(parsedData, null, two), \"utf8\");\n\t\t} catch (_) {\n\t\t\tthrow new InsightError(\"Failed to updateIdToJsonFile\");\n\t\t}\n\t}\n\n\tpublic async parseRoomsHTML(unzipped: JSZip, indexFile: JSZip.JSZipObject | undefined): Promise<Room[]> {\n\t\tif (indexFile === undefined) {\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\t\tconst indexContent = await indexFile.async(\"string\");\n\t\tconst parsedIndex = parse5.parse(indexContent);\n\n\t\tconst buildingsTable = this.findValidTable(parsedIndex);\n\t\tif (buildingsTable === null) {\n\t\t\tthrow new InsightError(\"No building table\");\n\t\t}\n\n\t\tconst promises: Promise<Room[]>[] = this.extractBuildingPromises(buildingsTable, unzipped);\n\n\t\t// Use Promise.all() to resolve all room extraction promises concurrently\n\t\tconst buildings = (await Promise.all(promises)).flat();\n\n\t\treturn buildings;\n\t}\n\n\tprivate findValidTable(document: any): any | null {\n\t\t// Recursive function to traverse the HTML tree and find the table with <td> elements of specific classes\n\t\treturn this.traverseTable(document);\n\t}\n\n\tprivate traverseTable(node: any): any | null {\n\t\tif (node.nodeName === \"table\") {\n\t\t\tconst tbody = node.childNodes.find((child: any) => child.nodeName === \"tbody\");\n\t\t\tif (tbody && this.hasRequiredBuildingTdElements(tbody)) {\n\t\t\t\treturn node; // Found a valid table\n\t\t\t}\n\t\t}\n\t\tif (node.childNodes) {\n\t\t\tfor (const child of node.childNodes) {\n\t\t\t\tconst result = this.traverseTable(child);\n\t\t\t\tif (result) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate hasRequiredBuildingTdElements(tbody: any): boolean {\n\t\tconst requiredClasses = new Set([\n\t\t\t\"views-field views-field-title\",\n\t\t\t\"views-field views-field-field-building-address\",\n\t\t]);\n\n\t\tconst tdElements = tbody.childNodes\n\t\t\t.filter((node: any) => node.nodeName === \"tr\")\n\t\t\t.flatMap((tr: any) => tr.childNodes.filter((td: any) => td.nodeName === \"td\"));\n\n\t\t// Collect the class values from the <td> elements\n\t\tconst tdClasses = tdElements.map((td: any) => td.attrs?.find((attr: any) => attr.name === \"class\")?.value || \"\");\n\n\t\t// Check if the required classes are present\n\t\tfor (const requiredClass of requiredClasses) {\n\t\t\tif (!tdClasses.includes(requiredClass)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate extractBuildingPromises(buildingsTable: any, unzipped: JSZip): Promise<Room[]>[] {\n\t\tconst promises: Promise<Room[]>[] = [];\n\t\tconst tbody = buildingsTable.childNodes.find((child: any) => child.nodeName === \"tbody\");\n\t\tif (tbody.childNodes) {\n\t\t\tfor (const child of tbody.childNodes) {\n\t\t\t\tif (child.nodeName === \"tr\") {\n\t\t\t\t\tpromises.push(this.createBuildingPromise(child, unzipped));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn promises;\n\t}\n\n\t// private extractBuildingPromises(buildingsTable: any, unzipped: JSZip): Promise<Room[]>[] {\n\t// \tconst promises: Promise<Room[]>[] = [];\n\t// \tlet num = 0;\n\t// \tlet invalidCount = 0; // Counter for invalid buildings\n\t// \tconst tbody = buildingsTable.childNodes.find((child: any) => child.nodeName === \"tbody\");\n\t// \tif (tbody.childNodes) {\n\t// \t\tfor (const child of tbody.childNodes) {\n\t// \t\t\tif (child.nodeName === \"tr\") {\n\t// \t\t\t\ttry {\n\t// \t\t\t\t\t// Add each promise but handle errors for invalid buildings\n\t// \t\t\t\t\tpromises.push(this.createBuildingPromise(child, unzipped));\n\t// \t\t\t\t\tnum++;\n\t// \t\t\t\t} catch (_) {\n\t// \t\t\t\t\tconsole.log(\"Invalid building detected:\", num);\n\t// \t\t\t\t\tinvalidCount++;\n\t// \t\t\t\t}\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\t// \tconsole.log(\"Total buildings:\", num);\n\t// \tconsole.log(\"Invalid buildings skipped:\", invalidCount);\n\t// \treturn promises;\n\t// }\n\t//\n\t// private async createBuildingPromise(tr: any, unzipped: JSZip): Promise<Room[]> {\n\t// \tlet fileAddress: string | undefined;\n\t// \tlet buildingFullName: string | undefined;\n\t// \tlet buildingShortName: string | undefined;\n\t// \tlet buildingAddress: string | undefined;\n\t//\n\t// \tfor (const childTd of tr.childNodes) {\n\t// \t\tif (childTd.nodeName === \"td\") {\n\t// \t\t\tconst tdClass = childTd.attrs.find((attr: any) => attr.name === \"class\")?.value;\n\t//\n\t// \t\t\tswitch (tdClass) {\n\t// \t\t\t\tcase \"views-field views-field-nothing\":\n\t// \t\t\t\t\tfileAddress = this.getLinkHref(childTd);\n\t// \t\t\t\t\tbreak;\n\t// \t\t\t\tcase \"views-field views-field-field-building-code\":\n\t// \t\t\t\t\tbuildingShortName = this.getTextContent(childTd);\n\t// \t\t\t\t\tbreak;\n\t// \t\t\t\tcase \"views-field views-field-title\":\n\t// \t\t\t\t\tbuildingFullName = this.getTextContent(childTd);\n\t// \t\t\t\t\tbreak;\n\t// \t\t\t\tcase \"views-field views-field-field-building-address\":\n\t// \t\t\t\t\tbuildingAddress = this.getTextContent(childTd);\n\t// \t\t\t\t\tbreak;\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\t//\n\t// \tif (!fileAddress || !buildingFullName || !buildingShortName || !buildingAddress) {\n\t// \t\tif (!fileAddress) {console.log(\"Missing fileAddress for building:\", buildingShortName, buildingFullName);}\n\t// \t\tif (!buildingFullName) {console.log(\"Missing buildingFullName for building:\", buildingShortName, fileAddress);}\n\t// \t\tif (!buildingShortName) {console.log(\"Missing buildingShortName for building:\", fileAddress, buildingFullName);}\n\t// \t\tif (!buildingAddress) {console.log(\"Missing buildingAddress for building:\", buildingShortName, buildingFullName);}\n\t// \t\tthrow new InsightError(\"Invalid building data\");\n\t// \t}\n\t//\n\t// \tconst cleanedPath = fileAddress.replace(\"./\", \"\");\n\t// \tconst buildingFile = unzipped.file(cleanedPath);\n\t// \tif (!buildingFile) {\n\t// \t\tconsole.log(`Building file not found for path: ${cleanedPath}`);\n\t// \t\tthrow new InsightError(`Building file not found: ${cleanedPath}`);\n\t// \t}\n\t//\n\t// \tconst parsedBuilding = parse5.parse(await buildingFile.async(\"string\"));\n\t// \tconsole.log(\"Successfully processed building:\", buildingFullName);\n\t//\n\t// \treturn Promise.resolve(Room.extractRooms(parsedBuilding, buildingAddress, buildingShortName, buildingFullName));\n\t// }\n\n\tprivate async createBuildingPromise(tr: any, unzipped: JSZip): Promise<Room[]> {\n\t\tlet fileAddress: string | undefined;\n\t\tlet buildingFullName: string | undefined;\n\t\tlet buildingShortName: string | undefined;\n\t\tlet buildingAddress: string | undefined;\n\t\t// Loop through <td> elements to extract relevant data\n\t\tfor (const childTd of tr.childNodes) {\n\t\t\tif (childTd.nodeName === \"td\") {\n\t\t\t\tconst tdClass = childTd.attrs.find((attr: any) => attr.name === \"class\")?.value;\n\n\t\t\t\tswitch (tdClass) {\n\t\t\t\t\tcase \"views-field views-field-nothing\":\n\t\t\t\t\t\tfileAddress = this.getLinkHref(childTd);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"views-field views-field-field-building-code\":\n\t\t\t\t\t\tbuildingShortName = this.getTextContent(childTd);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"views-field views-field-title\":\n\t\t\t\t\t\tbuildingFullName = this.getTextContent(childTd);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"views-field views-field-field-building-address\":\n\t\t\t\t\t\tbuildingAddress = this.getTextContent(childTd);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Validate extracted data\n\t\tif (!fileAddress || !buildingFullName || !buildingShortName || !buildingAddress) {\n\t\t\tthrow new InsightError(\"Invalid building data\");\n\t\t}\n\n\t\t// Remove \"./\" prefix from fileAddress\n\t\tconst cleanedPath = fileAddress.replace(\"./\", \"\");\n\n\t\t// Locate the building file in the unzipped JSZip object\n\t\tconst buildingFile = unzipped.file(cleanedPath);\n\t\tif (!buildingFile) {\n\t\t\tthrow new InsightError(`Building file not found: ${cleanedPath}`);\n\t\t}\n\n\t\t// Read and parse the building file\n\t\tconst parsedBuilding = parse5.parse(await buildingFile.async(\"string\"));\n\n\t\t// Extract and return room information\n\t\treturn Promise.resolve(Room.extractRooms(parsedBuilding, buildingAddress, buildingShortName, buildingFullName));\n\t}\n\n\t// Helper to extract the href value from an <a> tag inside a <td>\n\tprivate getLinkHref(td: any): string | undefined {\n\t\tconst anchor = td.childNodes.find((child: any) => child.nodeName === \"a\");\n\t\treturn anchor?.attrs.find((attr: any) => attr.name === \"href\")?.value;\n\t}\n\n\tprivate getTextContent(node: any): string {\n\t\tif (!node) {\n\t\t\treturn \"\";\n\t\t}\n\t\tif (node.nodeName === \"#text\") {\n\t\t\treturn node.value.trim(); // Extract text directly\n\t\t}\n\t\t// If the node has child nodes, recursively extract their text content\n\t\treturn node.childNodes\n\t\t\t?.map((child: any) => this.getTextContent(child))\n\t\t\t.join(\" \")\n\t\t\t.trim();\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2b6a33a5d620f5121310c83cae884f31dfc62fa7","contentHash":"a06935a687274aa832a4297bc64bd00a40a35357505633b98af7eb2dc74f5001"},"/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/Section.ts":{"path":"/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/Section.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":15,"column":8},"end":{"line":15,"column":25}},"2":{"start":{"line":16,"column":8},"end":{"line":16,"column":21}},"3":{"start":{"line":17,"column":8},"end":{"line":17,"column":27}},"4":{"start":{"line":18,"column":8},"end":{"line":18,"column":37}},"5":{"start":{"line":19,"column":8},"end":{"line":19,"column":25}},"6":{"start":{"line":20,"column":8},"end":{"line":20,"column":25}},"7":{"start":{"line":21,"column":8},"end":{"line":21,"column":23}},"8":{"start":{"line":22,"column":8},"end":{"line":22,"column":25}},"9":{"start":{"line":23,"column":8},"end":{"line":23,"column":25}},"10":{"start":{"line":24,"column":8},"end":{"line":24,"column":27}},"11":{"start":{"line":27,"column":8},"end":{"line":27,"column":25}},"12":{"start":{"line":30,"column":8},"end":{"line":30,"column":23}},"13":{"start":{"line":33,"column":8},"end":{"line":33,"column":26}},"14":{"start":{"line":36,"column":8},"end":{"line":36,"column":31}},"15":{"start":{"line":39,"column":8},"end":{"line":39,"column":25}},"16":{"start":{"line":42,"column":8},"end":{"line":42,"column":25}},"17":{"start":{"line":45,"column":8},"end":{"line":45,"column":24}},"18":{"start":{"line":48,"column":8},"end":{"line":48,"column":25}},"19":{"start":{"line":51,"column":8},"end":{"line":51,"column":25}},"20":{"start":{"line":54,"column":8},"end":{"line":54,"column":26}},"21":{"start":{"line":57,"column":25},"end":{"line":57,"column":27}},"22":{"start":{"line":58,"column":8},"end":{"line":73,"column":11}},"23":{"start":{"line":59,"column":28},"end":{"line":68,"column":55}},"24":{"start":{"line":69,"column":12},"end":{"line":72,"column":13}},"25":{"start":{"line":70,"column":32},"end":{"line":70,"column":277}},"26":{"start":{"line":71,"column":16},"end":{"line":71,"column":39}},"27":{"start":{"line":74,"column":8},"end":{"line":74,"column":24}},"28":{"start":{"line":77,"column":0},"end":{"line":77,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":81},"end":{"line":25,"column":5}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":14},"end":{"line":28,"column":5}},"line":26},"2":{"name":"(anonymous_2)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":12},"end":{"line":31,"column":5}},"line":29},"3":{"name":"(anonymous_3)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":15},"end":{"line":34,"column":5}},"line":32},"4":{"name":"(anonymous_4)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":20},"end":{"line":37,"column":5}},"line":35},"5":{"name":"(anonymous_5)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":14},"end":{"line":40,"column":5}},"line":38},"6":{"name":"(anonymous_6)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":14},"end":{"line":43,"column":5}},"line":41},"7":{"name":"(anonymous_7)","decl":{"start":{"line":44,"column":4},"end":{"line":44,"column":5}},"loc":{"start":{"line":44,"column":13},"end":{"line":46,"column":5}},"line":44},"8":{"name":"(anonymous_8)","decl":{"start":{"line":47,"column":4},"end":{"line":47,"column":5}},"loc":{"start":{"line":47,"column":14},"end":{"line":49,"column":5}},"line":47},"9":{"name":"(anonymous_9)","decl":{"start":{"line":50,"column":4},"end":{"line":50,"column":5}},"loc":{"start":{"line":50,"column":14},"end":{"line":52,"column":5}},"line":50},"10":{"name":"(anonymous_10)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":15},"end":{"line":55,"column":5}},"line":53},"11":{"name":"(anonymous_11)","decl":{"start":{"line":56,"column":4},"end":{"line":56,"column":5}},"loc":{"start":{"line":56,"column":36},"end":{"line":75,"column":5}},"line":56},"12":{"name":"(anonymous_12)","decl":{"start":{"line":58,"column":21},"end":{"line":58,"column":22}},"loc":{"start":{"line":58,"column":40},"end":{"line":73,"column":9}},"line":58}},"branchMap":{"0":{"loc":{"start":{"line":59,"column":28},"end":{"line":68,"column":55}},"type":"binary-expr","locations":[{"start":{"line":59,"column":28},"end":{"line":59,"column":64}},{"start":{"line":60,"column":16},"end":{"line":60,"column":56}},{"start":{"line":61,"column":16},"end":{"line":61,"column":55}},{"start":{"line":62,"column":16},"end":{"line":62,"column":59}},{"start":{"line":63,"column":16},"end":{"line":63,"column":57}},{"start":{"line":64,"column":16},"end":{"line":64,"column":54}},{"start":{"line":65,"column":16},"end":{"line":65,"column":53}},{"start":{"line":66,"column":16},"end":{"line":66,"column":54}},{"start":{"line":67,"column":16},"end":{"line":67,"column":54}},{"start":{"line":68,"column":16},"end":{"line":68,"column":55}}],"line":59},"1":{"loc":{"start":{"line":69,"column":12},"end":{"line":72,"column":13}},"type":"if","locations":[{"start":{"line":69,"column":12},"end":{"line":72,"column":13}},{"start":{"line":69,"column":12},"end":{"line":72,"column":13}}],"line":69}},"s":{"0":1,"1":284020,"2":284020,"3":284020,"4":284020,"5":284020,"6":284020,"7":284020,"8":284020,"9":284020,"10":284020,"11":3,"12":455306,"13":202611,"14":129238,"15":341131,"16":2,"17":1566346,"18":67664,"19":3,"20":3,"21":23823,"22":23823,"23":284021,"24":284021,"25":284020,"26":284020,"27":23823,"28":1},"f":{"0":284020,"1":3,"2":455306,"3":202611,"4":129238,"5":341131,"6":2,"7":1566346,"8":67664,"9":3,"10":3,"11":23823,"12":284021},"b":{"0":[284021,284021,284021,284020,284020,284020,284020,284020,284020,284020],"1":[284020,1]},"inputSourceMap":{"version":3,"file":"/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/Section.ts","sources":["/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/Section.ts"],"names":[],"mappings":"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","sourcesContent":["export default class Section {\n\tprivate readonly uuid: string;\n\tprivate readonly id: string;\n\tprivate readonly title: string;\n\tprivate readonly instructor: string;\n\tprivate readonly dept: string;\n\tprivate readonly year: number;\n\tprivate readonly avg: number;\n\tprivate readonly pass: number;\n\tprivate readonly fail: number;\n\tprivate readonly audit: number;\n\n\tconstructor(\n\t\tuuid: string,\n\t\tid: string,\n\t\ttitle: string,\n\t\tinstructor: string,\n\t\tdept: string,\n\t\tyear: number,\n\t\tavg: number,\n\t\tpass: number,\n\t\tfail: number,\n\t\taudit: number\n\t) {\n\t\tthis.uuid = uuid;\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.instructor = instructor;\n\t\tthis.dept = dept;\n\t\tthis.year = year;\n\t\tthis.avg = avg;\n\t\tthis.pass = pass;\n\t\tthis.fail = fail;\n\t\tthis.audit = audit;\n\t}\n\n\t// Getter for uuid\n\tpublic getUuid(): string {\n\t\treturn this.uuid;\n\t}\n\n\t// Getter for id\n\tpublic getId(): string {\n\t\treturn this.id;\n\t}\n\n\t// Getter for title\n\tpublic getTitle(): string {\n\t\treturn this.title;\n\t}\n\n\t// Getter for instructor\n\tpublic getInstructor(): string {\n\t\treturn this.instructor;\n\t}\n\n\t// Getter for dept (department)\n\tpublic getDept(): string {\n\t\treturn this.dept;\n\t}\n\n\t// Getter for year\n\tpublic getYear(): number {\n\t\treturn this.year;\n\t}\n\n\t// Getter for avg (average)\n\tpublic getAvg(): number {\n\t\treturn this.avg;\n\t}\n\n\t// Getter for pass\n\tpublic getPass(): number {\n\t\treturn this.pass;\n\t}\n\n\t// Getter for fail\n\tpublic getFail(): number {\n\t\treturn this.fail;\n\t}\n\n\t// Getter for audit\n\tpublic getAudit(): number {\n\t\treturn this.audit;\n\t}\n\n\t// originally from DatasetManager\n\tpublic static validateAndExtract(data: any[]): Section[] {\n\t\tconst sections: Section[] = [];\n\n\t\tdata.forEach((singleSection) => {\n\t\t\tconst isValid: boolean =\n\t\t\t\ttypeof singleSection.id === \"number\" &&\n\t\t\t\ttypeof singleSection.Course === \"string\" &&\n\t\t\t\ttypeof singleSection.Title === \"string\" &&\n\t\t\t\ttypeof singleSection.Professor === \"string\" &&\n\t\t\t\ttypeof singleSection.Subject === \"string\" &&\n\t\t\t\ttypeof singleSection.Year === \"string\" &&\n\t\t\t\ttypeof singleSection.Avg === \"number\" &&\n\t\t\t\ttypeof singleSection.Pass === \"number\" &&\n\t\t\t\ttypeof singleSection.Fail === \"number\" &&\n\t\t\t\ttypeof singleSection.Audit === \"number\";\n\n\t\t\tif (isValid) {\n\t\t\t\tconst section = new Section(\n\t\t\t\t\tsingleSection.id.toString(),\n\t\t\t\t\tsingleSection.Course,\n\t\t\t\t\tsingleSection.Title,\n\t\t\t\t\tsingleSection.Professor,\n\t\t\t\t\tsingleSection.Subject,\n\t\t\t\t\tparseInt(singleSection.Year, 10),\n\t\t\t\t\tsingleSection.Avg,\n\t\t\t\t\tsingleSection.Pass,\n\t\t\t\t\tsingleSection.Fail,\n\t\t\t\t\tsingleSection.Audit\n\t\t\t\t);\n\t\t\t\tsections.push(section);\n\t\t\t}\n\t\t});\n\n\t\treturn sections;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"08d714f1df9dffe160ac41340651a56d93ad4d8b","contentHash":"62874a4c5a70c7b9c9d60a7850783fbae9705de7a7fe7d4b1af8d8a2555ebd09"},"/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/Room.ts":{"path":"/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/Room.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":15},"end":{"line":6,"column":47}},"4":{"start":{"line":20,"column":8},"end":{"line":20,"column":33}},"5":{"start":{"line":21,"column":8},"end":{"line":21,"column":35}},"6":{"start":{"line":22,"column":8},"end":{"line":22,"column":29}},"7":{"start":{"line":23,"column":8},"end":{"line":23,"column":45}},"8":{"start":{"line":24,"column":8},"end":{"line":24,"column":31}},"9":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"10":{"start":{"line":26,"column":8},"end":{"line":26,"column":23}},"11":{"start":{"line":27,"column":8},"end":{"line":27,"column":27}},"12":{"start":{"line":28,"column":8},"end":{"line":28,"column":25}},"13":{"start":{"line":29,"column":8},"end":{"line":29,"column":35}},"14":{"start":{"line":30,"column":8},"end":{"line":30,"column":25}},"15":{"start":{"line":33,"column":8},"end":{"line":33,"column":29}},"16":{"start":{"line":36,"column":8},"end":{"line":36,"column":30}},"17":{"start":{"line":39,"column":8},"end":{"line":39,"column":27}},"18":{"start":{"line":42,"column":8},"end":{"line":42,"column":25}},"19":{"start":{"line":45,"column":8},"end":{"line":45,"column":28}},"20":{"start":{"line":48,"column":8},"end":{"line":48,"column":24}},"21":{"start":{"line":51,"column":8},"end":{"line":51,"column":24}},"22":{"start":{"line":54,"column":8},"end":{"line":54,"column":26}},"23":{"start":{"line":57,"column":8},"end":{"line":57,"column":25}},"24":{"start":{"line":60,"column":8},"end":{"line":60,"column":30}},"25":{"start":{"line":63,"column":8},"end":{"line":63,"column":25}},"26":{"start":{"line":66,"column":22},"end":{"line":66,"column":57}},"27":{"start":{"line":67,"column":22},"end":{"line":67,"column":83}},"28":{"start":{"line":67,"column":56},"end":{"line":67,"column":82}},"29":{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},"30":{"start":{"line":69,"column":12},"end":{"line":69,"column":22}},"31":{"start":{"line":71,"column":29},"end":{"line":73,"column":122}},"32":{"start":{"line":72,"column":31},"end":{"line":72,"column":54}},"33":{"start":{"line":73,"column":36},"end":{"line":73,"column":121}},"34":{"start":{"line":74,"column":30},"end":{"line":74,"column":61}},"35":{"start":{"line":75,"column":8},"end":{"line":75,"column":61}},"36":{"start":{"line":75,"column":46},"end":{"line":75,"column":59}},"37":{"start":{"line":78,"column":28},"end":{"line":78,"column":55}},"38":{"start":{"line":79,"column":28},"end":{"line":79,"column":70}},"39":{"start":{"line":80,"column":8},"end":{"line":85,"column":9}},"40":{"start":{"line":81,"column":12},"end":{"line":81,"column":24}},"41":{"start":{"line":83,"column":13},"end":{"line":85,"column":9}},"42":{"start":{"line":84,"column":12},"end":{"line":84,"column":24}},"43":{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},"44":{"start":{"line":87,"column":12},"end":{"line":87,"column":24}},"45":{"start":{"line":89,"column":8},"end":{"line":89,"column":217}},"46":{"start":{"line":92,"column":24},"end":{"line":92,"column":26}},"47":{"start":{"line":93,"column":8},"end":{"line":114,"column":9}},"48":{"start":{"line":94,"column":12},"end":{"line":113,"column":13}},"49":{"start":{"line":95,"column":32},"end":{"line":95,"column":90}},"50":{"start":{"line":95,"column":61},"end":{"line":95,"column":82}},"51":{"start":{"line":96,"column":16},"end":{"line":112,"column":17}},"52":{"start":{"line":98,"column":24},"end":{"line":98,"column":71}},"53":{"start":{"line":99,"column":24},"end":{"line":99,"column":30}},"54":{"start":{"line":101,"column":24},"end":{"line":101,"column":86}},"55":{"start":{"line":102,"column":24},"end":{"line":102,"column":30}},"56":{"start":{"line":104,"column":24},"end":{"line":104,"column":73}},"57":{"start":{"line":105,"column":24},"end":{"line":105,"column":30}},"58":{"start":{"line":107,"column":24},"end":{"line":107,"column":68}},"59":{"start":{"line":108,"column":24},"end":{"line":108,"column":30}},"60":{"start":{"line":110,"column":24},"end":{"line":110,"column":65}},"61":{"start":{"line":111,"column":24},"end":{"line":111,"column":30}},"62":{"start":{"line":115,"column":8},"end":{"line":121,"column":22}},"63":{"start":{"line":124,"column":8},"end":{"line":133,"column":9}},"64":{"start":{"line":125,"column":32},"end":{"line":125,"column":76}},"65":{"start":{"line":126,"column":12},"end":{"line":128,"column":13}},"66":{"start":{"line":127,"column":16},"end":{"line":127,"column":35}},"67":{"start":{"line":129,"column":12},"end":{"line":129,"column":24}},"68":{"start":{"line":132,"column":12},"end":{"line":132,"column":24}},"69":{"start":{"line":136,"column":23},"end":{"line":136,"column":76}},"70":{"start":{"line":136,"column":53},"end":{"line":136,"column":75}},"71":{"start":{"line":137,"column":8},"end":{"line":137,"column":73}},"72":{"start":{"line":137,"column":44},"end":{"line":137,"column":64}},"73":{"start":{"line":140,"column":23},"end":{"line":140,"column":76}},"74":{"start":{"line":140,"column":53},"end":{"line":140,"column":75}},"75":{"start":{"line":141,"column":8},"end":{"line":144,"column":30}},"76":{"start":{"line":142,"column":31},"end":{"line":142,"column":57}},"77":{"start":{"line":143,"column":31},"end":{"line":143,"column":52}},"78":{"start":{"line":147,"column":8},"end":{"line":150,"column":23}},"79":{"start":{"line":148,"column":31},"end":{"line":148,"column":57}},"80":{"start":{"line":149,"column":31},"end":{"line":149,"column":52}},"81":{"start":{"line":153,"column":31},"end":{"line":153,"column":58}},"82":{"start":{"line":154,"column":20},"end":{"line":154,"column":100}},"83":{"start":{"line":155,"column":8},"end":{"line":175,"column":11}},"84":{"start":{"line":156,"column":12},"end":{"line":174,"column":15}},"85":{"start":{"line":158,"column":27},"end":{"line":158,"column":29}},"86":{"start":{"line":159,"column":16},"end":{"line":161,"column":19}},"87":{"start":{"line":160,"column":20},"end":{"line":160,"column":34}},"88":{"start":{"line":162,"column":16},"end":{"line":170,"column":19}},"89":{"start":{"line":163,"column":20},"end":{"line":169,"column":21}},"90":{"start":{"line":164,"column":44},"end":{"line":164,"column":60}},"91":{"start":{"line":165,"column":24},"end":{"line":165,"column":45}},"92":{"start":{"line":168,"column":24},"end":{"line":168,"column":82}},"93":{"start":{"line":173,"column":16},"end":{"line":173,"column":57}},"94":{"start":{"line":178,"column":8},"end":{"line":178,"column":44}},"95":{"start":{"line":181,"column":8},"end":{"line":186,"column":9}},"96":{"start":{"line":182,"column":26},"end":{"line":182,"column":85}},"97":{"start":{"line":182,"column":58},"end":{"line":182,"column":84}},"98":{"start":{"line":183,"column":12},"end":{"line":185,"column":13}},"99":{"start":{"line":184,"column":16},"end":{"line":184,"column":28}},"100":{"start":{"line":187,"column":8},"end":{"line":194,"column":9}},"101":{"start":{"line":188,"column":12},"end":{"line":193,"column":13}},"102":{"start":{"line":189,"column":31},"end":{"line":189,"column":56}},"103":{"start":{"line":190,"column":16},"end":{"line":192,"column":17}},"104":{"start":{"line":191,"column":20},"end":{"line":191,"column":34}},"105":{"start":{"line":195,"column":8},"end":{"line":195,"column":20}},"106":{"start":{"line":198,"column":32},"end":{"line":204,"column":10}},"107":{"start":{"line":205,"column":27},"end":{"line":207,"column":80}},"108":{"start":{"line":206,"column":30},"end":{"line":206,"column":52}},"109":{"start":{"line":207,"column":29},"end":{"line":207,"column":79}},"110":{"start":{"line":207,"column":58},"end":{"line":207,"column":78}},"111":{"start":{"line":208,"column":26},"end":{"line":208,"column":110}},"112":{"start":{"line":208,"column":49},"end":{"line":208,"column":109}},"113":{"start":{"line":208,"column":74},"end":{"line":208,"column":95}},"114":{"start":{"line":209,"column":8},"end":{"line":213,"column":9}},"115":{"start":{"line":210,"column":12},"end":{"line":212,"column":13}},"116":{"start":{"line":211,"column":16},"end":{"line":211,"column":29}},"117":{"start":{"line":214,"column":8},"end":{"line":214,"column":20}},"118":{"start":{"line":217,"column":0},"end":{"line":217,"column":23}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":94},"end":{"line":31,"column":5}},"line":19},"2":{"name":"(anonymous_2)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":18},"end":{"line":34,"column":5}},"line":32},"3":{"name":"(anonymous_3)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":19},"end":{"line":37,"column":5}},"line":35},"4":{"name":"(anonymous_4)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":16},"end":{"line":40,"column":5}},"line":38},"5":{"name":"(anonymous_5)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":14},"end":{"line":43,"column":5}},"line":41},"6":{"name":"(anonymous_6)","decl":{"start":{"line":44,"column":4},"end":{"line":44,"column":5}},"loc":{"start":{"line":44,"column":17},"end":{"line":46,"column":5}},"line":44},"7":{"name":"(anonymous_7)","decl":{"start":{"line":47,"column":4},"end":{"line":47,"column":5}},"loc":{"start":{"line":47,"column":13},"end":{"line":49,"column":5}},"line":47},"8":{"name":"(anonymous_8)","decl":{"start":{"line":50,"column":4},"end":{"line":50,"column":5}},"loc":{"start":{"line":50,"column":13},"end":{"line":52,"column":5}},"line":50},"9":{"name":"(anonymous_9)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":15},"end":{"line":55,"column":5}},"line":53},"10":{"name":"(anonymous_10)","decl":{"start":{"line":56,"column":4},"end":{"line":56,"column":5}},"loc":{"start":{"line":56,"column":14},"end":{"line":58,"column":5}},"line":56},"11":{"name":"(anonymous_11)","decl":{"start":{"line":59,"column":4},"end":{"line":59,"column":5}},"loc":{"start":{"line":59,"column":19},"end":{"line":61,"column":5}},"line":59},"12":{"name":"(anonymous_12)","decl":{"start":{"line":62,"column":4},"end":{"line":62,"column":5}},"loc":{"start":{"line":62,"column":14},"end":{"line":64,"column":5}},"line":62},"13":{"name":"(anonymous_13)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":100},"end":{"line":76,"column":5}},"line":65},"14":{"name":"(anonymous_14)","decl":{"start":{"line":67,"column":45},"end":{"line":67,"column":46}},"loc":{"start":{"line":67,"column":56},"end":{"line":67,"column":82}},"line":67},"15":{"name":"(anonymous_15)","decl":{"start":{"line":72,"column":20},"end":{"line":72,"column":21}},"loc":{"start":{"line":72,"column":31},"end":{"line":72,"column":54}},"line":72},"16":{"name":"(anonymous_16)","decl":{"start":{"line":73,"column":17},"end":{"line":73,"column":18}},"loc":{"start":{"line":73,"column":36},"end":{"line":73,"column":121}},"line":73},"17":{"name":"(anonymous_17)","decl":{"start":{"line":75,"column":36},"end":{"line":75,"column":37}},"loc":{"start":{"line":75,"column":46},"end":{"line":75,"column":59}},"line":75},"18":{"name":"(anonymous_18)","decl":{"start":{"line":77,"column":4},"end":{"line":77,"column":5}},"loc":{"start":{"line":77,"column":93},"end":{"line":90,"column":5}},"line":77},"19":{"name":"(anonymous_19)","decl":{"start":{"line":91,"column":4},"end":{"line":91,"column":5}},"loc":{"start":{"line":91,"column":34},"end":{"line":122,"column":5}},"line":91},"20":{"name":"(anonymous_20)","decl":{"start":{"line":95,"column":51},"end":{"line":95,"column":52}},"loc":{"start":{"line":95,"column":61},"end":{"line":95,"column":82}},"line":95},"21":{"name":"(anonymous_21)","decl":{"start":{"line":123,"column":4},"end":{"line":123,"column":5}},"loc":{"start":{"line":123,"column":49},"end":{"line":134,"column":5}},"line":123},"22":{"name":"(anonymous_22)","decl":{"start":{"line":135,"column":4},"end":{"line":135,"column":5}},"loc":{"start":{"line":135,"column":27},"end":{"line":138,"column":5}},"line":135},"23":{"name":"(anonymous_23)","decl":{"start":{"line":136,"column":42},"end":{"line":136,"column":43}},"loc":{"start":{"line":136,"column":53},"end":{"line":136,"column":75}},"line":136},"24":{"name":"(anonymous_24)","decl":{"start":{"line":137,"column":34},"end":{"line":137,"column":35}},"loc":{"start":{"line":137,"column":44},"end":{"line":137,"column":64}},"line":137},"25":{"name":"(anonymous_25)","decl":{"start":{"line":139,"column":4},"end":{"line":139,"column":5}},"loc":{"start":{"line":139,"column":27},"end":{"line":145,"column":5}},"line":139},"26":{"name":"(anonymous_26)","decl":{"start":{"line":140,"column":42},"end":{"line":140,"column":43}},"loc":{"start":{"line":140,"column":53},"end":{"line":140,"column":75}},"line":140},"27":{"name":"(anonymous_27)","decl":{"start":{"line":142,"column":20},"end":{"line":142,"column":21}},"loc":{"start":{"line":142,"column":31},"end":{"line":142,"column":57}},"line":142},"28":{"name":"(anonymous_28)","decl":{"start":{"line":143,"column":17},"end":{"line":143,"column":18}},"loc":{"start":{"line":143,"column":31},"end":{"line":143,"column":52}},"line":143},"29":{"name":"(anonymous_29)","decl":{"start":{"line":146,"column":4},"end":{"line":146,"column":5}},"loc":{"start":{"line":146,"column":30},"end":{"line":151,"column":5}},"line":146},"30":{"name":"(anonymous_30)","decl":{"start":{"line":148,"column":20},"end":{"line":148,"column":21}},"loc":{"start":{"line":148,"column":31},"end":{"line":148,"column":57}},"line":148},"31":{"name":"(anonymous_31)","decl":{"start":{"line":149,"column":17},"end":{"line":149,"column":18}},"loc":{"start":{"line":149,"column":31},"end":{"line":149,"column":52}},"line":149},"32":{"name":"(anonymous_32)","decl":{"start":{"line":152,"column":4},"end":{"line":152,"column":5}},"loc":{"start":{"line":152,"column":43},"end":{"line":176,"column":5}},"line":152},"33":{"name":"(anonymous_33)","decl":{"start":{"line":155,"column":27},"end":{"line":155,"column":28}},"loc":{"start":{"line":155,"column":48},"end":{"line":175,"column":9}},"line":155},"34":{"name":"(anonymous_34)","decl":{"start":{"line":157,"column":26},"end":{"line":157,"column":27}},"loc":{"start":{"line":157,"column":35},"end":{"line":171,"column":13}},"line":157},"35":{"name":"(anonymous_35)","decl":{"start":{"line":159,"column":31},"end":{"line":159,"column":32}},"loc":{"start":{"line":159,"column":42},"end":{"line":161,"column":17}},"line":159},"36":{"name":"(anonymous_36)","decl":{"start":{"line":162,"column":30},"end":{"line":162,"column":31}},"loc":{"start":{"line":162,"column":36},"end":{"line":170,"column":17}},"line":162},"37":{"name":"(anonymous_37)","decl":{"start":{"line":172,"column":29},"end":{"line":172,"column":30}},"loc":{"start":{"line":172,"column":35},"end":{"line":174,"column":13}},"line":172},"38":{"name":"(anonymous_38)","decl":{"start":{"line":177,"column":4},"end":{"line":177,"column":5}},"loc":{"start":{"line":177,"column":36},"end":{"line":179,"column":5}},"line":177},"39":{"name":"(anonymous_39)","decl":{"start":{"line":180,"column":4},"end":{"line":180,"column":5}},"loc":{"start":{"line":180,"column":31},"end":{"line":196,"column":5}},"line":180},"40":{"name":"(anonymous_40)","decl":{"start":{"line":182,"column":47},"end":{"line":182,"column":48}},"loc":{"start":{"line":182,"column":58},"end":{"line":182,"column":84}},"line":182},"41":{"name":"(anonymous_41)","decl":{"start":{"line":197,"column":4},"end":{"line":197,"column":5}},"loc":{"start":{"line":197,"column":44},"end":{"line":215,"column":5}},"line":197},"42":{"name":"(anonymous_42)","decl":{"start":{"line":206,"column":20},"end":{"line":206,"column":21}},"loc":{"start":{"line":206,"column":30},"end":{"line":206,"column":52}},"line":206},"43":{"name":"(anonymous_43)","decl":{"start":{"line":207,"column":21},"end":{"line":207,"column":22}},"loc":{"start":{"line":207,"column":29},"end":{"line":207,"column":79}},"line":207},"44":{"name":"(anonymous_44)","decl":{"start":{"line":207,"column":50},"end":{"line":207,"column":51}},"loc":{"start":{"line":207,"column":58},"end":{"line":207,"column":78}},"line":207},"45":{"name":"(anonymous_45)","decl":{"start":{"line":208,"column":41},"end":{"line":208,"column":42}},"loc":{"start":{"line":208,"column":49},"end":{"line":208,"column":109}},"line":208},"46":{"name":"(anonymous_46)","decl":{"start":{"line":208,"column":64},"end":{"line":208,"column":65}},"loc":{"start":{"line":208,"column":74},"end":{"line":208,"column":95}},"line":208}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},{"start":{"line":68,"column":8},"end":{"line":70,"column":9}}],"line":68},"4":{"loc":{"start":{"line":80,"column":8},"end":{"line":85,"column":9}},"type":"if","locations":[{"start":{"line":80,"column":8},"end":{"line":85,"column":9}},{"start":{"line":80,"column":8},"end":{"line":85,"column":9}}],"line":80},"5":{"loc":{"start":{"line":83,"column":13},"end":{"line":85,"column":9}},"type":"if","locations":[{"start":{"line":83,"column":13},"end":{"line":85,"column":9}},{"start":{"line":83,"column":13},"end":{"line":85,"column":9}}],"line":83},"6":{"loc":{"start":{"line":83,"column":17},"end":{"line":83,"column":53}},"type":"binary-expr","locations":[{"start":{"line":83,"column":17},"end":{"line":83,"column":33}},{"start":{"line":83,"column":37},"end":{"line":83,"column":53}}],"line":83},"7":{"loc":{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},{"start":{"line":86,"column":8},"end":{"line":88,"column":9}}],"line":86},"8":{"loc":{"start":{"line":94,"column":12},"end":{"line":113,"column":13}},"type":"if","locations":[{"start":{"line":94,"column":12},"end":{"line":113,"column":13}},{"start":{"line":94,"column":12},"end":{"line":113,"column":13}}],"line":94},"9":{"loc":{"start":{"line":96,"column":16},"end":{"line":112,"column":17}},"type":"switch","locations":[{"start":{"line":97,"column":20},"end":{"line":99,"column":30}},{"start":{"line":100,"column":20},"end":{"line":102,"column":30}},{"start":{"line":103,"column":20},"end":{"line":105,"column":30}},{"start":{"line":106,"column":20},"end":{"line":108,"column":30}},{"start":{"line":109,"column":20},"end":{"line":111,"column":30}}],"line":96},"10":{"loc":{"start":{"line":115,"column":15},"end":{"line":121,"column":21}},"type":"cond-expr","locations":[{"start":{"line":120,"column":14},"end":{"line":120,"column":18}},{"start":{"line":121,"column":14},"end":{"line":121,"column":21}}],"line":115},"11":{"loc":{"start":{"line":115,"column":15},"end":{"line":119,"column":47}},"type":"binary-expr","locations":[{"start":{"line":115,"column":15},"end":{"line":115,"column":56}},{"start":{"line":116,"column":12},"end":{"line":116,"column":51}},{"start":{"line":117,"column":12},"end":{"line":117,"column":52}},{"start":{"line":118,"column":12},"end":{"line":118,"column":47}},{"start":{"line":119,"column":12},"end":{"line":119,"column":47}}],"line":115},"12":{"loc":{"start":{"line":126,"column":12},"end":{"line":128,"column":13}},"type":"if","locations":[{"start":{"line":126,"column":12},"end":{"line":128,"column":13}},{"start":{"line":126,"column":12},"end":{"line":128,"column":13}}],"line":126},"13":{"loc":{"start":{"line":126,"column":16},"end":{"line":126,"column":78}},"type":"binary-expr","locations":[{"start":{"line":126,"column":16},"end":{"line":126,"column":45}},{"start":{"line":126,"column":49},"end":{"line":126,"column":78}}],"line":126},"14":{"loc":{"start":{"line":141,"column":16},"end":{"line":144,"column":28}},"type":"binary-expr","locations":[{"start":{"line":141,"column":16},"end":{"line":144,"column":22}},{"start":{"line":144,"column":26},"end":{"line":144,"column":28}}],"line":141},"15":{"loc":{"start":{"line":181,"column":8},"end":{"line":186,"column":9}},"type":"if","locations":[{"start":{"line":181,"column":8},"end":{"line":186,"column":9}},{"start":{"line":181,"column":8},"end":{"line":186,"column":9}}],"line":181},"16":{"loc":{"start":{"line":183,"column":12},"end":{"line":185,"column":13}},"type":"if","locations":[{"start":{"line":183,"column":12},"end":{"line":185,"column":13}},{"start":{"line":183,"column":12},"end":{"line":185,"column":13}}],"line":183},"17":{"loc":{"start":{"line":183,"column":16},"end":{"line":183,"column":62}},"type":"binary-expr","locations":[{"start":{"line":183,"column":16},"end":{"line":183,"column":21}},{"start":{"line":183,"column":25},"end":{"line":183,"column":62}}],"line":183},"18":{"loc":{"start":{"line":187,"column":8},"end":{"line":194,"column":9}},"type":"if","locations":[{"start":{"line":187,"column":8},"end":{"line":194,"column":9}},{"start":{"line":187,"column":8},"end":{"line":194,"column":9}}],"line":187},"19":{"loc":{"start":{"line":190,"column":16},"end":{"line":192,"column":17}},"type":"if","locations":[{"start":{"line":190,"column":16},"end":{"line":192,"column":17}},{"start":{"line":190,"column":16},"end":{"line":192,"column":17}}],"line":190},"20":{"loc":{"start":{"line":208,"column":49},"end":{"line":208,"column":109}},"type":"binary-expr","locations":[{"start":{"line":208,"column":49},"end":{"line":208,"column":103}},{"start":{"line":208,"column":107},"end":{"line":208,"column":109}}],"line":208},"21":{"loc":{"start":{"line":210,"column":12},"end":{"line":212,"column":13}},"type":"if","locations":[{"start":{"line":210,"column":12},"end":{"line":212,"column":13}},{"start":{"line":210,"column":12},"end":{"line":212,"column":13}}],"line":210}},"s":{"0":1,"1":1,"2":1,"3":1,"4":2548,"5":2548,"6":2548,"7":2548,"8":2548,"9":2548,"10":2548,"11":2548,"12":2548,"13":2548,"14":2548,"15":0,"16":837,"17":465,"18":0,"19":0,"20":364,"21":0,"22":704,"23":1,"24":364,"25":0,"26":518,"27":518,"28":1232,"29":518,"30":210,"31":308,"32":5404,"33":2548,"34":308,"35":308,"36":2548,"37":2548,"38":2548,"39":2548,"40":0,"41":2548,"42":0,"43":2548,"44":0,"45":2548,"46":2548,"47":2548,"48":28028,"49":12740,"50":12740,"51":12740,"52":2548,"53":2548,"54":2548,"55":2548,"56":2548,"57":2548,"58":2548,"59":2548,"60":2548,"61":2548,"62":2548,"63":2548,"64":2548,"65":2548,"66":2548,"67":0,"68":0,"69":2548,"70":5096,"71":2548,"72":2548,"73":2548,"74":5096,"75":2548,"76":2548,"77":2548,"78":7644,"79":7644,"80":7644,"81":2548,"82":2548,"83":2548,"84":2548,"85":2548,"86":2548,"87":2548,"88":2548,"89":2548,"90":2548,"91":2548,"92":0,"93":0,"94":518,"95":665098,"96":308,"97":1232,"98":308,"99":308,"100":664790,"101":342265,"102":664580,"103":664580,"104":3388,"105":661402,"106":308,"107":308,"108":5404,"109":2548,"110":28028,"111":308,"112":12740,"113":12740,"114":308,"115":1540,"116":0,"117":308,"118":1},"f":{"0":1,"1":2548,"2":0,"3":837,"4":465,"5":0,"6":0,"7":364,"8":0,"9":704,"10":1,"11":364,"12":0,"13":518,"14":1232,"15":5404,"16":2548,"17":2548,"18":2548,"19":2548,"20":12740,"21":2548,"22":2548,"23":5096,"24":2548,"25":2548,"26":5096,"27":2548,"28":2548,"29":7644,"30":7644,"31":7644,"32":2548,"33":2548,"34":2548,"35":2548,"36":2548,"37":0,"38":518,"39":665098,"40":1232,"41":308,"42":5404,"43":2548,"44":28028,"45":12740,"46":12740},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[210,308],"4":[0,2548],"5":[0,2548],"6":[2548,2548],"7":[0,2548],"8":[12740,15288],"9":[2548,2548,2548,2548,2548],"10":[0,2548],"11":[2548,2548,2548,2548,2548],"12":[2548,0],"13":[2548,2548],"14":[2548,0],"15":[308,664790],"16":[308,0],"17":[308,308],"18":[342265,322525],"19":[3388,661192],"20":[12740,0],"21":[0,1540]},"inputSourceMap":{"version":3,"file":"/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/Room.ts","sources":["/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/Room.ts"],"names":[],"mappings":"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","sourcesContent":["import http from \"http\";\n\n// Interface representing the response from the geolocation API\nexport interface GeoResponse {\n\tlat?: number; // Latitude of the location\n\tlon?: number; // Longitude of the location\n\terror?: string; // Error message, if any\n}\n\nexport default class Room {\n\tprivate readonly fullname: string;\n\tprivate readonly shortname: string;\n\tprivate readonly number: string;\n\tprivate readonly name: string;\n\tprivate readonly address: string;\n\tprivate readonly lat: number;\n\tprivate readonly lon: number;\n\tprivate readonly seats: number;\n\tprivate readonly type: string;\n\tprivate readonly furniture: string;\n\tprivate readonly href: string;\n\n\t// Constructor to initialize the Room object\n\tconstructor(\n\t\tfullname: string,\n\t\tshortname: string,\n\t\tnumber: string,\n\t\taddress: string,\n\t\tlat: number,\n\t\tlon: number,\n\t\tseats: number,\n\t\ttype: string,\n\t\tfurniture: string,\n\t\thref: string\n\t) {\n\t\tthis.fullname = fullname;\n\t\tthis.shortname = shortname;\n\t\tthis.number = number;\n\t\tthis.name = `${shortname}_${number}`; // Derived from shortname and number\n\t\tthis.address = address;\n\t\tthis.lat = lat;\n\t\tthis.lon = lon;\n\t\tthis.seats = seats;\n\t\tthis.type = type;\n\t\tthis.furniture = furniture;\n\t\tthis.href = href;\n\t}\n\n\t// Getters for each property\n\tpublic getFullname(): string {\n\t\treturn this.fullname;\n\t}\n\n\tpublic getShortname(): string {\n\t\treturn this.shortname;\n\t}\n\n\tpublic getNumber(): string {\n\t\treturn this.number;\n\t}\n\n\tpublic getName(): string {\n\t\treturn this.name;\n\t}\n\n\tpublic getAddress(): string {\n\t\treturn this.address;\n\t}\n\n\tpublic getLat(): number {\n\t\treturn this.lat;\n\t}\n\n\tpublic getLon(): number {\n\t\treturn this.lon;\n\t}\n\n\tpublic getSeats(): number {\n\t\treturn this.seats;\n\t}\n\n\tpublic getType(): string {\n\t\treturn this.type;\n\t}\n\n\tpublic getFurniture(): string {\n\t\treturn this.furniture;\n\t}\n\n\tpublic getHref(): string {\n\t\treturn this.href;\n\t}\n\n\tpublic static async extractRooms(\n\t\tparsedBuilding: any,\n\t\tbuildingAddress: string,\n\t\tbuildingShortName: string,\n\t\tbuildingFullName: string\n\t): Promise<Room[]> {\n\t\tconst table = this.findValidTable(parsedBuilding);\n\t\tconst tbody = table?.childNodes.find((child: any) => child.nodeName === \"tbody\");\n\n\t\tif (!tbody) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Create an array of promises for each room extraction\n\t\tconst roomPromises = tbody.childNodes\n\t\t\t.filter((child: any) => child.nodeName === \"tr\")\n\t\t\t.map(async (childTr: any) =>\n\t\t\t\tthis.extractRoomFromTr(childTr, buildingAddress, buildingShortName, buildingFullName)\n\t\t\t);\n\n\t\t// Wait for all promises to resolve\n\t\tconst resolvedRooms = await Promise.all(roomPromises);\n\n\t\t// Filter out any `null` results and return the valid rooms\n\t\treturn resolvedRooms.filter((room) => room !== null) as Room[];\n\t}\n\n\tprivate static async extractRoomFromTr(\n\t\ttr: any,\n\t\tbuildingAddress: string,\n\t\tbuildingShortName: string,\n\t\tbuildingFullName: string\n\t): Promise<Room | null> {\n\t\tconst roomDetails = this.extractRoomDetails(tr);\n\n\t\t// Fetch geolocation\n\t\tconst geolocation = await this.getGeolocation(buildingAddress);\n\t\tif (!geolocation) {\n\t\t\treturn null;\n\t\t} else if (!geolocation.lat || !geolocation.lon) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// If any required room details are missing, return null\n\t\tif (roomDetails === null) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Create and return the Room object\n\t\treturn new Room(\n\t\t\tbuildingFullName,\n\t\t\tbuildingShortName,\n\t\t\troomDetails.roomNumber,\n\t\t\tbuildingAddress,\n\t\t\tgeolocation.lat,\n\t\t\tgeolocation.lon,\n\t\t\troomDetails.capacity,\n\t\t\troomDetails.type,\n\t\t\troomDetails.furniture,\n\t\t\troomDetails.href\n\t\t);\n\t}\n\n\tprivate static extractRoomDetails(\n\t\ttr: any\n\t): { roomNumber: string; capacity: number; furniture: string; type: string; href: string } | null {\n\t\tconst details: Record<string, any> = {};\n\t\tfor (const childTd of tr.childNodes) {\n\t\t\tif (childTd.nodeName === \"td\") {\n\t\t\t\tconst tdClass = childTd.attrs.find((attr: any) => attr.name === \"class\")?.value;\n\t\t\t\tswitch (tdClass) {\n\t\t\t\t\tcase \"views-field views-field-field-room-number\":\n\t\t\t\t\t\tdetails.roomNumber = this.getLinkText(childTd);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"views-field views-field-field-room-capacity\":\n\t\t\t\t\t\tdetails.capacity = parseInt(this.getTextContent(childTd), 10);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"views-field views-field-field-room-furniture\":\n\t\t\t\t\t\tdetails.furniture = this.getTextContent(childTd);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"views-field views-field-field-room-type\":\n\t\t\t\t\t\tdetails.type = this.getTextContent(childTd);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"views-field views-field-nothing\":\n\t\t\t\t\t\tdetails.href = this.getLinkHref(childTd);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn typeof details.roomNumber === \"undefined\" ||\n\t\t\ttypeof details.capacity === \"undefined\" ||\n\t\t\ttypeof details.furniture === \"undefined\" ||\n\t\t\ttypeof details.type === \"undefined\" ||\n\t\t\ttypeof details.href === \"undefined\"\n\t\t\t? null\n\t\t\t: (details as { roomNumber: string; capacity: number; furniture: string; type: string; href: string });\n\t}\n\n\t// Helper function to fetch geolocation\n\tprivate static async getGeolocation(buildingAddress: string): Promise<GeoResponse | null> {\n\t\ttry {\n\t\t\tconst geolocation = await this.fetchGeolocation(buildingAddress);\n\t\t\tif (geolocation.lat !== undefined && geolocation.lon !== undefined) {\n\t\t\t\treturn geolocation;\n\t\t\t}\n\t\t\treturn null;\n\t\t} catch {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// Helper to extract href from <a> tag inside <td>\n\tprivate static getLinkHref(td: any): string | undefined {\n\t\tconst anchor = td.childNodes.find((child: any) => child.nodeName === \"a\");\n\t\treturn anchor?.attrs.find((attr: any) => attr.name === \"href\")?.value;\n\t}\n\n\t// Helper to extract text from <a> tag inside <td>\n\tprivate static getLinkText(td: any): string {\n\t\tconst anchor = td.childNodes.find((child: any) => child.nodeName === \"a\");\n\t\treturn (\n\t\t\tanchor?.childNodes\n\t\t\t\t.filter((child: any) => child.nodeName === \"#text\")\n\t\t\t\t.map((textNode: any) => textNode.value.trim())\n\t\t\t\t.join(\" \") || \"\"\n\t\t);\n\t}\n\n\t// Helper to extract text content from <td>\n\tprivate static getTextContent(td: any): string {\n\t\treturn td.childNodes\n\t\t\t.filter((child: any) => child.nodeName === \"#text\")\n\t\t\t.map((textNode: any) => textNode.value.trim())\n\t\t\t.join(\" \");\n\t}\n\n\t// Helper function to fetch the geolocation of an address\n\tprivate static async fetchGeolocation(address: string): Promise<GeoResponse> {\n\t\t// Encode the address using encodeURIComponent\n\t\tconst encodedAddress = encodeURIComponent(address);\n\t\tconst url = `http://cs310.students.cs.ubc.ca:11316/api/v1/project_team051/${encodedAddress}`;\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\thttp\n\t\t\t\t.get(url, (res) => {\n\t\t\t\t\tlet data = \"\";\n\n\t\t\t\t\t// Collect data chunks\n\t\t\t\t\tres.on(\"data\", (chunk) => {\n\t\t\t\t\t\tdata += chunk;\n\t\t\t\t\t});\n\n\t\t\t\t\t// Handle response completion\n\t\t\t\t\tres.on(\"end\", () => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst geoResponse: GeoResponse = JSON.parse(data);\n\t\t\t\t\t\t\tresolve(geoResponse);\n\t\t\t\t\t\t} catch {\n\t\t\t\t\t\t\treject(new Error(\"Failed to parse geolocation response\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.on(\"error\", () => {\n\t\t\t\t\treject(new Error(\"HTTP request failed\"));\n\t\t\t\t});\n\t\t});\n\t}\n\n\tprivate static findValidTable(document: any): any | null {\n\t\t// Recursive function to traverse the HTML tree and find the table with <td> elements of specific classes\n\t\treturn this.traverseTable(document);\n\t}\n\n\tprivate static traverseTable(node: any): any | null {\n\t\tif (node.nodeName === \"table\") {\n\t\t\tconst tbody = node.childNodes.find((child: any) => child.nodeName === \"tbody\");\n\t\t\tif (tbody && this.hasRequiredRoomTdElements(tbody)) {\n\t\t\t\treturn node; // Found a valid table\n\t\t\t}\n\t\t}\n\t\tif (node.childNodes) {\n\t\t\tfor (const child of node.childNodes) {\n\t\t\t\tconst result = this.traverseTable(child);\n\t\t\t\tif (result) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate static hasRequiredRoomTdElements(tbody: any): boolean {\n\t\tconst requiredClasses = new Set([\n\t\t\t\"views-field views-field-field-room-number\",\n\t\t\t\"views-field views-field-field-room-capacity\",\n\t\t\t\"views-field views-field-field-room-furniture\",\n\t\t\t\"views-field views-field-field-room-type\",\n\t\t\t\"views-field views-field-nothing\",\n\t\t]);\n\t\tconst tdElements = tbody.childNodes\n\t\t\t.filter((node: any) => node.nodeName === \"tr\")\n\t\t\t.flatMap((tr: any) => tr.childNodes.filter((td: any) => td.nodeName === \"td\"));\n\n\t\t// Collect the class values from the <td> elements\n\t\tconst tdClasses = tdElements.map((td: any) => td.attrs?.find((attr: any) => attr.name === \"class\")?.value || \"\");\n\n\t\t// Check if the required classes are present\n\t\tfor (const requiredClass of requiredClasses) {\n\t\t\tif (!tdClasses.includes(requiredClass)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"60027ac51ca6c5680b2337a22a45681d7db75b9d","contentHash":"764db03cc2a5d6b904a72e6590caa9f95099695a71fb09a063dd201175e270f5"},"/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/QueryChecker.ts":{"path":"/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/QueryChecker.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":25},"end":{"line":3,"column":52}},"2":{"start":{"line":4,"column":18},"end":{"line":26,"column":2}},"3":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"4":{"start":{"line":30,"column":12},"end":{"line":30,"column":76}},"5":{"start":{"line":32,"column":25},"end":{"line":32,"column":30}},"6":{"start":{"line":33,"column":26},"end":{"line":33,"column":57}},"7":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"8":{"start":{"line":35,"column":12},"end":{"line":35,"column":25}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},"10":{"start":{"line":38,"column":12},"end":{"line":38,"column":25}},"11":{"start":{"line":40,"column":8},"end":{"line":42,"column":9}},"12":{"start":{"line":41,"column":12},"end":{"line":41,"column":25}},"13":{"start":{"line":43,"column":8},"end":{"line":43,"column":20}},"14":{"start":{"line":46,"column":8},"end":{"line":52,"column":51}},"15":{"start":{"line":55,"column":8},"end":{"line":57,"column":9}},"16":{"start":{"line":56,"column":12},"end":{"line":56,"column":103}},"17":{"start":{"line":58,"column":8},"end":{"line":62,"column":9}},"18":{"start":{"line":59,"column":12},"end":{"line":61,"column":13}},"19":{"start":{"line":60,"column":16},"end":{"line":60,"column":41}},"20":{"start":{"line":63,"column":8},"end":{"line":63,"column":94}},"21":{"start":{"line":66,"column":8},"end":{"line":68,"column":9}},"22":{"start":{"line":67,"column":12},"end":{"line":67,"column":101}},"23":{"start":{"line":69,"column":8},"end":{"line":69,"column":67}},"24":{"start":{"line":70,"column":8},"end":{"line":70,"column":67}},"25":{"start":{"line":71,"column":8},"end":{"line":71,"column":20}},"26":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"27":{"start":{"line":75,"column":12},"end":{"line":75,"column":88}},"28":{"start":{"line":77,"column":8},"end":{"line":85,"column":9}},"29":{"start":{"line":78,"column":12},"end":{"line":80,"column":13}},"30":{"start":{"line":79,"column":16},"end":{"line":79,"column":124}},"31":{"start":{"line":81,"column":28},"end":{"line":81,"column":44}},"32":{"start":{"line":82,"column":12},"end":{"line":84,"column":13}},"33":{"start":{"line":83,"column":16},"end":{"line":83,"column":121}},"34":{"start":{"line":88,"column":8},"end":{"line":90,"column":9}},"35":{"start":{"line":89,"column":12},"end":{"line":89,"column":79}},"36":{"start":{"line":91,"column":8},"end":{"line":93,"column":9}},"37":{"start":{"line":92,"column":12},"end":{"line":92,"column":57}},"38":{"start":{"line":96,"column":21},"end":{"line":96,"column":43}},"39":{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},"40":{"start":{"line":98,"column":12},"end":{"line":98,"column":98}},"41":{"start":{"line":100,"column":25},"end":{"line":100,"column":32}},"42":{"start":{"line":101,"column":32},"end":{"line":101,"column":51}},"43":{"start":{"line":102,"column":8},"end":{"line":104,"column":9}},"44":{"start":{"line":103,"column":12},"end":{"line":103,"column":83}},"45":{"start":{"line":105,"column":8},"end":{"line":107,"column":9}},"46":{"start":{"line":106,"column":12},"end":{"line":106,"column":104}},"47":{"start":{"line":108,"column":30},"end":{"line":108,"column":58}},"48":{"start":{"line":109,"column":8},"end":{"line":111,"column":9}},"49":{"start":{"line":110,"column":12},"end":{"line":110,"column":112}},"50":{"start":{"line":112,"column":26},"end":{"line":112,"column":42}},"51":{"start":{"line":113,"column":28},"end":{"line":113,"column":54}},"52":{"start":{"line":114,"column":8},"end":{"line":117,"column":9}},"53":{"start":{"line":115,"column":12},"end":{"line":116,"column":55}},"54":{"start":{"line":118,"column":8},"end":{"line":120,"column":9}},"55":{"start":{"line":119,"column":12},"end":{"line":119,"column":126}},"56":{"start":{"line":121,"column":34},"end":{"line":121,"column":56}},"57":{"start":{"line":122,"column":8},"end":{"line":124,"column":9}},"58":{"start":{"line":123,"column":12},"end":{"line":123,"column":130}},"59":{"start":{"line":127,"column":8},"end":{"line":129,"column":9}},"60":{"start":{"line":128,"column":12},"end":{"line":128,"column":86}},"61":{"start":{"line":130,"column":8},"end":{"line":135,"column":9}},"62":{"start":{"line":131,"column":12},"end":{"line":134,"column":13}},"63":{"start":{"line":132,"column":33},"end":{"line":132,"column":58}},"64":{"start":{"line":133,"column":16},"end":{"line":133,"column":40}},"65":{"start":{"line":136,"column":8},"end":{"line":136,"column":57}},"66":{"start":{"line":137,"column":8},"end":{"line":141,"column":9}},"67":{"start":{"line":138,"column":12},"end":{"line":140,"column":13}},"68":{"start":{"line":139,"column":16},"end":{"line":139,"column":29}},"69":{"start":{"line":142,"column":8},"end":{"line":142,"column":20}},"70":{"start":{"line":145,"column":8},"end":{"line":147,"column":9}},"71":{"start":{"line":146,"column":12},"end":{"line":146,"column":103}},"72":{"start":{"line":148,"column":8},"end":{"line":162,"column":9}},"73":{"start":{"line":149,"column":12},"end":{"line":151,"column":13}},"74":{"start":{"line":150,"column":16},"end":{"line":150,"column":25}},"75":{"start":{"line":152,"column":12},"end":{"line":154,"column":13}},"76":{"start":{"line":153,"column":16},"end":{"line":153,"column":90}},"77":{"start":{"line":155,"column":35},"end":{"line":155,"column":49}},"78":{"start":{"line":156,"column":12},"end":{"line":158,"column":13}},"79":{"start":{"line":157,"column":16},"end":{"line":157,"column":97}},"80":{"start":{"line":159,"column":12},"end":{"line":161,"column":13}},"81":{"start":{"line":160,"column":16},"end":{"line":160,"column":94}},"82":{"start":{"line":165,"column":8},"end":{"line":185,"column":9}},"83":{"start":{"line":166,"column":12},"end":{"line":168,"column":13}},"84":{"start":{"line":167,"column":16},"end":{"line":167,"column":89}},"85":{"start":{"line":170,"column":13},"end":{"line":185,"column":9}},"86":{"start":{"line":171,"column":12},"end":{"line":173,"column":13}},"87":{"start":{"line":172,"column":16},"end":{"line":172,"column":97}},"88":{"start":{"line":174,"column":12},"end":{"line":178,"column":13}},"89":{"start":{"line":175,"column":16},"end":{"line":177,"column":17}},"90":{"start":{"line":176,"column":20},"end":{"line":176,"column":100}},"91":{"start":{"line":179,"column":12},"end":{"line":181,"column":13}},"92":{"start":{"line":180,"column":16},"end":{"line":180,"column":93}},"93":{"start":{"line":184,"column":12},"end":{"line":184,"column":77}},"94":{"start":{"line":186,"column":8},"end":{"line":186,"column":20}},"95":{"start":{"line":189,"column":8},"end":{"line":191,"column":9}},"96":{"start":{"line":190,"column":12},"end":{"line":190,"column":24}},"97":{"start":{"line":192,"column":8},"end":{"line":194,"column":9}},"98":{"start":{"line":193,"column":12},"end":{"line":193,"column":25}},"99":{"start":{"line":195,"column":8},"end":{"line":195,"column":20}},"100":{"start":{"line":198,"column":8},"end":{"line":200,"column":9}},"101":{"start":{"line":199,"column":12},"end":{"line":199,"column":25}},"102":{"start":{"line":201,"column":8},"end":{"line":207,"column":9}},"103":{"start":{"line":202,"column":26},"end":{"line":202,"column":49}},"104":{"start":{"line":203,"column":12},"end":{"line":205,"column":13}},"105":{"start":{"line":204,"column":16},"end":{"line":204,"column":91}},"106":{"start":{"line":206,"column":12},"end":{"line":206,"column":70}},"107":{"start":{"line":206,"column":38},"end":{"line":206,"column":68}},"108":{"start":{"line":208,"column":8},"end":{"line":213,"column":9}},"109":{"start":{"line":209,"column":12},"end":{"line":211,"column":13}},"110":{"start":{"line":210,"column":16},"end":{"line":210,"column":89}},"111":{"start":{"line":212,"column":12},"end":{"line":212,"column":59}},"112":{"start":{"line":214,"column":8},"end":{"line":216,"column":9}},"113":{"start":{"line":215,"column":12},"end":{"line":215,"column":89}},"114":{"start":{"line":217,"column":8},"end":{"line":219,"column":9}},"115":{"start":{"line":218,"column":12},"end":{"line":218,"column":63}},"116":{"start":{"line":220,"column":8},"end":{"line":220,"column":21}},"117":{"start":{"line":223,"column":8},"end":{"line":225,"column":9}},"118":{"start":{"line":224,"column":12},"end":{"line":224,"column":90}},"119":{"start":{"line":226,"column":21},"end":{"line":226,"column":39}},"120":{"start":{"line":227,"column":8},"end":{"line":229,"column":9}},"121":{"start":{"line":228,"column":12},"end":{"line":228,"column":93}},"122":{"start":{"line":230,"column":20},"end":{"line":230,"column":27}},"123":{"start":{"line":231,"column":8},"end":{"line":233,"column":9}},"124":{"start":{"line":232,"column":12},"end":{"line":232,"column":25}},"125":{"start":{"line":234,"column":31},"end":{"line":234,"column":45}},"126":{"start":{"line":235,"column":8},"end":{"line":237,"column":9}},"127":{"start":{"line":236,"column":12},"end":{"line":236,"column":93}},"128":{"start":{"line":238,"column":8},"end":{"line":240,"column":9}},"129":{"start":{"line":239,"column":12},"end":{"line":239,"column":25}},"130":{"start":{"line":241,"column":22},"end":{"line":241,"column":32}},"131":{"start":{"line":242,"column":8},"end":{"line":244,"column":9}},"132":{"start":{"line":243,"column":12},"end":{"line":243,"column":89}},"133":{"start":{"line":245,"column":8},"end":{"line":245,"column":20}},"134":{"start":{"line":248,"column":8},"end":{"line":250,"column":9}},"135":{"start":{"line":249,"column":12},"end":{"line":249,"column":90}},"136":{"start":{"line":251,"column":21},"end":{"line":251,"column":39}},"137":{"start":{"line":252,"column":8},"end":{"line":254,"column":9}},"138":{"start":{"line":253,"column":12},"end":{"line":253,"column":93}},"139":{"start":{"line":255,"column":20},"end":{"line":255,"column":27}},"140":{"start":{"line":256,"column":8},"end":{"line":258,"column":9}},"141":{"start":{"line":257,"column":12},"end":{"line":257,"column":25}},"142":{"start":{"line":259,"column":31},"end":{"line":259,"column":45}},"143":{"start":{"line":260,"column":8},"end":{"line":262,"column":9}},"144":{"start":{"line":261,"column":12},"end":{"line":261,"column":93}},"145":{"start":{"line":263,"column":8},"end":{"line":265,"column":9}},"146":{"start":{"line":264,"column":12},"end":{"line":264,"column":25}},"147":{"start":{"line":266,"column":22},"end":{"line":266,"column":32}},"148":{"start":{"line":267,"column":8},"end":{"line":269,"column":9}},"149":{"start":{"line":268,"column":12},"end":{"line":268,"column":90}},"150":{"start":{"line":270,"column":8},"end":{"line":270,"column":20}},"151":{"start":{"line":273,"column":0},"end":{"line":273,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":31},"end":{"line":44,"column":5}},"line":28},"1":{"name":"(anonymous_1)","decl":{"start":{"line":45,"column":4},"end":{"line":45,"column":5}},"loc":{"start":{"line":45,"column":30},"end":{"line":53,"column":5}},"line":45},"2":{"name":"(anonymous_2)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":28},"end":{"line":64,"column":5}},"line":54},"3":{"name":"(anonymous_3)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":49},"end":{"line":72,"column":5}},"line":65},"4":{"name":"(anonymous_4)","decl":{"start":{"line":73,"column":4},"end":{"line":73,"column":5}},"loc":{"start":{"line":73,"column":42},"end":{"line":86,"column":5}},"line":73},"5":{"name":"(anonymous_5)","decl":{"start":{"line":87,"column":4},"end":{"line":87,"column":5}},"loc":{"start":{"line":87,"column":42},"end":{"line":94,"column":5}},"line":87},"6":{"name":"(anonymous_6)","decl":{"start":{"line":95,"column":4},"end":{"line":95,"column":5}},"loc":{"start":{"line":95,"column":44},"end":{"line":125,"column":5}},"line":95},"7":{"name":"(anonymous_7)","decl":{"start":{"line":126,"column":4},"end":{"line":126,"column":5}},"loc":{"start":{"line":126,"column":60},"end":{"line":143,"column":5}},"line":126},"8":{"name":"(anonymous_8)","decl":{"start":{"line":144,"column":4},"end":{"line":144,"column":5}},"loc":{"start":{"line":144,"column":40},"end":{"line":163,"column":5}},"line":144},"9":{"name":"(anonymous_9)","decl":{"start":{"line":164,"column":4},"end":{"line":164,"column":5}},"loc":{"start":{"line":164,"column":37},"end":{"line":187,"column":5}},"line":164},"10":{"name":"(anonymous_10)","decl":{"start":{"line":188,"column":4},"end":{"line":188,"column":5}},"loc":{"start":{"line":188,"column":39},"end":{"line":196,"column":5}},"line":188},"11":{"name":"(anonymous_11)","decl":{"start":{"line":197,"column":4},"end":{"line":197,"column":5}},"loc":{"start":{"line":197,"column":35},"end":{"line":221,"column":5}},"line":197},"12":{"name":"(anonymous_12)","decl":{"start":{"line":206,"column":31},"end":{"line":206,"column":32}},"loc":{"start":{"line":206,"column":38},"end":{"line":206,"column":68}},"line":206},"13":{"name":"(anonymous_13)","decl":{"start":{"line":222,"column":4},"end":{"line":222,"column":5}},"loc":{"start":{"line":222,"column":39},"end":{"line":246,"column":5}},"line":222},"14":{"name":"(anonymous_14)","decl":{"start":{"line":247,"column":4},"end":{"line":247,"column":5}},"loc":{"start":{"line":247,"column":39},"end":{"line":271,"column":5}},"line":247}},"branchMap":{"0":{"loc":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},{"start":{"line":29,"column":8},"end":{"line":31,"column":9}}],"line":29},"1":{"loc":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},{"start":{"line":34,"column":8},"end":{"line":36,"column":9}}],"line":34},"2":{"loc":{"start":{"line":34,"column":12},"end":{"line":34,"column":99}},"type":"binary-expr","locations":[{"start":{"line":34,"column":12},"end":{"line":34,"column":36}},{"start":{"line":34,"column":40},"end":{"line":34,"column":99}}],"line":34},"3":{"loc":{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},{"start":{"line":37,"column":8},"end":{"line":39,"column":9}}],"line":37},"4":{"loc":{"start":{"line":40,"column":8},"end":{"line":42,"column":9}},"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":42,"column":9}},{"start":{"line":40,"column":8},"end":{"line":42,"column":9}}],"line":40},"5":{"loc":{"start":{"line":46,"column":16},"end":{"line":52,"column":49}},"type":"binary-expr","locations":[{"start":{"line":46,"column":16},"end":{"line":46,"column":41}},{"start":{"line":47,"column":12},"end":{"line":47,"column":26}},{"start":{"line":48,"column":12},"end":{"line":48,"column":28}},{"start":{"line":49,"column":12},"end":{"line":49,"column":30}},{"start":{"line":50,"column":12},"end":{"line":50,"column":45}},{"start":{"line":51,"column":12},"end":{"line":51,"column":34}},{"start":{"line":52,"column":12},"end":{"line":52,"column":49}}],"line":46},"6":{"loc":{"start":{"line":55,"column":8},"end":{"line":57,"column":9}},"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":57,"column":9}},{"start":{"line":55,"column":8},"end":{"line":57,"column":9}}],"line":55},"7":{"loc":{"start":{"line":55,"column":12},"end":{"line":55,"column":88}},"type":"binary-expr","locations":[{"start":{"line":55,"column":12},"end":{"line":55,"column":50}},{"start":{"line":55,"column":54},"end":{"line":55,"column":88}}],"line":55},"8":{"loc":{"start":{"line":59,"column":12},"end":{"line":61,"column":13}},"type":"if","locations":[{"start":{"line":59,"column":12},"end":{"line":61,"column":13}},{"start":{"line":59,"column":12},"end":{"line":61,"column":13}}],"line":59},"9":{"loc":{"start":{"line":66,"column":8},"end":{"line":68,"column":9}},"type":"if","locations":[{"start":{"line":66,"column":8},"end":{"line":68,"column":9}},{"start":{"line":66,"column":8},"end":{"line":68,"column":9}}],"line":66},"10":{"loc":{"start":{"line":66,"column":12},"end":{"line":66,"column":62}},"type":"binary-expr","locations":[{"start":{"line":66,"column":12},"end":{"line":66,"column":35}},{"start":{"line":66,"column":39},"end":{"line":66,"column":62}}],"line":66},"11":{"loc":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"type":"if","locations":[{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},{"start":{"line":74,"column":8},"end":{"line":76,"column":9}}],"line":74},"12":{"loc":{"start":{"line":74,"column":12},"end":{"line":74,"column":55}},"type":"binary-expr","locations":[{"start":{"line":74,"column":12},"end":{"line":74,"column":33}},{"start":{"line":74,"column":37},"end":{"line":74,"column":55}}],"line":74},"13":{"loc":{"start":{"line":78,"column":12},"end":{"line":80,"column":13}},"type":"if","locations":[{"start":{"line":78,"column":12},"end":{"line":80,"column":13}},{"start":{"line":78,"column":12},"end":{"line":80,"column":13}}],"line":78},"14":{"loc":{"start":{"line":78,"column":16},"end":{"line":78,"column":65}},"type":"binary-expr","locations":[{"start":{"line":78,"column":16},"end":{"line":78,"column":41}},{"start":{"line":78,"column":45},"end":{"line":78,"column":65}}],"line":78},"15":{"loc":{"start":{"line":82,"column":12},"end":{"line":84,"column":13}},"type":"if","locations":[{"start":{"line":82,"column":12},"end":{"line":84,"column":13}},{"start":{"line":82,"column":12},"end":{"line":84,"column":13}}],"line":82},"16":{"loc":{"start":{"line":88,"column":8},"end":{"line":90,"column":9}},"type":"if","locations":[{"start":{"line":88,"column":8},"end":{"line":90,"column":9}},{"start":{"line":88,"column":8},"end":{"line":90,"column":9}}],"line":88},"17":{"loc":{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},"type":"if","locations":[{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},{"start":{"line":97,"column":8},"end":{"line":99,"column":9}}],"line":97},"18":{"loc":{"start":{"line":102,"column":8},"end":{"line":104,"column":9}},"type":"if","locations":[{"start":{"line":102,"column":8},"end":{"line":104,"column":9}},{"start":{"line":102,"column":8},"end":{"line":104,"column":9}}],"line":102},"19":{"loc":{"start":{"line":105,"column":8},"end":{"line":107,"column":9}},"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":107,"column":9}},{"start":{"line":105,"column":8},"end":{"line":107,"column":9}}],"line":105},"20":{"loc":{"start":{"line":105,"column":12},"end":{"line":105,"column":75}},"type":"binary-expr","locations":[{"start":{"line":105,"column":12},"end":{"line":105,"column":47}},{"start":{"line":105,"column":51},"end":{"line":105,"column":75}}],"line":105},"21":{"loc":{"start":{"line":109,"column":8},"end":{"line":111,"column":9}},"type":"if","locations":[{"start":{"line":109,"column":8},"end":{"line":111,"column":9}},{"start":{"line":109,"column":8},"end":{"line":111,"column":9}}],"line":109},"22":{"loc":{"start":{"line":114,"column":8},"end":{"line":117,"column":9}},"type":"if","locations":[{"start":{"line":114,"column":8},"end":{"line":117,"column":9}},{"start":{"line":114,"column":8},"end":{"line":117,"column":9}}],"line":114},"23":{"loc":{"start":{"line":118,"column":8},"end":{"line":120,"column":9}},"type":"if","locations":[{"start":{"line":118,"column":8},"end":{"line":120,"column":9}},{"start":{"line":118,"column":8},"end":{"line":120,"column":9}}],"line":118},"24":{"loc":{"start":{"line":118,"column":12},"end":{"line":118,"column":73}},"type":"binary-expr","locations":[{"start":{"line":118,"column":12},"end":{"line":118,"column":43}},{"start":{"line":118,"column":47},"end":{"line":118,"column":73}}],"line":118},"25":{"loc":{"start":{"line":122,"column":8},"end":{"line":124,"column":9}},"type":"if","locations":[{"start":{"line":122,"column":8},"end":{"line":124,"column":9}},{"start":{"line":122,"column":8},"end":{"line":124,"column":9}}],"line":122},"26":{"loc":{"start":{"line":127,"column":8},"end":{"line":129,"column":9}},"type":"if","locations":[{"start":{"line":127,"column":8},"end":{"line":129,"column":9}},{"start":{"line":127,"column":8},"end":{"line":129,"column":9}}],"line":127},"27":{"loc":{"start":{"line":127,"column":12},"end":{"line":127,"column":59}},"type":"binary-expr","locations":[{"start":{"line":127,"column":12},"end":{"line":127,"column":39}},{"start":{"line":127,"column":43},"end":{"line":127,"column":59}}],"line":127},"28":{"loc":{"start":{"line":130,"column":8},"end":{"line":135,"column":9}},"type":"if","locations":[{"start":{"line":130,"column":8},"end":{"line":135,"column":9}},{"start":{"line":130,"column":8},"end":{"line":135,"column":9}}],"line":130},"29":{"loc":{"start":{"line":137,"column":8},"end":{"line":141,"column":9}},"type":"if","locations":[{"start":{"line":137,"column":8},"end":{"line":141,"column":9}},{"start":{"line":137,"column":8},"end":{"line":141,"column":9}}],"line":137},"30":{"loc":{"start":{"line":138,"column":12},"end":{"line":140,"column":13}},"type":"if","locations":[{"start":{"line":138,"column":12},"end":{"line":140,"column":13}},{"start":{"line":138,"column":12},"end":{"line":140,"column":13}}],"line":138},"31":{"loc":{"start":{"line":145,"column":8},"end":{"line":147,"column":9}},"type":"if","locations":[{"start":{"line":145,"column":8},"end":{"line":147,"column":9}},{"start":{"line":145,"column":8},"end":{"line":147,"column":9}}],"line":145},"32":{"loc":{"start":{"line":145,"column":12},"end":{"line":145,"column":59}},"type":"binary-expr","locations":[{"start":{"line":145,"column":12},"end":{"line":145,"column":35}},{"start":{"line":145,"column":39},"end":{"line":145,"column":59}}],"line":145},"33":{"loc":{"start":{"line":149,"column":12},"end":{"line":151,"column":13}},"type":"if","locations":[{"start":{"line":149,"column":12},"end":{"line":151,"column":13}},{"start":{"line":149,"column":12},"end":{"line":151,"column":13}}],"line":149},"34":{"loc":{"start":{"line":152,"column":12},"end":{"line":154,"column":13}},"type":"if","locations":[{"start":{"line":152,"column":12},"end":{"line":154,"column":13}},{"start":{"line":152,"column":12},"end":{"line":154,"column":13}}],"line":152},"35":{"loc":{"start":{"line":156,"column":12},"end":{"line":158,"column":13}},"type":"if","locations":[{"start":{"line":156,"column":12},"end":{"line":158,"column":13}},{"start":{"line":156,"column":12},"end":{"line":158,"column":13}}],"line":156},"36":{"loc":{"start":{"line":159,"column":12},"end":{"line":161,"column":13}},"type":"if","locations":[{"start":{"line":159,"column":12},"end":{"line":161,"column":13}},{"start":{"line":159,"column":12},"end":{"line":161,"column":13}}],"line":159},"37":{"loc":{"start":{"line":165,"column":8},"end":{"line":185,"column":9}},"type":"if","locations":[{"start":{"line":165,"column":8},"end":{"line":185,"column":9}},{"start":{"line":165,"column":8},"end":{"line":185,"column":9}}],"line":165},"38":{"loc":{"start":{"line":166,"column":12},"end":{"line":168,"column":13}},"type":"if","locations":[{"start":{"line":166,"column":12},"end":{"line":168,"column":13}},{"start":{"line":166,"column":12},"end":{"line":168,"column":13}}],"line":166},"39":{"loc":{"start":{"line":170,"column":13},"end":{"line":185,"column":9}},"type":"if","locations":[{"start":{"line":170,"column":13},"end":{"line":185,"column":9}},{"start":{"line":170,"column":13},"end":{"line":185,"column":9}}],"line":170},"40":{"loc":{"start":{"line":171,"column":12},"end":{"line":173,"column":13}},"type":"if","locations":[{"start":{"line":171,"column":12},"end":{"line":173,"column":13}},{"start":{"line":171,"column":12},"end":{"line":173,"column":13}}],"line":171},"41":{"loc":{"start":{"line":171,"column":16},"end":{"line":171,"column":84}},"type":"binary-expr","locations":[{"start":{"line":171,"column":16},"end":{"line":171,"column":27}},{"start":{"line":171,"column":31},"end":{"line":171,"column":57}},{"start":{"line":171,"column":61},"end":{"line":171,"column":84}}],"line":171},"42":{"loc":{"start":{"line":175,"column":16},"end":{"line":177,"column":17}},"type":"if","locations":[{"start":{"line":175,"column":16},"end":{"line":177,"column":17}},{"start":{"line":175,"column":16},"end":{"line":177,"column":17}}],"line":175},"43":{"loc":{"start":{"line":179,"column":12},"end":{"line":181,"column":13}},"type":"if","locations":[{"start":{"line":179,"column":12},"end":{"line":181,"column":13}},{"start":{"line":179,"column":12},"end":{"line":181,"column":13}}],"line":179},"44":{"loc":{"start":{"line":179,"column":16},"end":{"line":179,"column":64}},"type":"binary-expr","locations":[{"start":{"line":179,"column":16},"end":{"line":179,"column":25}},{"start":{"line":179,"column":29},"end":{"line":179,"column":64}}],"line":179},"45":{"loc":{"start":{"line":189,"column":8},"end":{"line":191,"column":9}},"type":"if","locations":[{"start":{"line":189,"column":8},"end":{"line":191,"column":9}},{"start":{"line":189,"column":8},"end":{"line":191,"column":9}}],"line":189},"46":{"loc":{"start":{"line":192,"column":8},"end":{"line":194,"column":9}},"type":"if","locations":[{"start":{"line":192,"column":8},"end":{"line":194,"column":9}},{"start":{"line":192,"column":8},"end":{"line":194,"column":9}}],"line":192},"47":{"loc":{"start":{"line":198,"column":8},"end":{"line":200,"column":9}},"type":"if","locations":[{"start":{"line":198,"column":8},"end":{"line":200,"column":9}},{"start":{"line":198,"column":8},"end":{"line":200,"column":9}}],"line":198},"48":{"loc":{"start":{"line":198,"column":12},"end":{"line":198,"column":57}},"type":"binary-expr","locations":[{"start":{"line":198,"column":12},"end":{"line":198,"column":38}},{"start":{"line":198,"column":42},"end":{"line":198,"column":57}}],"line":198},"49":{"loc":{"start":{"line":201,"column":8},"end":{"line":207,"column":9}},"type":"if","locations":[{"start":{"line":201,"column":8},"end":{"line":207,"column":9}},{"start":{"line":201,"column":8},"end":{"line":207,"column":9}}],"line":201},"50":{"loc":{"start":{"line":201,"column":12},"end":{"line":201,"column":45}},"type":"binary-expr","locations":[{"start":{"line":201,"column":12},"end":{"line":201,"column":27}},{"start":{"line":201,"column":31},"end":{"line":201,"column":45}}],"line":201},"51":{"loc":{"start":{"line":202,"column":26},"end":{"line":202,"column":49}},"type":"binary-expr","locations":[{"start":{"line":202,"column":26},"end":{"line":202,"column":36}},{"start":{"line":202,"column":40},"end":{"line":202,"column":49}}],"line":202},"52":{"loc":{"start":{"line":203,"column":12},"end":{"line":205,"column":13}},"type":"if","locations":[{"start":{"line":203,"column":12},"end":{"line":205,"column":13}},{"start":{"line":203,"column":12},"end":{"line":205,"column":13}}],"line":203},"53":{"loc":{"start":{"line":203,"column":16},"end":{"line":203,"column":59}},"type":"binary-expr","locations":[{"start":{"line":203,"column":16},"end":{"line":203,"column":37}},{"start":{"line":203,"column":41},"end":{"line":203,"column":59}}],"line":203},"54":{"loc":{"start":{"line":208,"column":8},"end":{"line":213,"column":9}},"type":"if","locations":[{"start":{"line":208,"column":8},"end":{"line":213,"column":9}},{"start":{"line":208,"column":8},"end":{"line":213,"column":9}}],"line":208},"55":{"loc":{"start":{"line":209,"column":12},"end":{"line":211,"column":13}},"type":"if","locations":[{"start":{"line":209,"column":12},"end":{"line":211,"column":13}},{"start":{"line":209,"column":12},"end":{"line":211,"column":13}}],"line":209},"56":{"loc":{"start":{"line":214,"column":8},"end":{"line":216,"column":9}},"type":"if","locations":[{"start":{"line":214,"column":8},"end":{"line":216,"column":9}},{"start":{"line":214,"column":8},"end":{"line":216,"column":9}}],"line":214},"57":{"loc":{"start":{"line":214,"column":12},"end":{"line":214,"column":62}},"type":"binary-expr","locations":[{"start":{"line":214,"column":12},"end":{"line":214,"column":26}},{"start":{"line":214,"column":30},"end":{"line":214,"column":44}},{"start":{"line":214,"column":48},"end":{"line":214,"column":62}}],"line":214},"58":{"loc":{"start":{"line":215,"column":41},"end":{"line":215,"column":76}},"type":"binary-expr","locations":[{"start":{"line":215,"column":41},"end":{"line":215,"column":50}},{"start":{"line":215,"column":54},"end":{"line":215,"column":63}},{"start":{"line":215,"column":67},"end":{"line":215,"column":76}}],"line":215},"59":{"loc":{"start":{"line":217,"column":8},"end":{"line":219,"column":9}},"type":"if","locations":[{"start":{"line":217,"column":8},"end":{"line":219,"column":9}},{"start":{"line":217,"column":8},"end":{"line":219,"column":9}}],"line":217},"60":{"loc":{"start":{"line":223,"column":8},"end":{"line":225,"column":9}},"type":"if","locations":[{"start":{"line":223,"column":8},"end":{"line":225,"column":9}},{"start":{"line":223,"column":8},"end":{"line":225,"column":9}}],"line":223},"61":{"loc":{"start":{"line":223,"column":12},"end":{"line":223,"column":55}},"type":"binary-expr","locations":[{"start":{"line":223,"column":12},"end":{"line":223,"column":37}},{"start":{"line":223,"column":41},"end":{"line":223,"column":55}}],"line":223},"62":{"loc":{"start":{"line":227,"column":8},"end":{"line":229,"column":9}},"type":"if","locations":[{"start":{"line":227,"column":8},"end":{"line":229,"column":9}},{"start":{"line":227,"column":8},"end":{"line":229,"column":9}}],"line":227},"63":{"loc":{"start":{"line":231,"column":8},"end":{"line":233,"column":9}},"type":"if","locations":[{"start":{"line":231,"column":8},"end":{"line":233,"column":9}},{"start":{"line":231,"column":8},"end":{"line":233,"column":9}}],"line":231},"64":{"loc":{"start":{"line":235,"column":8},"end":{"line":237,"column":9}},"type":"if","locations":[{"start":{"line":235,"column":8},"end":{"line":237,"column":9}},{"start":{"line":235,"column":8},"end":{"line":237,"column":9}}],"line":235},"65":{"loc":{"start":{"line":238,"column":8},"end":{"line":240,"column":9}},"type":"if","locations":[{"start":{"line":238,"column":8},"end":{"line":240,"column":9}},{"start":{"line":238,"column":8},"end":{"line":240,"column":9}}],"line":238},"66":{"loc":{"start":{"line":242,"column":8},"end":{"line":244,"column":9}},"type":"if","locations":[{"start":{"line":242,"column":8},"end":{"line":244,"column":9}},{"start":{"line":242,"column":8},"end":{"line":244,"column":9}}],"line":242},"67":{"loc":{"start":{"line":248,"column":8},"end":{"line":250,"column":9}},"type":"if","locations":[{"start":{"line":248,"column":8},"end":{"line":250,"column":9}},{"start":{"line":248,"column":8},"end":{"line":250,"column":9}}],"line":248},"68":{"loc":{"start":{"line":248,"column":12},"end":{"line":248,"column":55}},"type":"binary-expr","locations":[{"start":{"line":248,"column":12},"end":{"line":248,"column":37}},{"start":{"line":248,"column":41},"end":{"line":248,"column":55}}],"line":248},"69":{"loc":{"start":{"line":252,"column":8},"end":{"line":254,"column":9}},"type":"if","locations":[{"start":{"line":252,"column":8},"end":{"line":254,"column":9}},{"start":{"line":252,"column":8},"end":{"line":254,"column":9}}],"line":252},"70":{"loc":{"start":{"line":256,"column":8},"end":{"line":258,"column":9}},"type":"if","locations":[{"start":{"line":256,"column":8},"end":{"line":258,"column":9}},{"start":{"line":256,"column":8},"end":{"line":258,"column":9}}],"line":256},"71":{"loc":{"start":{"line":260,"column":8},"end":{"line":262,"column":9}},"type":"if","locations":[{"start":{"line":260,"column":8},"end":{"line":262,"column":9}},{"start":{"line":260,"column":8},"end":{"line":262,"column":9}}],"line":260},"72":{"loc":{"start":{"line":263,"column":8},"end":{"line":265,"column":9}},"type":"if","locations":[{"start":{"line":263,"column":8},"end":{"line":265,"column":9}},{"start":{"line":263,"column":8},"end":{"line":265,"column":9}}],"line":263},"73":{"loc":{"start":{"line":267,"column":8},"end":{"line":269,"column":9}},"type":"if","locations":[{"start":{"line":267,"column":8},"end":{"line":269,"column":9}},{"start":{"line":267,"column":8},"end":{"line":269,"column":9}}],"line":267}},"s":{"0":1,"1":1,"2":1,"3":58,"4":2,"5":56,"6":56,"7":55,"8":0,"9":54,"10":0,"11":51,"12":2,"13":45,"14":58,"15":101,"16":1,"17":100,"18":100,"19":100,"20":0,"21":15,"22":0,"23":15,"24":15,"25":14,"26":15,"27":0,"28":15,"29":15,"30":0,"31":15,"32":15,"33":0,"34":15,"35":0,"36":15,"37":15,"38":15,"39":15,"40":0,"41":15,"42":15,"43":15,"44":0,"45":15,"46":0,"47":15,"48":15,"49":0,"50":15,"51":15,"52":15,"53":0,"54":15,"55":0,"56":15,"57":15,"58":1,"59":54,"60":0,"61":54,"62":14,"63":14,"64":14,"65":54,"66":52,"67":46,"68":0,"69":51,"70":54,"71":0,"72":54,"73":124,"74":14,"75":110,"76":0,"77":110,"78":110,"79":1,"80":109,"81":1,"82":46,"83":44,"84":1,"85":2,"86":2,"87":0,"88":2,"89":2,"90":0,"91":2,"92":0,"93":0,"94":45,"95":51,"96":4,"97":47,"98":2,"99":41,"100":60,"101":0,"102":60,"103":9,"104":9,"105":1,"106":8,"107":11,"108":51,"109":2,"110":0,"111":2,"112":49,"113":26,"114":23,"115":21,"116":2,"117":26,"118":0,"119":26,"120":26,"121":0,"122":26,"123":26,"124":0,"125":26,"126":26,"127":1,"128":25,"129":0,"130":25,"131":25,"132":0,"133":25,"134":21,"135":0,"136":21,"137":21,"138":0,"139":21,"140":21,"141":0,"142":21,"143":21,"144":0,"145":21,"146":0,"147":21,"148":21,"149":2,"150":19,"151":1},"f":{"0":58,"1":58,"2":101,"3":15,"4":15,"5":15,"6":15,"7":54,"8":54,"9":46,"10":51,"11":60,"12":11,"13":26,"14":21},"b":{"0":[2,56],"1":[0,54],"2":[55,15],"3":[0,51],"4":[2,45],"5":[58,58,58,57,57,57,57],"6":[1,100],"7":[101,101],"8":[100,0],"9":[0,15],"10":[15,15],"11":[0,15],"12":[15,15],"13":[0,15],"14":[15,15],"15":[0,15],"16":[0,15],"17":[0,15],"18":[0,15],"19":[0,15],"20":[15,15],"21":[0,15],"22":[0,15],"23":[0,15],"24":[15,15],"25":[1,14],"26":[0,54],"27":[54,54],"28":[14,40],"29":[46,6],"30":[0,45],"31":[0,54],"32":[54,54],"33":[14,110],"34":[0,110],"35":[1,109],"36":[1,108],"37":[44,2],"38":[1,43],"39":[2,0],"40":[0,2],"41":[2,2,2],"42":[0,2],"43":[0,2],"44":[2,2],"45":[4,47],"46":[2,41],"47":[0,60],"48":[60,60],"49":[9,51],"50":[60,54],"51":[9,3],"52":[1,8],"53":[9,9],"54":[2,49],"55":[0,2],"56":[26,23],"57":[49,29,26],"58":[26,6,3],"59":[21,2],"60":[0,26],"61":[26,26],"62":[0,26],"63":[0,26],"64":[1,25],"65":[0,25],"66":[0,25],"67":[0,21],"68":[21,21],"69":[0,21],"70":[0,21],"71":[0,21],"72":[0,21],"73":[2,19]},"inputSourceMap":{"version":3,"file":"/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/QueryChecker.ts","sources":["/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/QueryChecker.ts"],"names":[],"mappings":"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","sourcesContent":["import { InsightError } from \"./IInsightFacade\";\n\nexport interface Query {\n\tWHERE: any;\n\tOPTIONS: {\n\t\tCOLUMNS: string[];\n\t\tORDER?: any;\n\t};\n\tTRANSFORMATIONS?: {\n\t\tGROUP: string[];\n\t\tAPPLY: Record<string, Record<string, string>>[];\n\t};\n}\n\n// Define valid dataset fields\nconst validKeys = new Set([\n\t\"avg\",\n\t\"pass\",\n\t\"fail\",\n\t\"audit\",\n\t\"year\",\n\t\"lat\",\n\t\"lon\",\n\t\"seats\",\n\t\"dept\",\n\t\"id\",\n\t\"instructor\",\n\t\"title\",\n\t\"uuid\",\n\t\"fullname\",\n\t\"shortname\",\n\t\"number\",\n\t\"name\",\n\t\"address\",\n\t\"type\",\n\t\"furniture\",\n\t\"href\",\n]);\n\nexport default class QueryChecker {\n\t// Validate the basic format of the query object\n\tpublic validateQueryFormat(query: unknown): boolean {\n\t\t// Check if the input is a valid query object\n\t\tif (!this.isValidQueryObject(query)) {\n\t\t\tthrow new InsightError(\"Invalid query format\");\n\t\t}\n\n\t\tconst queryObj = query as Query;\n\n\t\t// Extract dataset ID from the query\n\t\tconst datasetId = this.extractDatasetId(queryObj);\n\n\t\t// Validate the Transformation clause\n\t\tif (queryObj.TRANSFORMATIONS && !this.checkTransClause(queryObj.TRANSFORMATIONS, datasetId)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Validate the OPTIONS clause\n\t\tif (!this.checkOptionsClause(queryObj.OPTIONS, datasetId, queryObj.TRANSFORMATIONS)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Validate the WHERE clause format\n\t\tif (!this.checkWhereClause(queryObj.WHERE, datasetId)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t// Check if the input is a valid query object\n\tprivate isValidQueryObject(query: unknown): query is Query {\n\t\treturn (\n\t\t\ttypeof query === \"object\" &&\n\t\t\tquery !== null &&\n\t\t\t\"WHERE\" in query &&\n\t\t\t\"OPTIONS\" in query &&\n\t\t\ttypeof (query as any).OPTIONS === \"object\" &&\n\t\t\t(query as any).OPTIONS !== null &&\n\t\t\tArray.isArray((query as any).OPTIONS?.COLUMNS)\n\t\t);\n\t}\n\n\t// Extract dataset ID from COLUMNS\n\tpublic extractDatasetId(query: Query): string {\n\t\tif (!Array.isArray(query.OPTIONS?.COLUMNS) || query.OPTIONS.COLUMNS.length === 0) {\n\t\t\tthrow new InsightError(\"OPTIONS must contain a non-empty COLUMNS array.\");\n\t\t}\n\n\t\tfor (const col of query.OPTIONS.COLUMNS) {\n\t\t\tif (col.includes(\"_\")) {\n\t\t\t\treturn col.split(\"_\")[0];\n\t\t\t}\n\t\t}\n\n\t\tthrow new InsightError(\"Could not extract dataset ID from COLUMNS.\");\n\t}\n\n\t// Validate the Transformation clause\n\tprivate checkTransClause(transformations: Query[\"TRANSFORMATIONS\"], datasetId: string): boolean {\n\t\tif (!transformations?.GROUP || !transformations?.APPLY) {\n\t\t\tthrow new InsightError(\"TRANSFORMATIONS must contain GROUP and APPLY.\");\n\t\t}\n\t\tthis.validateGroupClause(transformations.GROUP, datasetId);\n\t\tthis.validateApplyClause(transformations.APPLY, datasetId);\n\t\treturn true;\n\t}\n\n\t// Validate the Transformation Group clause\n\tprivate validateGroupClause(group: string[], datasetId: string): void {\n\t\tif (!Array.isArray(group) || group.length === 0) {\n\t\t\tthrow new InsightError(\"GROUP must be a non-empty array.\");\n\t\t}\n\t\tfor (const field of group) {\n\t\t\tif (typeof field !== \"string\" || !field.includes(\"_\")) {\n\t\t\t\tthrow new InsightError(\"Each GROUP entry must be a string in the format 'dataset_field'.\");\n\t\t\t}\n\t\t\tconst [keyId] = field.split(\"_\");\n\t\t\tif (keyId !== datasetId) {\n\t\t\t\tthrow new InsightError(`GROUP field ${field} does not match dataset ID: ${datasetId}.`);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Validate the Transformation Apply clause\n\tprivate validateApplyClause(apply: Record<string, Record<string, string>>[], datasetId: string): void {\n\t\tif (!Array.isArray(apply)) {\n\t\t\tthrow new InsightError(\"APPLY must be an array.\");\n\t\t}\n\t\tfor (const applyRule of apply) {\n\t\t\tthis.validateApplyRule(applyRule, datasetId);\n\t\t}\n\t}\n\n\t// Validate the Transformation Apply clause Rule\n\tprivate validateApplyRule(applyRule: Record<string, Record<string, string>>, datasetId: string): void {\n\t\tconst keys = Object.keys(applyRule);\n\t\tif (keys.length !== 1) {\n\t\t\tthrow new InsightError(\"Each APPLY rule must have exactly one key.\");\n\t\t}\n\n\t\tconst applyKey = keys[0];\n\t\tconst operationObject = applyRule[applyKey];\n\n\t\tif (typeof applyKey !== \"string\") {\n\t\t\tthrow new InsightError(\"APPLY key must be a string.\");\n\t\t}\n\t\tif (typeof operationObject !== \"object\" || operationObject === null) {\n\t\t\tthrow new InsightError(\"Each APPLY rule must map to an operation object.\");\n\t\t}\n\n\t\tconst operationKeys = Object.keys(operationObject);\n\t\tif (operationKeys.length !== 1) {\n\t\t\tthrow new InsightError(\"Each APPLY operation must contain exactly one operation.\");\n\t\t}\n\n\t\tconst operation = operationKeys[0];\n\t\tconst targetField = operationObject[operation];\n\n\t\tif (![\"MAX\", \"MIN\", \"AVG\", \"COUNT\", \"SUM\"].includes(operation)) {\n\t\t\tthrow new InsightError(`Invalid APPLY operation: ${operation}.\n\t\t\tAllowed operations are MAX, MIN, AVG, COUNT, SUM.`);\n\t\t}\n\t\tif (typeof targetField !== \"string\" || !targetField.includes(\"_\")) {\n\t\t\tthrow new InsightError(\"APPLY operation target must be a string in the format 'dataset_field'.\");\n\t\t}\n\n\t\tconst [targetDatasetId] = targetField.split(\"_\");\n\t\tif (targetDatasetId !== datasetId) {\n\t\t\tthrow new InsightError(`APPLY target field ${targetField} does not match dataset ID: ${datasetId}.`);\n\t\t}\n\t}\n\n\t// Validate OPTIONS clause\n\tprivate checkOptionsClause(\n\t\toptions: Query[\"OPTIONS\"],\n\t\tdatasetId: string,\n\t\ttransformations?: Query[\"TRANSFORMATIONS\"]\n\t): boolean {\n\t\tif (typeof options !== \"object\" || options === null) {\n\t\t\tthrow new InsightError(\"OPTIONS must be a valid object\");\n\t\t}\n\n\t\t// Collect custom field names defined in TRANSFORMATIONS.APPLY\n\t\tif (transformations?.APPLY) {\n\t\t\tfor (const applyRule of transformations.APPLY) {\n\t\t\t\tconst applyKey = Object.keys(applyRule)[0];\n\t\t\t\tvalidKeys.add(applyKey);\n\t\t\t}\n\t\t}\n\n\t\t// Validate COLUMNS array with the expanded validKeys set\n\t\tthis.validateColumns(options.COLUMNS, datasetId);\n\n\t\t// Validate ORDER if present\n\t\tif (\"ORDER\" in options) {\n\t\t\tif (!this.checkOrderClause(options.ORDER, options.COLUMNS)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t// Validate COLUMNS array\n\tprivate validateColumns(columns: string[], datasetId: string): void {\n\t\tif (!Array.isArray(columns) || columns.length === 0) {\n\t\t\tthrow new InsightError(\"OPTIONS must contain a non-empty COLUMNS array.\");\n\t\t}\n\n\t\tfor (const key of columns) {\n\t\t\t// Check if key is a custom apply key or a valid dataset field\n\t\t\tif (validKeys.has(key)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If it's not a custom key, ensure it follows the \"dataset_field\" format\n\t\t\tif (!key.includes(\"_\")) {\n\t\t\t\tthrow new InsightError(`Invalid key in COLUMNS: ${key}`);\n\t\t\t}\n\n\t\t\tconst [keyId, field] = key.split(\"_\");\n\t\t\tif (keyId !== datasetId) {\n\t\t\t\tthrow new InsightError(`Key does not match dataset ID: ${key}`);\n\t\t\t}\n\t\t\tif (!validKeys.has(field)) {\n\t\t\t\tthrow new InsightError(`Invalid field in COLUMNS: ${field}`);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Validate ORDER clause\n\tprivate checkOrderClause(order: any, columns: string[]): boolean {\n\t\tif (typeof order === \"string\") {\n\t\t\tif (!columns.includes(order)) {\n\t\t\t\tthrow new InsightError(\"ORDER key must be in COLUMNS.\");\n\t\t\t}\n\t\t} else if (typeof order === \"object\") {\n\t\t\tif (!order.keys || !Array.isArray(order.keys) || order.keys.length === 0) {\n\t\t\t\tthrow new InsightError(\"ORDER keys must be a non-empty array.\");\n\t\t\t}\n\t\t\tfor (const key of order.keys) {\n\t\t\t\tif (!columns.includes(key)) {\n\t\t\t\t\tthrow new InsightError(`ORDER key ${key} must be in COLUMNS.`);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (order.dir && ![\"UP\", \"DOWN\"].includes(order.dir)) {\n\t\t\t\tthrow new InsightError(\"ORDER dir must be 'UP' or 'DOWN'.\");\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new InsightError(\"Invalid ORDER format.\");\n\t\t}\n\t\treturn true;\n\t}\n\n\t// Check if the WHERE clause is valid\n\tprivate checkWhereClause(WHERE: any, datasetId: string): boolean {\n\t\t// WHERE can be an empty object\n\t\tif (Object.keys(WHERE).length === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Validate the filter in WHERE clause\n\t\tif (!this.checkFilter(WHERE, datasetId)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t// Validate filter conditions\n\tprivate checkFilter(filter: any, datasetId: string): boolean {\n\t\tif (typeof filter !== \"object\" || filter === null) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check for logic comparisons: AND / OR\n\t\tif (\"AND\" in filter || \"OR\" in filter) {\n\t\t\tconst logic = filter.AND || filter.OR;\n\t\t\tif (!Array.isArray(logic) || logic.length === 0) {\n\t\t\t\tthrow new InsightError(\"LOGIC must be a non-empty array\");\n\t\t\t}\n\t\t\t// Recursively check each filter in the filter list\n\t\t\treturn logic.every((f: any) => this.checkFilter(f, datasetId));\n\t\t}\n\n\t\t// Check for negation: NOT\n\t\tif (\"NOT\" in filter) {\n\t\t\tif (Object.keys(filter).length !== 1) {\n\t\t\t\tthrow new InsightError(\"NOT must have exactly one key\");\n\t\t\t}\n\t\t\treturn this.checkFilter(filter.NOT, datasetId);\n\t\t}\n\n\t\t// Check for MCOMPARISON: GT / LT / EQ\n\t\tif (\"GT\" in filter || \"LT\" in filter || \"EQ\" in filter) {\n\t\t\treturn this.checkMComparison(filter.GT || filter.LT || filter.EQ, datasetId);\n\t\t}\n\n\t\t// Check for SCOMPARISON: IS\n\t\tif (\"IS\" in filter) {\n\t\t\treturn this.checkSComparison(filter.IS, datasetId);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t// Validate MCOMPARISON (numeric comparison)\n\tprivate checkMComparison(mcomp: any, datasetId: string): boolean {\n\t\tif (typeof mcomp !== \"object\" || mcomp === null) {\n\t\t\tthrow new InsightError(\"MCOMPARISON must be a valid object\");\n\t\t}\n\n\t\tconst keys = Object.keys(mcomp);\n\t\tif (keys.length !== 1) {\n\t\t\tthrow new InsightError(\"MCOMPARISON must have exactly one key\");\n\t\t}\n\n\t\tconst key = keys[0];\n\n\t\t// Ensure the key follows the format: dataset_field\n\t\tif (!key.includes(\"_\")) {\n\t\t\treturn false;\n\t\t}\n\t\tconst [keyId, field] = key.split(\"_\");\n\t\tif (keyId !== datasetId) {\n\t\t\tthrow new InsightError(`Key does not match dataset ID: ${key}`);\n\t\t}\n\t\tif (!validKeys.has(field)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst value = mcomp[key];\n\t\tif (typeof value !== \"number\") {\n\t\t\tthrow new InsightError(\"GT, LT, EQ require numeric values\");\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t// Validate SCOMPARISON (string comparison)\n\tprivate checkSComparison(scomp: any, datasetId: string): boolean {\n\t\tif (typeof scomp !== \"object\" || scomp === null) {\n\t\t\tthrow new InsightError(\"SCOMPARISON must be a valid object\");\n\t\t}\n\n\t\tconst keys = Object.keys(scomp);\n\t\tif (keys.length !== 1) {\n\t\t\tthrow new InsightError(\"SCOMPARISON must have exactly one key\");\n\t\t}\n\n\t\tconst key = keys[0];\n\n\t\t// Ensure the key follows the format: dataset_field\n\t\tif (!key.includes(\"_\")) {\n\t\t\treturn false;\n\t\t}\n\t\tconst [keyId, field] = key.split(\"_\");\n\t\tif (keyId !== datasetId) {\n\t\t\tthrow new InsightError(`Key does not match dataset ID: ${key}`);\n\t\t}\n\t\tif (!validKeys.has(field)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst value = scomp[key];\n\t\tif (typeof value !== \"string\") {\n\t\t\tthrow new InsightError(\"IS operator requires string values\");\n\t\t}\n\n\t\treturn true;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1639c666bb6d7af57ede60a34ec078e797049e17","contentHash":"945f0aecd58575668724baae3d7508edacfb170938849b9c9b470f267d4d135f"},"/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/SectionQueryRunner.ts":{"path":"/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/SectionQueryRunner.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":25},"end":{"line":6,"column":52}},"4":{"start":{"line":7,"column":18},"end":{"line":7,"column":55}},"5":{"start":{"line":8,"column":21},"end":{"line":8,"column":59}},"6":{"start":{"line":9,"column":26},"end":{"line":9,"column":27}},"7":{"start":{"line":14,"column":8},"end":{"line":14,"column":55}},"8":{"start":{"line":17,"column":8},"end":{"line":17,"column":54}},"9":{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},"10":{"start":{"line":19,"column":12},"end":{"line":19,"column":107}},"11":{"start":{"line":21,"column":24},"end":{"line":21,"column":59}},"12":{"start":{"line":22,"column":29},"end":{"line":22,"column":68}},"13":{"start":{"line":23,"column":32},"end":{"line":25,"column":26}},"14":{"start":{"line":26,"column":8},"end":{"line":26,"column":65}},"15":{"start":{"line":29,"column":8},"end":{"line":33,"column":9}},"16":{"start":{"line":30,"column":12},"end":{"line":32,"column":13}},"17":{"start":{"line":31,"column":16},"end":{"line":31,"column":41}},"18":{"start":{"line":34,"column":8},"end":{"line":34,"column":94}},"19":{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},"20":{"start":{"line":38,"column":12},"end":{"line":38,"column":24}},"21":{"start":{"line":40,"column":31},"end":{"line":40,"column":63}},"22":{"start":{"line":41,"column":8},"end":{"line":41,"column":43}},"23":{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},"24":{"start":{"line":45,"column":12},"end":{"line":45,"column":45}},"25":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"26":{"start":{"line":48,"column":12},"end":{"line":48,"column":43}},"27":{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},"28":{"start":{"line":51,"column":12},"end":{"line":51,"column":45}},"29":{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},"30":{"start":{"line":54,"column":12},"end":{"line":54,"column":48}},"31":{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},"32":{"start":{"line":57,"column":12},"end":{"line":57,"column":43}},"33":{"start":{"line":59,"column":8},"end":{"line":59,"column":76}},"34":{"start":{"line":62,"column":27},"end":{"line":62,"column":97}},"35":{"start":{"line":62,"column":60},"end":{"line":62,"column":96}},"36":{"start":{"line":63,"column":8},"end":{"line":63,"column":76}},"37":{"start":{"line":63,"column":25},"end":{"line":63,"column":75}},"38":{"start":{"line":63,"column":58},"end":{"line":63,"column":74}},"39":{"start":{"line":66,"column":27},"end":{"line":66,"column":96}},"40":{"start":{"line":66,"column":59},"end":{"line":66,"column":95}},"41":{"start":{"line":67,"column":8},"end":{"line":67,"column":75}},"42":{"start":{"line":67,"column":25},"end":{"line":67,"column":74}},"43":{"start":{"line":67,"column":57},"end":{"line":67,"column":73}},"44":{"start":{"line":70,"column":26},"end":{"line":70,"column":65}},"45":{"start":{"line":71,"column":8},"end":{"line":71,"column":42}},"46":{"start":{"line":71,"column":25},"end":{"line":71,"column":41}},"47":{"start":{"line":74,"column":25},"end":{"line":74,"column":65}},"48":{"start":{"line":75,"column":27},"end":{"line":75,"column":42}},"49":{"start":{"line":76,"column":20},"end":{"line":76,"column":46}},"50":{"start":{"line":77,"column":22},"end":{"line":77,"column":37}},"51":{"start":{"line":78,"column":19},"end":{"line":78,"column":36}},"52":{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},"53":{"start":{"line":80,"column":12},"end":{"line":80,"column":93}},"54":{"start":{"line":82,"column":8},"end":{"line":97,"column":10}},"55":{"start":{"line":83,"column":30},"end":{"line":83,"column":59}},"56":{"start":{"line":84,"column":12},"end":{"line":86,"column":13}},"57":{"start":{"line":85,"column":16},"end":{"line":85,"column":95}},"58":{"start":{"line":87,"column":12},"end":{"line":89,"column":13}},"59":{"start":{"line":88,"column":16},"end":{"line":88,"column":41}},"60":{"start":{"line":90,"column":12},"end":{"line":92,"column":13}},"61":{"start":{"line":91,"column":16},"end":{"line":91,"column":41}},"62":{"start":{"line":93,"column":12},"end":{"line":95,"column":13}},"63":{"start":{"line":94,"column":16},"end":{"line":94,"column":43}},"64":{"start":{"line":96,"column":12},"end":{"line":96,"column":25}},"65":{"start":{"line":100,"column":20},"end":{"line":100,"column":47}},"66":{"start":{"line":101,"column":22},"end":{"line":101,"column":38}},"67":{"start":{"line":102,"column":19},"end":{"line":102,"column":36}},"68":{"start":{"line":103,"column":8},"end":{"line":105,"column":9}},"69":{"start":{"line":104,"column":12},"end":{"line":104,"column":93}},"70":{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},"71":{"start":{"line":107,"column":12},"end":{"line":107,"column":92}},"72":{"start":{"line":109,"column":8},"end":{"line":111,"column":9}},"73":{"start":{"line":110,"column":12},"end":{"line":110,"column":96}},"74":{"start":{"line":112,"column":29},"end":{"line":112,"column":58}},"75":{"start":{"line":113,"column":22},"end":{"line":113,"column":46}},"76":{"start":{"line":114,"column":8},"end":{"line":120,"column":10}},"77":{"start":{"line":115,"column":30},"end":{"line":115,"column":59}},"78":{"start":{"line":116,"column":12},"end":{"line":118,"column":13}},"79":{"start":{"line":117,"column":16},"end":{"line":117,"column":95}},"80":{"start":{"line":119,"column":12},"end":{"line":119,"column":41}},"81":{"start":{"line":123,"column":27},"end":{"line":123,"column":45}},"82":{"start":{"line":124,"column":26},"end":{"line":124,"column":48}},"83":{"start":{"line":125,"column":8},"end":{"line":127,"column":9}},"84":{"start":{"line":126,"column":12},"end":{"line":126,"column":25}},"85":{"start":{"line":128,"column":8},"end":{"line":128,"column":66}},"86":{"start":{"line":131,"column":29},"end":{"line":131,"column":49}},"87":{"start":{"line":132,"column":29},"end":{"line":132,"column":64}},"88":{"start":{"line":133,"column":8},"end":{"line":133,"column":56}},"89":{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},"90":{"start":{"line":137,"column":12},"end":{"line":137,"column":29}},"91":{"start":{"line":139,"column":28},"end":{"line":139,"column":42}},"92":{"start":{"line":140,"column":8},"end":{"line":142,"column":9}},"93":{"start":{"line":141,"column":12},"end":{"line":141,"column":93}},"94":{"start":{"line":143,"column":8},"end":{"line":166,"column":9}},"95":{"start":{"line":145,"column":16},"end":{"line":145,"column":46}},"96":{"start":{"line":147,"column":16},"end":{"line":147,"column":44}},"97":{"start":{"line":149,"column":16},"end":{"line":149,"column":47}},"98":{"start":{"line":151,"column":16},"end":{"line":151,"column":52}},"99":{"start":{"line":153,"column":16},"end":{"line":153,"column":46}},"100":{"start":{"line":155,"column":16},"end":{"line":155,"column":44}},"101":{"start":{"line":157,"column":16},"end":{"line":157,"column":37}},"102":{"start":{"line":159,"column":16},"end":{"line":159,"column":38}},"103":{"start":{"line":161,"column":16},"end":{"line":161,"column":38}},"104":{"start":{"line":163,"column":16},"end":{"line":163,"column":39}},"105":{"start":{"line":165,"column":16},"end":{"line":165,"column":82}},"106":{"start":{"line":169,"column":8},"end":{"line":172,"column":9}},"107":{"start":{"line":170,"column":24},"end":{"line":170,"column":28}},"108":{"start":{"line":171,"column":12},"end":{"line":171,"column":23}},"109":{"start":{"line":173,"column":8},"end":{"line":173,"column":30}},"110":{"start":{"line":176,"column":26},"end":{"line":176,"column":47}},"111":{"start":{"line":177,"column":28},"end":{"line":177,"column":57}},"112":{"start":{"line":178,"column":8},"end":{"line":178,"column":85}},"113":{"start":{"line":181,"column":28},"end":{"line":181,"column":37}},"114":{"start":{"line":182,"column":8},"end":{"line":188,"column":11}},"115":{"start":{"line":183,"column":29},"end":{"line":183,"column":92}},"116":{"start":{"line":183,"column":52},"end":{"line":183,"column":81}},"117":{"start":{"line":184,"column":12},"end":{"line":186,"column":13}},"118":{"start":{"line":185,"column":16},"end":{"line":185,"column":46}},"119":{"start":{"line":187,"column":12},"end":{"line":187,"column":49}},"120":{"start":{"line":189,"column":8},"end":{"line":189,"column":27}},"121":{"start":{"line":192,"column":24},"end":{"line":192,"column":26}},"122":{"start":{"line":193,"column":8},"end":{"line":206,"column":11}},"123":{"start":{"line":194,"column":27},"end":{"line":194,"column":29}},"124":{"start":{"line":195,"column":12},"end":{"line":197,"column":15}},"125":{"start":{"line":196,"column":16},"end":{"line":196,"column":64}},"126":{"start":{"line":198,"column":12},"end":{"line":204,"column":13}},"127":{"start":{"line":199,"column":33},"end":{"line":199,"column":53}},"128":{"start":{"line":200,"column":35},"end":{"line":200,"column":49}},"129":{"start":{"line":201,"column":41},"end":{"line":201,"column":69}},"130":{"start":{"line":202,"column":40},"end":{"line":202,"column":66}},"131":{"start":{"line":203,"column":16},"end":{"line":203,"column":101}},"132":{"start":{"line":205,"column":12},"end":{"line":205,"column":33}},"133":{"start":{"line":207,"column":8},"end":{"line":207,"column":23}},"134":{"start":{"line":210,"column":8},"end":{"line":228,"column":9}},"135":{"start":{"line":212,"column":16},"end":{"line":212,"column":89}},"136":{"start":{"line":212,"column":55},"end":{"line":212,"column":86}},"137":{"start":{"line":214,"column":16},"end":{"line":214,"column":89}},"138":{"start":{"line":214,"column":55},"end":{"line":214,"column":86}},"139":{"start":{"line":216,"column":30},"end":{"line":216,"column":154}},"140":{"start":{"line":216,"column":58},"end":{"line":216,"column":124}},"141":{"start":{"line":217,"column":28},"end":{"line":217,"column":59}},"142":{"start":{"line":218,"column":16},"end":{"line":218,"column":62}},"143":{"start":{"line":221,"column":30},"end":{"line":221,"column":154}},"144":{"start":{"line":221,"column":58},"end":{"line":221,"column":124}},"145":{"start":{"line":222,"column":16},"end":{"line":222,"column":64}},"146":{"start":{"line":225,"column":16},"end":{"line":225,"column":90}},"147":{"start":{"line":225,"column":51},"end":{"line":225,"column":82}},"148":{"start":{"line":227,"column":16},"end":{"line":227,"column":84}},"149":{"start":{"line":231,"column":8},"end":{"line":233,"column":9}},"150":{"start":{"line":232,"column":12},"end":{"line":232,"column":91}},"151":{"start":{"line":234,"column":24},"end":{"line":234,"column":39}},"152":{"start":{"line":235,"column":21},"end":{"line":241,"column":10}},"153":{"start":{"line":236,"column":24},"end":{"line":236,"column":26}},"154":{"start":{"line":237,"column":12},"end":{"line":239,"column":13}},"155":{"start":{"line":238,"column":16},"end":{"line":238,"column":57}},"156":{"start":{"line":240,"column":12},"end":{"line":240,"column":23}},"157":{"start":{"line":242,"column":8},"end":{"line":244,"column":9}},"158":{"start":{"line":243,"column":12},"end":{"line":243,"column":63}},"159":{"start":{"line":245,"column":8},"end":{"line":245,"column":22}},"160":{"start":{"line":248,"column":8},"end":{"line":269,"column":9}},"161":{"start":{"line":249,"column":24},"end":{"line":249,"column":29}},"162":{"start":{"line":250,"column":12},"end":{"line":250,"column":89}},"163":{"start":{"line":250,"column":40},"end":{"line":250,"column":86}},"164":{"start":{"line":252,"column":13},"end":{"line":269,"column":9}},"165":{"start":{"line":253,"column":25},"end":{"line":253,"column":35}},"166":{"start":{"line":254,"column":24},"end":{"line":254,"column":53}},"167":{"start":{"line":255,"column":12},"end":{"line":265,"column":15}},"168":{"start":{"line":256,"column":16},"end":{"line":263,"column":17}},"169":{"start":{"line":257,"column":20},"end":{"line":259,"column":21}},"170":{"start":{"line":258,"column":24},"end":{"line":258,"column":35}},"171":{"start":{"line":260,"column":20},"end":{"line":262,"column":21}},"172":{"start":{"line":261,"column":24},"end":{"line":261,"column":36}},"173":{"start":{"line":264,"column":16},"end":{"line":264,"column":25}},"174":{"start":{"line":268,"column":12},"end":{"line":268,"column":77}},"175":{"start":{"line":272,"column":0},"end":{"line":272,"column":37}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":32},"end":{"line":15,"column":5}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":25},"end":{"line":27,"column":5}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":28},"end":{"line":35,"column":5}},"line":28},"4":{"name":"(anonymous_4)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":30},"end":{"line":42,"column":5}},"line":36},"5":{"name":"(anonymous_5)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":5}},"loc":{"start":{"line":43,"column":32},"end":{"line":60,"column":5}},"line":43},"6":{"name":"(anonymous_6)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":29},"end":{"line":64,"column":5}},"line":61},"7":{"name":"(anonymous_7)","decl":{"start":{"line":62,"column":45},"end":{"line":62,"column":46}},"loc":{"start":{"line":62,"column":60},"end":{"line":62,"column":96}},"line":62},"8":{"name":"(anonymous_8)","decl":{"start":{"line":63,"column":15},"end":{"line":63,"column":16}},"loc":{"start":{"line":63,"column":25},"end":{"line":63,"column":75}},"line":63},"9":{"name":"(anonymous_9)","decl":{"start":{"line":63,"column":42},"end":{"line":63,"column":43}},"loc":{"start":{"line":63,"column":58},"end":{"line":63,"column":74}},"line":63},"10":{"name":"(anonymous_10)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":27},"end":{"line":68,"column":5}},"line":65},"11":{"name":"(anonymous_11)","decl":{"start":{"line":66,"column":44},"end":{"line":66,"column":45}},"loc":{"start":{"line":66,"column":59},"end":{"line":66,"column":95}},"line":66},"12":{"name":"(anonymous_12)","decl":{"start":{"line":67,"column":15},"end":{"line":67,"column":16}},"loc":{"start":{"line":67,"column":25},"end":{"line":67,"column":74}},"line":67},"13":{"name":"(anonymous_13)","decl":{"start":{"line":67,"column":41},"end":{"line":67,"column":42}},"loc":{"start":{"line":67,"column":57},"end":{"line":67,"column":73}},"line":67},"14":{"name":"(anonymous_14)","decl":{"start":{"line":69,"column":4},"end":{"line":69,"column":5}},"loc":{"start":{"line":69,"column":28},"end":{"line":72,"column":5}},"line":69},"15":{"name":"(anonymous_15)","decl":{"start":{"line":71,"column":15},"end":{"line":71,"column":16}},"loc":{"start":{"line":71,"column":25},"end":{"line":71,"column":41}},"line":71},"16":{"name":"(anonymous_16)","decl":{"start":{"line":73,"column":4},"end":{"line":73,"column":5}},"loc":{"start":{"line":73,"column":28},"end":{"line":98,"column":5}},"line":73},"17":{"name":"(anonymous_17)","decl":{"start":{"line":82,"column":15},"end":{"line":82,"column":16}},"loc":{"start":{"line":82,"column":25},"end":{"line":97,"column":9}},"line":82},"18":{"name":"(anonymous_18)","decl":{"start":{"line":99,"column":4},"end":{"line":99,"column":5}},"loc":{"start":{"line":99,"column":26},"end":{"line":121,"column":5}},"line":99},"19":{"name":"(anonymous_19)","decl":{"start":{"line":114,"column":15},"end":{"line":114,"column":16}},"loc":{"start":{"line":114,"column":25},"end":{"line":120,"column":9}},"line":114},"20":{"name":"(anonymous_20)","decl":{"start":{"line":122,"column":4},"end":{"line":122,"column":5}},"loc":{"start":{"line":122,"column":37},"end":{"line":129,"column":5}},"line":122},"21":{"name":"(anonymous_21)","decl":{"start":{"line":130,"column":4},"end":{"line":130,"column":5}},"loc":{"start":{"line":130,"column":29},"end":{"line":134,"column":5}},"line":130},"22":{"name":"(anonymous_22)","decl":{"start":{"line":135,"column":4},"end":{"line":135,"column":5}},"loc":{"start":{"line":135,"column":29},"end":{"line":167,"column":5}},"line":135},"23":{"name":"(anonymous_23)","decl":{"start":{"line":168,"column":4},"end":{"line":168,"column":5}},"loc":{"start":{"line":168,"column":20},"end":{"line":174,"column":5}},"line":168},"24":{"name":"(anonymous_24)","decl":{"start":{"line":175,"column":4},"end":{"line":175,"column":5}},"loc":{"start":{"line":175,"column":48},"end":{"line":179,"column":5}},"line":175},"25":{"name":"(anonymous_25)","decl":{"start":{"line":180,"column":4},"end":{"line":180,"column":5}},"loc":{"start":{"line":180,"column":29},"end":{"line":190,"column":5}},"line":180},"26":{"name":"(anonymous_26)","decl":{"start":{"line":182,"column":21},"end":{"line":182,"column":22}},"loc":{"start":{"line":182,"column":31},"end":{"line":188,"column":9}},"line":182},"27":{"name":"(anonymous_27)","decl":{"start":{"line":183,"column":43},"end":{"line":183,"column":44}},"loc":{"start":{"line":183,"column":52},"end":{"line":183,"column":81}},"line":183},"28":{"name":"(anonymous_28)","decl":{"start":{"line":191,"column":4},"end":{"line":191,"column":5}},"loc":{"start":{"line":191,"column":58},"end":{"line":208,"column":5}},"line":191},"29":{"name":"(anonymous_29)","decl":{"start":{"line":193,"column":28},"end":{"line":193,"column":29}},"loc":{"start":{"line":193,"column":39},"end":{"line":206,"column":9}},"line":193},"30":{"name":"(anonymous_30)","decl":{"start":{"line":195,"column":30},"end":{"line":195,"column":31}},"loc":{"start":{"line":195,"column":39},"end":{"line":197,"column":13}},"line":195},"31":{"name":"(anonymous_31)","decl":{"start":{"line":209,"column":4},"end":{"line":209,"column":5}},"loc":{"start":{"line":209,"column":43},"end":{"line":229,"column":5}},"line":209},"32":{"name":"(anonymous_32)","decl":{"start":{"line":212,"column":45},"end":{"line":212,"column":46}},"loc":{"start":{"line":212,"column":55},"end":{"line":212,"column":86}},"line":212},"33":{"name":"(anonymous_33)","decl":{"start":{"line":214,"column":45},"end":{"line":214,"column":46}},"loc":{"start":{"line":214,"column":55},"end":{"line":214,"column":86}},"line":214},"34":{"name":"(anonymous_34)","decl":{"start":{"line":216,"column":43},"end":{"line":216,"column":44}},"loc":{"start":{"line":216,"column":58},"end":{"line":216,"column":124}},"line":216},"35":{"name":"(anonymous_35)","decl":{"start":{"line":221,"column":43},"end":{"line":221,"column":44}},"loc":{"start":{"line":221,"column":58},"end":{"line":221,"column":124}},"line":221},"36":{"name":"(anonymous_36)","decl":{"start":{"line":225,"column":41},"end":{"line":225,"column":42}},"loc":{"start":{"line":225,"column":51},"end":{"line":225,"column":82}},"line":225},"37":{"name":"(anonymous_37)","decl":{"start":{"line":230,"column":4},"end":{"line":230,"column":5}},"loc":{"start":{"line":230,"column":32},"end":{"line":246,"column":5}},"line":230},"38":{"name":"(anonymous_38)","decl":{"start":{"line":235,"column":30},"end":{"line":235,"column":31}},"loc":{"start":{"line":235,"column":40},"end":{"line":241,"column":9}},"line":235},"39":{"name":"(anonymous_39)","decl":{"start":{"line":247,"column":4},"end":{"line":247,"column":5}},"loc":{"start":{"line":247,"column":31},"end":{"line":270,"column":5}},"line":247},"40":{"name":"(anonymous_40)","decl":{"start":{"line":250,"column":29},"end":{"line":250,"column":30}},"loc":{"start":{"line":250,"column":40},"end":{"line":250,"column":86}},"line":250},"41":{"name":"(anonymous_41)","decl":{"start":{"line":255,"column":29},"end":{"line":255,"column":30}},"loc":{"start":{"line":255,"column":39},"end":{"line":265,"column":13}},"line":255}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},{"start":{"line":18,"column":8},"end":{"line":20,"column":9}}],"line":18},"4":{"loc":{"start":{"line":23,"column":32},"end":{"line":25,"column":26}},"type":"cond-expr","locations":[{"start":{"line":24,"column":14},"end":{"line":24,"column":76}},{"start":{"line":25,"column":14},"end":{"line":25,"column":26}}],"line":23},"5":{"loc":{"start":{"line":30,"column":12},"end":{"line":32,"column":13}},"type":"if","locations":[{"start":{"line":30,"column":12},"end":{"line":32,"column":13}},{"start":{"line":30,"column":12},"end":{"line":32,"column":13}}],"line":30},"6":{"loc":{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},{"start":{"line":37,"column":8},"end":{"line":39,"column":9}}],"line":37},"7":{"loc":{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},{"start":{"line":44,"column":8},"end":{"line":46,"column":9}}],"line":44},"8":{"loc":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},{"start":{"line":47,"column":8},"end":{"line":49,"column":9}}],"line":47},"9":{"loc":{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},{"start":{"line":50,"column":8},"end":{"line":52,"column":9}}],"line":50},"10":{"loc":{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},{"start":{"line":53,"column":8},"end":{"line":55,"column":9}}],"line":53},"11":{"loc":{"start":{"line":53,"column":12},"end":{"line":53,"column":44}},"type":"binary-expr","locations":[{"start":{"line":53,"column":12},"end":{"line":53,"column":20}},{"start":{"line":53,"column":24},"end":{"line":53,"column":32}},{"start":{"line":53,"column":36},"end":{"line":53,"column":44}}],"line":53},"12":{"loc":{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},"type":"if","locations":[{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},{"start":{"line":56,"column":8},"end":{"line":58,"column":9}}],"line":56},"13":{"loc":{"start":{"line":74,"column":25},"end":{"line":74,"column":65}},"type":"cond-expr","locations":[{"start":{"line":74,"column":36},"end":{"line":74,"column":40}},{"start":{"line":74,"column":43},"end":{"line":74,"column":65}}],"line":74},"14":{"loc":{"start":{"line":74,"column":43},"end":{"line":74,"column":65}},"type":"cond-expr","locations":[{"start":{"line":74,"column":54},"end":{"line":74,"column":58}},{"start":{"line":74,"column":61},"end":{"line":74,"column":65}}],"line":74},"15":{"loc":{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},"type":"if","locations":[{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},{"start":{"line":79,"column":8},"end":{"line":81,"column":9}}],"line":79},"16":{"loc":{"start":{"line":84,"column":12},"end":{"line":86,"column":13}},"type":"if","locations":[{"start":{"line":84,"column":12},"end":{"line":86,"column":13}},{"start":{"line":84,"column":12},"end":{"line":86,"column":13}}],"line":84},"17":{"loc":{"start":{"line":84,"column":16},"end":{"line":84,"column":74}},"type":"binary-expr","locations":[{"start":{"line":84,"column":16},"end":{"line":84,"column":45}},{"start":{"line":84,"column":49},"end":{"line":84,"column":74}}],"line":84},"18":{"loc":{"start":{"line":87,"column":12},"end":{"line":89,"column":13}},"type":"if","locations":[{"start":{"line":87,"column":12},"end":{"line":89,"column":13}},{"start":{"line":87,"column":12},"end":{"line":89,"column":13}}],"line":87},"19":{"loc":{"start":{"line":90,"column":12},"end":{"line":92,"column":13}},"type":"if","locations":[{"start":{"line":90,"column":12},"end":{"line":92,"column":13}},{"start":{"line":90,"column":12},"end":{"line":92,"column":13}}],"line":90},"20":{"loc":{"start":{"line":93,"column":12},"end":{"line":95,"column":13}},"type":"if","locations":[{"start":{"line":93,"column":12},"end":{"line":95,"column":13}},{"start":{"line":93,"column":12},"end":{"line":95,"column":13}}],"line":93},"21":{"loc":{"start":{"line":103,"column":8},"end":{"line":105,"column":9}},"type":"if","locations":[{"start":{"line":103,"column":8},"end":{"line":105,"column":9}},{"start":{"line":103,"column":8},"end":{"line":105,"column":9}}],"line":103},"22":{"loc":{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},"type":"if","locations":[{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},{"start":{"line":106,"column":8},"end":{"line":108,"column":9}}],"line":106},"23":{"loc":{"start":{"line":109,"column":8},"end":{"line":111,"column":9}},"type":"if","locations":[{"start":{"line":109,"column":8},"end":{"line":111,"column":9}},{"start":{"line":109,"column":8},"end":{"line":111,"column":9}}],"line":109},"24":{"loc":{"start":{"line":116,"column":12},"end":{"line":118,"column":13}},"type":"if","locations":[{"start":{"line":116,"column":12},"end":{"line":118,"column":13}},{"start":{"line":116,"column":12},"end":{"line":118,"column":13}}],"line":116},"25":{"loc":{"start":{"line":125,"column":8},"end":{"line":127,"column":9}},"type":"if","locations":[{"start":{"line":125,"column":8},"end":{"line":127,"column":9}},{"start":{"line":125,"column":8},"end":{"line":127,"column":9}}],"line":125},"26":{"loc":{"start":{"line":128,"column":15},"end":{"line":128,"column":65}},"type":"binary-expr","locations":[{"start":{"line":128,"column":15},"end":{"line":128,"column":31}},{"start":{"line":128,"column":35},"end":{"line":128,"column":65}}],"line":128},"27":{"loc":{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},"type":"if","locations":[{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},{"start":{"line":136,"column":8},"end":{"line":138,"column":9}}],"line":136},"28":{"loc":{"start":{"line":140,"column":8},"end":{"line":142,"column":9}},"type":"if","locations":[{"start":{"line":140,"column":8},"end":{"line":142,"column":9}},{"start":{"line":140,"column":8},"end":{"line":142,"column":9}}],"line":140},"29":{"loc":{"start":{"line":143,"column":8},"end":{"line":166,"column":9}},"type":"switch","locations":[{"start":{"line":144,"column":12},"end":{"line":145,"column":46}},{"start":{"line":146,"column":12},"end":{"line":147,"column":44}},{"start":{"line":148,"column":12},"end":{"line":149,"column":47}},{"start":{"line":150,"column":12},"end":{"line":151,"column":52}},{"start":{"line":152,"column":12},"end":{"line":153,"column":46}},{"start":{"line":154,"column":12},"end":{"line":155,"column":44}},{"start":{"line":156,"column":12},"end":{"line":157,"column":37}},{"start":{"line":158,"column":12},"end":{"line":159,"column":38}},{"start":{"line":160,"column":12},"end":{"line":161,"column":38}},{"start":{"line":162,"column":12},"end":{"line":163,"column":39}},{"start":{"line":164,"column":12},"end":{"line":165,"column":82}}],"line":143},"30":{"loc":{"start":{"line":169,"column":8},"end":{"line":172,"column":9}},"type":"if","locations":[{"start":{"line":169,"column":8},"end":{"line":172,"column":9}},{"start":{"line":169,"column":8},"end":{"line":172,"column":9}}],"line":169},"31":{"loc":{"start":{"line":184,"column":12},"end":{"line":186,"column":13}},"type":"if","locations":[{"start":{"line":184,"column":12},"end":{"line":186,"column":13}},{"start":{"line":184,"column":12},"end":{"line":186,"column":13}}],"line":184},"32":{"loc":{"start":{"line":210,"column":8},"end":{"line":228,"column":9}},"type":"switch","locations":[{"start":{"line":211,"column":12},"end":{"line":212,"column":89}},{"start":{"line":213,"column":12},"end":{"line":214,"column":89}},{"start":{"line":215,"column":12},"end":{"line":219,"column":13}},{"start":{"line":220,"column":12},"end":{"line":223,"column":13}},{"start":{"line":224,"column":12},"end":{"line":225,"column":90}},{"start":{"line":226,"column":12},"end":{"line":227,"column":84}}],"line":210},"33":{"loc":{"start":{"line":231,"column":8},"end":{"line":233,"column":9}},"type":"if","locations":[{"start":{"line":231,"column":8},"end":{"line":233,"column":9}},{"start":{"line":231,"column":8},"end":{"line":233,"column":9}}],"line":231},"34":{"loc":{"start":{"line":231,"column":12},"end":{"line":231,"column":63}},"type":"binary-expr","locations":[{"start":{"line":231,"column":12},"end":{"line":231,"column":28}},{"start":{"line":231,"column":32},"end":{"line":231,"column":63}}],"line":231},"35":{"loc":{"start":{"line":242,"column":8},"end":{"line":244,"column":9}},"type":"if","locations":[{"start":{"line":242,"column":8},"end":{"line":244,"column":9}},{"start":{"line":242,"column":8},"end":{"line":244,"column":9}}],"line":242},"36":{"loc":{"start":{"line":248,"column":8},"end":{"line":269,"column":9}},"type":"if","locations":[{"start":{"line":248,"column":8},"end":{"line":269,"column":9}},{"start":{"line":248,"column":8},"end":{"line":269,"column":9}}],"line":248},"37":{"loc":{"start":{"line":250,"column":40},"end":{"line":250,"column":86}},"type":"cond-expr","locations":[{"start":{"line":250,"column":58},"end":{"line":250,"column":59}},{"start":{"line":250,"column":62},"end":{"line":250,"column":86}}],"line":250},"38":{"loc":{"start":{"line":250,"column":62},"end":{"line":250,"column":86}},"type":"cond-expr","locations":[{"start":{"line":250,"column":80},"end":{"line":250,"column":82}},{"start":{"line":250,"column":85},"end":{"line":250,"column":86}}],"line":250},"39":{"loc":{"start":{"line":252,"column":13},"end":{"line":269,"column":9}},"type":"if","locations":[{"start":{"line":252,"column":13},"end":{"line":269,"column":9}},{"start":{"line":252,"column":13},"end":{"line":269,"column":9}}],"line":252},"40":{"loc":{"start":{"line":252,"column":17},"end":{"line":252,"column":85}},"type":"binary-expr","locations":[{"start":{"line":252,"column":17},"end":{"line":252,"column":42}},{"start":{"line":252,"column":46},"end":{"line":252,"column":56}},{"start":{"line":252,"column":60},"end":{"line":252,"column":85}}],"line":252},"41":{"loc":{"start":{"line":254,"column":24},"end":{"line":254,"column":53}},"type":"cond-expr","locations":[{"start":{"line":254,"column":47},"end":{"line":254,"column":49}},{"start":{"line":254,"column":52},"end":{"line":254,"column":53}}],"line":254},"42":{"loc":{"start":{"line":257,"column":20},"end":{"line":259,"column":21}},"type":"if","locations":[{"start":{"line":257,"column":20},"end":{"line":259,"column":21}},{"start":{"line":257,"column":20},"end":{"line":259,"column":21}}],"line":257},"43":{"loc":{"start":{"line":260,"column":20},"end":{"line":262,"column":21}},"type":"if","locations":[{"start":{"line":260,"column":20},"end":{"line":262,"column":21}},{"start":{"line":260,"column":20},"end":{"line":262,"column":21}}],"line":260}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":61,"8":40,"9":40,"10":0,"11":40,"12":40,"13":38,"14":38,"15":40,"16":40,"17":40,"18":0,"19":40,"20":3,"21":37,"22":36,"23":45,"24":2,"25":43,"26":2,"27":41,"28":2,"29":39,"30":22,"31":17,"32":17,"33":0,"34":2,"35":3,"36":2,"37":129224,"38":132351,"39":2,"40":3,"41":2,"42":129224,"43":193830,"44":2,"45":2,"46":129224,"47":22,"48":22,"49":22,"50":22,"51":22,"52":22,"53":0,"54":22,"55":1356847,"56":1356847,"57":1,"58":1356846,"59":969180,"60":387666,"61":193836,"62":193830,"63":193830,"64":0,"65":17,"66":17,"67":17,"68":17,"69":0,"70":17,"71":0,"72":17,"73":1,"74":16,"75":16,"76":16,"77":843087,"78":843087,"79":0,"80":843087,"81":17,"82":17,"83":17,"84":9,"85":8,"86":16,"87":16,"88":16,"89":2778237,"90":15932,"91":2762305,"92":2762305,"93":0,"94":2762305,"95":3,"96":455306,"97":202611,"98":129235,"99":341131,"100":3,"101":1566346,"102":67664,"103":3,"104":3,"105":0,"106":3,"107":1,"108":1,"109":2,"110":11,"111":11,"112":11,"113":11,"114":11,"115":201281,"116":201281,"117":201281,"118":7966,"119":201281,"120":11,"121":11,"122":11,"123":7966,"124":7966,"125":7966,"126":7966,"127":7966,"128":7966,"129":7966,"130":7966,"131":7966,"132":7966,"133":11,"134":7966,"135":3847,"136":65723,"137":1,"138":1413,"139":4118,"140":134145,"141":4118,"142":4118,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":38,"150":0,"151":38,"152":38,"153":83846,"154":83846,"155":167775,"156":83846,"157":38,"158":33,"159":38,"160":33,"161":32,"162":32,"163":1050879,"164":1,"165":1,"166":1,"167":1,"168":314,"169":314,"170":171,"171":143,"172":138,"173":5,"174":0,"175":1},"f":{"0":2,"1":61,"2":40,"3":40,"4":40,"5":45,"6":2,"7":3,"8":129224,"9":132351,"10":2,"11":3,"12":129224,"13":193830,"14":2,"15":129224,"16":22,"17":1356847,"18":17,"19":843087,"20":17,"21":16,"22":2778237,"23":3,"24":11,"25":11,"26":201281,"27":201281,"28":11,"29":7966,"30":7966,"31":7966,"32":65723,"33":1413,"34":134145,"35":0,"36":0,"37":38,"38":83846,"39":33,"40":1050879,"41":314},"b":{"0":[1,1,1],"1":[1,1],"2":[2,2],"3":[0,40],"4":[11,27],"5":[40,0],"6":[3,37],"7":[2,43],"8":[2,41],"9":[2,39],"10":[22,17],"11":[39,23,20],"12":[17,0],"13":[16,6],"14":[3,3],"15":[0,22],"16":[1,1356846],"17":[1356847,1356846],"18":[969180,387666],"19":[193836,193830],"20":[193830,0],"21":[0,17],"22":[0,17],"23":[1,16],"24":[0,843087],"25":[9,8],"26":[8,2],"27":[15932,2762305],"28":[0,2762305],"29":[3,455306,202611,129235,341131,3,1566346,67664,3,3,0],"30":[1,2],"31":[7966,193315],"32":[3847,1,4118,0,0,0],"33":[0,38],"34":[38,38],"35":[33,5],"36":[32,1],"37":[333798,717081],"38":[542496,174585],"39":[1,0],"40":[1,1,1],"41":[1,0],"42":[171,143],"43":[138,5]},"inputSourceMap":{"version":3,"file":"/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/SectionQueryRunner.ts","sources":["/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/SectionQueryRunner.ts"],"names":[],"mappings":"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","sourcesContent":["import { InsightError, InsightResult } from \"./IInsightFacade\";\nimport DatasetManager from \"./DatasetManager\"; // Use DatasetManager for handling datasets\nimport Section from \"./Section\";\nimport Room from \"./Room\";\nimport Decimal from \"decimal.js\";\ntype DatasetEntry = Section | Room;\n\n// Define a constant for the decimal precision\nconst DECIMAL_PRECISION = 2;\n\nexport default class SectionQueryRunner {\n\tprivate datasetMap: Map<string, DatasetEntry[]>;\n\tprivate datasetId!: string; // Declare datasetId with definite assignment\n\n\tconstructor(datasetManager: DatasetManager) {\n\t\tthis.datasetMap = datasetManager.getDatasets(); // Initialize datasets\n\t}\n\n\t// Execute the query and return the results\n\tpublic async execute(query: any): Promise<InsightResult[]> {\n\t\t// Extract the dataset ID from the query\n\t\tthis.datasetId = this.extractDatasetId(query);\n\n\t\t// Check if the dataset exists\n\t\tif (!this.datasetMap.has(this.datasetId)) {\n\t\t\tthrow new InsightError(`Dataset with id \"${this.datasetId}\" does not exist.`);\n\t\t}\n\n\t\tconst dataset = this.datasetMap.get(this.datasetId) as Section[];\n\t\tconst filteredData = this.applyFilters(dataset, query.WHERE);\n\n\t\t// Apply transformations if present\n\t\tconst transformedData: InsightResult[] = query.TRANSFORMATIONS\n\t\t\t? this.applyTransformations(filteredData, query.TRANSFORMATIONS)\n\t\t\t: (filteredData as unknown as InsightResult[]);\n\n\t\treturn this.applyOptions(transformedData, query.OPTIONS);\n\t}\n\n\t// Extract dataset ID from query COLUMNS\n\tprivate extractDatasetId(query: any): string {\n\t\tfor (const col of query.OPTIONS.COLUMNS) {\n\t\t\tif (col.includes(\"_\")) {\n\t\t\t\treturn col.split(\"_\")[0];\n\t\t\t}\n\t\t}\n\t\tthrow new InsightError(\"Could not extract dataset ID from COLUMNS.\");\n\t}\n\n\t// Apply the filter conditions specified in WHERE clause\n\tprivate applyFilters(data: Section[], where: any): Section[] {\n\t\tif (Object.keys(where).length === 0) {\n\t\t\treturn data;\n\t\t}\n\n\t\tconst filterFunction = this.createFilterFunction(where);\n\t\treturn data.filter(filterFunction);\n\t}\n\n\t// Create a filter function based on WHERE conditions\n\tprivate createFilterFunction(where: any): (item: Section) => boolean {\n\t\tif (where.AND) {\n\t\t\treturn this.handleAnd(where.AND);\n\t\t}\n\t\tif (where.OR) {\n\t\t\treturn this.handleOr(where.OR);\n\t\t}\n\t\tif (where.NOT) {\n\t\t\treturn this.handleNot(where.NOT);\n\t\t}\n\t\tif (where.GT || where.LT || where.EQ) {\n\t\t\treturn this.handleComparison(where);\n\t\t}\n\t\tif (where.IS) {\n\t\t\treturn this.handleIs(where.IS);\n\t\t}\n\t\tthrow new InsightError(\"Invalid WHERE condition.\");\n\t}\n\n\t// Handle AND logic for filters\n\tprivate handleAnd(andConditions: any[]): (item: Section) => boolean {\n\t\tconst subFilters = andConditions.map((condition) => this.createFilterFunction(condition));\n\t\treturn (item: Section) => subFilters.every((filterFunc) => filterFunc(item));\n\t}\n\n\t// Handle OR logic for filters\n\tprivate handleOr(orConditions: any[]): (item: Section) => boolean {\n\t\tconst subFilters = orConditions.map((condition) => this.createFilterFunction(condition));\n\t\treturn (item: Section) => subFilters.some((filterFunc) => filterFunc(item));\n\t}\n\n\t// Handle NOT logic for filters\n\tprivate handleNot(notCondition: any): (item: Section) => boolean {\n\t\tconst subFilter = this.createFilterFunction(notCondition);\n\t\treturn (item: Section) => !subFilter(item);\n\t}\n\n\t// Handle comparison operators like GT, LT, EQ\n\tprivate handleComparison(where: any): (item: Section) => boolean {\n\t\tconst operator = where.GT ? \"GT\" : where.LT ? \"LT\" : \"EQ\";\n\t\tconst comparison = where[operator];\n\t\tconst key = Object.keys(comparison)[0];\n\t\tconst value = comparison[key];\n\n\t\tconst id = key.split(\"_\")[0]; // Extract dataset ID part\n\t\tif (id !== this.datasetId) {\n\t\t\tthrow new InsightError(`Key does not match dataset ID: ${key}`);\n\t\t}\n\n\t\treturn (item: Section) => {\n\t\t\tconst itemValue = this.getValueByKey(item, key);\n\n\t\t\tif (typeof itemValue !== \"number\" || typeof value !== \"number\") {\n\t\t\t\tthrow new InsightError(\"Comparison requires numeric values.\");\n\t\t\t}\n\n\t\t\tif (operator === \"GT\") {\n\t\t\t\treturn itemValue > value;\n\t\t\t}\n\t\t\tif (operator === \"LT\") {\n\t\t\t\treturn itemValue < value;\n\t\t\t}\n\t\t\tif (operator === \"EQ\") {\n\t\t\t\treturn itemValue === value;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\t}\n\n\t// Handle the IS operator for string comparisons in the WHERE clause\n\tprivate handleIs(isCondition: any): (item: Section) => boolean {\n\t\tconst key = Object.keys(isCondition)[0];\n\t\tconst value = isCondition[key];\n\n\t\t// Extract dataset ID from the query key\n\t\tconst id = key.split(\"_\")[0];\n\t\tif (id !== this.datasetId) {\n\t\t\tthrow new InsightError(`Key does not match dataset ID: ${key}`);\n\t\t}\n\n\t\t// Ensure the value provided to IS a string\n\t\tif (typeof value !== \"string\") {\n\t\t\tthrow new InsightError(\"IS operator requires a string value.\");\n\t\t}\n\n\t\t// Check if the wildcard pattern is invalid, throw InsightError if true\n\t\tif (this.hasInvalidWildcardPattern(value)) {\n\t\t\tthrow new InsightError(\"Invalid wildcard pattern in IS operator.\");\n\t\t}\n\n\t\t// Convert wildcard pattern into a regular expression for matching\n\t\tconst regexPattern = this.buildRegexPattern(value);\n\t\tconst regex = new RegExp(regexPattern);\n\n\t\t// Return a function that tests the string value from the Section object\n\t\treturn (item: Section) => {\n\t\t\tconst itemValue = this.getValueByKey(item, key);\n\n\t\t\tif (typeof itemValue !== \"string\") {\n\t\t\t\tthrow new InsightError(\"IS operator requires string fields.\");\n\t\t\t}\n\n\t\t\treturn regex.test(itemValue);\n\t\t};\n\t}\n\n\t// Check if the wildcard pattern in the IS clause is invalid\n\tprivate hasInvalidWildcardPattern(value: string): boolean {\n\t\tconst firstIndex = value.indexOf(\"*\");\n\t\tconst lastIndex = value.lastIndexOf(\"*\");\n\n\t\t// If there are no wildcards, the pattern is valid\n\t\tif (firstIndex === -1) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// The pattern is only valid if the wildcard appears at the start or end\n\t\t// Invalid patterns include: 'ab*cd' or 'a*b*c'\n\t\treturn firstIndex !== 0 && lastIndex !== value.length - 1;\n\t}\n\n\t// Build regex pattern for handling wildcard in IS operator\n\tprivate buildRegexPattern(value: string): string {\n\t\tconst specialChars = /[.+?^${}()|[\\]\\\\]/g; // Exclude '*'\n\t\tconst escapedValue = value.replace(specialChars, \"\\\\$&\");\n\t\treturn `^${escapedValue.replace(/\\*/g, \".*\")}$`;\n\t}\n\n\t// Get value from Section or InsightResult based on key\n\tprivate getValueByKey(item: Section | InsightResult, key: string): any {\n\t\t// If item is already an InsightResult, return the value directly\n\t\tif (!(item instanceof Section)) {\n\t\t\treturn item[key];\n\t\t}\n\n\t\t// Otherwise, it's a Section and we access its fields\n\t\tconst [id, field] = key.split(\"_\");\n\t\tif (id !== this.datasetId) {\n\t\t\tthrow new InsightError(`Key does not match dataset ID: ${key}`);\n\t\t}\n\t\tswitch (field) {\n\t\t\tcase \"uuid\":\n\t\t\t\treturn String(item.getUuid());\n\t\t\tcase \"id\":\n\t\t\t\treturn String(item.getId());\n\t\t\tcase \"title\":\n\t\t\t\treturn String(item.getTitle());\n\t\t\tcase \"instructor\":\n\t\t\t\treturn String(item.getInstructor());\n\t\t\tcase \"dept\":\n\t\t\t\treturn String(item.getDept());\n\t\t\tcase \"year\":\n\t\t\t\treturn this.checkYear(item);\n\t\t\tcase \"avg\":\n\t\t\t\treturn item.getAvg();\n\t\t\tcase \"pass\":\n\t\t\t\treturn item.getPass();\n\t\t\tcase \"fail\":\n\t\t\t\treturn item.getFail();\n\t\t\tcase \"audit\":\n\t\t\t\treturn item.getAudit();\n\t\t\tdefault:\n\t\t\t\tthrow new InsightError(`Invalid column: ${key}`);\n\t\t}\n\t}\n\n\t// Adjust year based on the instructor field\n\tprivate checkYear(item: Section): number {\n\t\tif (item.getInstructor() === \"\") {\n\t\t\tconst num = 1900;\n\t\t\treturn num;\n\t\t}\n\t\treturn item.getYear();\n\t}\n\n\t// Apply transformations for GROUP and APPLY\n\tprivate applyTransformations(data: Section[], transformations: any): InsightResult[] {\n\t\tconst groupKeys = transformations.GROUP;\n\t\tconst groupedData = this.groupBy(data, groupKeys);\n\t\treturn this.applyAggregations(groupedData, transformations.APPLY, groupKeys);\n\t}\n\n\t// Group data by specified keys\n\tprivate groupBy(data: Section[], groupKeys: string[]): Map<string, Section[]> {\n\t\tconst groupedData = new Map<string, Section[]>();\n\n\t\tdata.forEach((item) => {\n\t\t\tconst groupKey = groupKeys.map((key) => this.getValueByKey(item, key)).join(\"_\");\n\t\t\tif (!groupedData.has(groupKey)) {\n\t\t\t\tgroupedData.set(groupKey, []);\n\t\t\t}\n\t\t\tgroupedData.get(groupKey)!.push(item);\n\t\t});\n\n\t\treturn groupedData;\n\t}\n\n\t// Apply aggregation rules to each group\n\tprivate applyAggregations(\n\t\tgroupedData: Map<string, Section[]>,\n\t\tapplyRules: any[],\n\t\tgroupKeys: string[]\n\t): InsightResult[] {\n\t\tconst results: InsightResult[] = [];\n\n\t\tgroupedData.forEach((group) => {\n\t\t\tconst result: any = {};\n\n\t\t\t// Include group keys (like sections_title) in each result\n\t\t\tgroupKeys.forEach((key) => {\n\t\t\t\tresult[key] = this.getValueByKey(group[0], key);\n\t\t\t});\n\n\t\t\tfor (const rule of applyRules) {\n\t\t\t\tconst applyKey = Object.keys(rule)[0];\n\t\t\t\tconst applyToken = rule[applyKey];\n\t\t\t\tconst aggregationField = Object.values(applyToken)[0] as string;\n\t\t\t\tconst aggregationType = Object.keys(applyToken)[0] as string;\n\n\t\t\t\tresult[applyKey] = this.performAggregation(aggregationType, group, aggregationField);\n\t\t\t}\n\n\t\t\tresults.push(result);\n\t\t});\n\n\t\treturn results;\n\t}\n\n\t// Perform aggregation operations\n\tprivate performAggregation(type: string, group: Section[], field: string): number {\n\t\tswitch (type) {\n\t\t\tcase \"MAX\":\n\t\t\t\treturn Math.max(...group.map((item) => this.getValueByKey(item, field) as number));\n\t\t\tcase \"MIN\":\n\t\t\t\treturn Math.min(...group.map((item) => this.getValueByKey(item, field) as number));\n\t\t\tcase \"AVG\": {\n\t\t\t\t// Ensure each value is converted to a Decimal and add them up\n\t\t\t\tconst total = group.reduce(\n\t\t\t\t\t(acc, item) => acc.add(new Decimal(this.getValueByKey(item, field) as number)),\n\t\t\t\t\tnew Decimal(0)\n\t\t\t\t);\n\n\t\t\t\t// Calculate the average by dividing total by the number of items (numRows)\n\t\t\t\tconst avg = total.toNumber() / group.length;\n\n\t\t\t\t// Round the result to two decimal places and cast it to a number\n\t\t\t\treturn Number(avg.toFixed(DECIMAL_PRECISION));\n\t\t\t}\n\n\t\t\tcase \"SUM\": {\n\t\t\t\t// Sum the values using Decimal for precision\n\t\t\t\tconst total = group.reduce(\n\t\t\t\t\t(acc, item) => acc.add(new Decimal(this.getValueByKey(item, field) as number)),\n\t\t\t\t\tnew Decimal(0)\n\t\t\t\t);\n\n\t\t\t\t// Round the sum to two decimal places and cast it to a number\n\t\t\t\treturn Number(total.toFixed(DECIMAL_PRECISION));\n\t\t\t}\n\t\t\tcase \"COUNT\":\n\t\t\t\treturn new Set(group.map((item) => this.getValueByKey(item, field))).size;\n\t\t\tdefault:\n\t\t\t\tthrow new InsightError(\"Invalid aggregation type\");\n\t\t}\n\t}\n\n\t// Apply options like COLUMNS and ORDER to the filtered or transformed data\n\tprivate applyOptions(data: Section[] | InsightResult[], options: any): InsightResult[] {\n\t\tif (!options.COLUMNS || !Array.isArray(options.COLUMNS)) {\n\t\t\tthrow new InsightError(\"OPTIONS must contain COLUMNS array.\");\n\t\t}\n\n\t\tconst columns = options.COLUMNS;\n\t\tlet result = data.map((item) => {\n\t\t\tconst res: any = {};\n\t\t\tfor (const col of columns) {\n\t\t\t\t// Check if item is a Section or InsightResult before accessing values\n\t\t\t\tres[col] = this.getValueByKey(item, col);\n\t\t\t}\n\t\t\treturn res;\n\t\t});\n\n\t\tif (options.ORDER) {\n\t\t\tresult = this.applyOrdering(result, options.ORDER);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t// Apply ordering based on the ORDER field in query\n\tprivate applyOrdering(data: InsightResult[], order: any): InsightResult[] {\n\t\tif (typeof order === \"string\") {\n\t\t\tconst key = order;\n\t\t\treturn data.sort((a, b) => (a[key] > b[key] ? 1 : a[key] < b[key] ? -1 : 0));\n\t\t} else if (typeof order === \"object\" && order.keys && Array.isArray(order.keys)) {\n\t\t\tconst keys = order.keys;\n\t\t\tconst dir = order.dir === \"DOWN\" ? -1 : 1;\n\n\t\t\treturn data.sort((a, b) => {\n\t\t\t\tfor (const key of keys) {\n\t\t\t\t\tif (a[key] > b[key]) {\n\t\t\t\t\t\treturn dir;\n\t\t\t\t\t}\n\t\t\t\t\tif (a[key] < b[key]) {\n\t\t\t\t\t\treturn -dir;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t} else {\n\t\t\tthrow new InsightError(\"Invalid ORDER format.\");\n\t\t}\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fdbca2a1ce9d710a51f0c008e51ce19f4d02b2cf","contentHash":"acb143ba31bd1a59d47e95ae1c3d438d2966bd65dace53aba3f76246c540bcab"},"/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/QuerySingleIdChecker.ts":{"path":"/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/QuerySingleIdChecker.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":25},"end":{"line":3,"column":52}},"2":{"start":{"line":6,"column":27},"end":{"line":6,"column":36}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":46}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":50}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":37}},"6":{"start":{"line":12,"column":8},"end":{"line":17,"column":9}},"7":{"start":{"line":16,"column":12},"end":{"line":16,"column":103}},"8":{"start":{"line":18,"column":32},"end":{"line":18,"column":62}},"9":{"start":{"line":19,"column":8},"end":{"line":23,"column":9}},"10":{"start":{"line":20,"column":12},"end":{"line":22,"column":13}},"11":{"start":{"line":21,"column":16},"end":{"line":21,"column":127}},"12":{"start":{"line":26,"column":27},"end":{"line":26,"column":36}},"13":{"start":{"line":27,"column":32},"end":{"line":27,"column":53}},"14":{"start":{"line":28,"column":8},"end":{"line":34,"column":9}},"15":{"start":{"line":29,"column":12},"end":{"line":33,"column":13}},"16":{"start":{"line":30,"column":16},"end":{"line":32,"column":17}},"17":{"start":{"line":31,"column":20},"end":{"line":31,"column":40}},"18":{"start":{"line":35,"column":8},"end":{"line":35,"column":26}},"19":{"start":{"line":38,"column":8},"end":{"line":55,"column":9}},"20":{"start":{"line":39,"column":12},"end":{"line":54,"column":13}},"21":{"start":{"line":40,"column":16},"end":{"line":53,"column":17}},"22":{"start":{"line":41,"column":20},"end":{"line":52,"column":21}},"23":{"start":{"line":42,"column":24},"end":{"line":42,"column":70}},"24":{"start":{"line":44,"column":25},"end":{"line":52,"column":21}},"25":{"start":{"line":45,"column":24},"end":{"line":45,"column":78}},"26":{"start":{"line":47,"column":25},"end":{"line":52,"column":21}},"27":{"start":{"line":48,"column":24},"end":{"line":48,"column":69}},"28":{"start":{"line":50,"column":25},"end":{"line":52,"column":21}},"29":{"start":{"line":51,"column":24},"end":{"line":51,"column":78}},"30":{"start":{"line":58,"column":26},"end":{"line":58,"column":43}},"31":{"start":{"line":59,"column":8},"end":{"line":59,"column":34}},"32":{"start":{"line":62,"column":8},"end":{"line":66,"column":9}},"33":{"start":{"line":63,"column":12},"end":{"line":65,"column":13}},"34":{"start":{"line":64,"column":16},"end":{"line":64,"column":57}},"35":{"start":{"line":69,"column":8},"end":{"line":79,"column":9}},"36":{"start":{"line":70,"column":12},"end":{"line":78,"column":13}},"37":{"start":{"line":71,"column":33},"end":{"line":71,"column":53}},"38":{"start":{"line":72,"column":16},"end":{"line":77,"column":17}},"39":{"start":{"line":73,"column":20},"end":{"line":76,"column":21}},"40":{"start":{"line":74,"column":42},"end":{"line":74,"column":74}},"41":{"start":{"line":75,"column":24},"end":{"line":75,"column":50}},"42":{"start":{"line":82,"column":0},"end":{"line":82,"column":39}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":30},"end":{"line":10,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":37},"end":{"line":24,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":30},"end":{"line":36,"column":5}},"line":25},"3":{"name":"(anonymous_3)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":39},"end":{"line":56,"column":5}},"line":37},"4":{"name":"(anonymous_4)","decl":{"start":{"line":57,"column":4},"end":{"line":57,"column":5}},"loc":{"start":{"line":57,"column":45},"end":{"line":60,"column":5}},"line":57},"5":{"name":"(anonymous_5)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":50},"end":{"line":67,"column":5}},"line":61},"6":{"name":"(anonymous_6)","decl":{"start":{"line":68,"column":4},"end":{"line":68,"column":5}},"loc":{"start":{"line":68,"column":55},"end":{"line":80,"column":5}},"line":68}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":8},"end":{"line":17,"column":9}},"type":"if","locations":[{"start":{"line":12,"column":8},"end":{"line":17,"column":9}},{"start":{"line":12,"column":8},"end":{"line":17,"column":9}}],"line":12},"1":{"loc":{"start":{"line":12,"column":12},"end":{"line":15,"column":46}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":18}},{"start":{"line":13,"column":12},"end":{"line":13,"column":37}},{"start":{"line":14,"column":12},"end":{"line":14,"column":50}},{"start":{"line":15,"column":12},"end":{"line":15,"column":46}}],"line":12},"2":{"loc":{"start":{"line":20,"column":12},"end":{"line":22,"column":13}},"type":"if","locations":[{"start":{"line":20,"column":12},"end":{"line":22,"column":13}},{"start":{"line":20,"column":12},"end":{"line":22,"column":13}}],"line":20},"3":{"loc":{"start":{"line":20,"column":16},"end":{"line":20,"column":69}},"type":"binary-expr","locations":[{"start":{"line":20,"column":16},"end":{"line":20,"column":44}},{"start":{"line":20,"column":48},"end":{"line":20,"column":69}}],"line":20},"4":{"loc":{"start":{"line":28,"column":8},"end":{"line":34,"column":9}},"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":34,"column":9}},{"start":{"line":28,"column":8},"end":{"line":34,"column":9}}],"line":28},"5":{"loc":{"start":{"line":28,"column":12},"end":{"line":28,"column":67}},"type":"binary-expr","locations":[{"start":{"line":28,"column":12},"end":{"line":28,"column":27}},{"start":{"line":28,"column":31},"end":{"line":28,"column":67}}],"line":28},"6":{"loc":{"start":{"line":38,"column":8},"end":{"line":55,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":55,"column":9}},{"start":{"line":38,"column":8},"end":{"line":55,"column":9}}],"line":38},"7":{"loc":{"start":{"line":38,"column":12},"end":{"line":38,"column":51}},"type":"binary-expr","locations":[{"start":{"line":38,"column":12},"end":{"line":38,"column":35}},{"start":{"line":38,"column":39},"end":{"line":38,"column":51}}],"line":38},"8":{"loc":{"start":{"line":40,"column":16},"end":{"line":53,"column":17}},"type":"if","locations":[{"start":{"line":40,"column":16},"end":{"line":53,"column":17}},{"start":{"line":40,"column":16},"end":{"line":53,"column":17}}],"line":40},"9":{"loc":{"start":{"line":41,"column":20},"end":{"line":52,"column":21}},"type":"if","locations":[{"start":{"line":41,"column":20},"end":{"line":52,"column":21}},{"start":{"line":41,"column":20},"end":{"line":52,"column":21}}],"line":41},"10":{"loc":{"start":{"line":44,"column":25},"end":{"line":52,"column":21}},"type":"if","locations":[{"start":{"line":44,"column":25},"end":{"line":52,"column":21}},{"start":{"line":44,"column":25},"end":{"line":52,"column":21}}],"line":44},"11":{"loc":{"start":{"line":47,"column":25},"end":{"line":52,"column":21}},"type":"if","locations":[{"start":{"line":47,"column":25},"end":{"line":52,"column":21}},{"start":{"line":47,"column":25},"end":{"line":52,"column":21}}],"line":47},"12":{"loc":{"start":{"line":47,"column":29},"end":{"line":47,"column":78}},"type":"binary-expr","locations":[{"start":{"line":47,"column":29},"end":{"line":47,"column":57}},{"start":{"line":47,"column":61},"end":{"line":47,"column":78}}],"line":47},"13":{"loc":{"start":{"line":50,"column":25},"end":{"line":52,"column":21}},"type":"if","locations":[{"start":{"line":50,"column":25},"end":{"line":52,"column":21}},{"start":{"line":50,"column":25},"end":{"line":52,"column":21}}],"line":50},"14":{"loc":{"start":{"line":63,"column":12},"end":{"line":65,"column":13}},"type":"if","locations":[{"start":{"line":63,"column":12},"end":{"line":65,"column":13}},{"start":{"line":63,"column":12},"end":{"line":65,"column":13}}],"line":63},"15":{"loc":{"start":{"line":63,"column":16},"end":{"line":63,"column":57}},"type":"binary-expr","locations":[{"start":{"line":63,"column":16},"end":{"line":63,"column":40}},{"start":{"line":63,"column":44},"end":{"line":63,"column":57}}],"line":63},"16":{"loc":{"start":{"line":73,"column":20},"end":{"line":76,"column":21}},"type":"if","locations":[{"start":{"line":73,"column":20},"end":{"line":76,"column":21}},{"start":{"line":73,"column":20},"end":{"line":76,"column":21}}],"line":73}},"s":{"0":1,"1":1,"2":45,"3":45,"4":45,"5":45,"6":45,"7":0,"8":45,"9":45,"10":104,"11":0,"12":45,"13":45,"14":45,"15":14,"16":14,"17":14,"18":45,"19":273,"20":273,"21":445,"22":445,"23":44,"24":401,"25":14,"26":387,"27":228,"28":159,"29":0,"30":44,"31":44,"32":0,"33":0,"34":0,"35":14,"36":14,"37":14,"38":14,"39":14,"40":14,"41":14,"42":1},"f":{"0":45,"1":45,"2":45,"3":273,"4":44,"5":0,"6":14},"b":{"0":[0,45],"1":[45,45,45,45],"2":[0,104],"3":[104,90],"4":[14,31],"5":[45,14],"6":[273,0],"7":[273,273],"8":[445,0],"9":[44,401],"10":[14,387],"11":[228,159],"12":[387,228],"13":[0,159],"14":[0,0],"15":[0,0],"16":[14,0]},"inputSourceMap":{"version":3,"file":"/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/QuerySingleIdChecker.ts","sources":["/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/QuerySingleIdChecker.ts"],"names":[],"mappings":"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","sourcesContent":["import { InsightError } from \"./IInsightFacade\";\n\nexport default class QuerySingleIdChecker {\n\t// Ensure the query references a single dataset\n\tpublic checkSingleDataset(query: unknown): boolean {\n\t\tconst datasetIds = new Set<string>();\n\n\t\t// Ensure OPTIONS and COLUMNS exist and are valid\n\t\tthis.validateOptionsAndColumns(query);\n\n\t\t// Collect dataset IDs throughout the query\n\t\tthis.collectDatasetIds(query, datasetIds);\n\n\t\treturn datasetIds.size === 1;\n\t}\n\n\t// Validate that OPTIONS and COLUMNS are present and correctly formatted\n\tprivate validateOptionsAndColumns(query: unknown): void {\n\t\tif (\n\t\t\t!query ||\n\t\t\ttypeof query !== \"object\" ||\n\t\t\t!Array.isArray((query as any).OPTIONS?.COLUMNS) ||\n\t\t\t(query as any).OPTIONS.COLUMNS.length === 0\n\t\t) {\n\t\t\tthrow new InsightError(\"OPTIONS must contain a non-empty COLUMNS array.\");\n\t\t}\n\n\t\t// Collect custom APPLY keys if TRANSFORMATIONS exists\n\t\tconst customApplyKeys = this.getCustomApplyKeys(query);\n\n\t\t// Validate each column in COLUMNS but ignore custom APPLY keys\n\t\tfor (const column of (query as any).OPTIONS.COLUMNS) {\n\t\t\t// Skip validation for custom APPLY keys without \"_\"\n\t\t\tif (!customApplyKeys.has(column) && !column.includes(\"_\")) {\n\t\t\t\tthrow new InsightError(`Key does not match dataset ID format or custom APPLY key: ${column}`);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Extract custom APPLY keys from TRANSFORMATIONS\n\tprivate getCustomApplyKeys(query: unknown): Set<string> {\n\t\tconst customKeys = new Set<string>();\n\t\tconst transformations = (query as any).TRANSFORMATIONS;\n\n\t\tif (transformations && Array.isArray(transformations.APPLY)) {\n\t\t\tfor (const applyRule of transformations.APPLY) {\n\t\t\t\tfor (const key in applyRule) {\n\t\t\t\t\tcustomKeys.add(key); // Add custom APPLY keys (e.g., overallAvg)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn customKeys;\n\t}\n\n\t// Recursive function to traverse through the query object and collect dataset IDs\n\tprivate collectDatasetIds(obj: any, datasetIds: Set<string>): void {\n\t\tif (typeof obj === \"object\" && obj !== null) {\n\t\t\tfor (const key in obj) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(obj, key)) {\n\t\t\t\t\tif (key.includes(\"_\")) {\n\t\t\t\t\t\tthis.extractDatasetIdFromKey(key, datasetIds);\n\t\t\t\t\t} else if (key === \"APPLY\") {\n\t\t\t\t\t\tthis.collectDatasetIdsFromApply(obj[key], datasetIds);\n\t\t\t\t\t} else if (typeof obj[key] === \"object\" && obj[key] !== null) {\n\t\t\t\t\t\tthis.collectDatasetIds(obj[key], datasetIds);\n\t\t\t\t\t} else if (Array.isArray(obj[key])) {\n\t\t\t\t\t\tthis.collectDatasetIdsFromArray(obj[key], datasetIds);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Extract and add dataset ID from a key that contains \"_\"\n\tprivate extractDatasetIdFromKey(key: string, datasetIds: Set<string>): void {\n\t\tconst datasetId = key.split(\"_\")[0];\n\t\tdatasetIds.add(datasetId);\n\t}\n\n\t// Collect dataset IDs from an array of objects\n\tprivate collectDatasetIdsFromArray(array: any[], datasetIds: Set<string>): void {\n\t\tfor (const item of array) {\n\t\t\tif (typeof item === \"object\" && item !== null) {\n\t\t\t\tthis.collectDatasetIds(item, datasetIds);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Special handling to collect dataset IDs from APPLY rules\n\tprivate collectDatasetIdsFromApply(applyRules: any[], datasetIds: Set<string>): void {\n\t\tfor (const applyRule of applyRules) {\n\t\t\tfor (const operation in applyRule) {\n\t\t\t\tconst applyObj = applyRule[operation];\n\t\t\t\tfor (const applyKey in applyObj) {\n\t\t\t\t\tif (applyObj[applyKey].includes(\"_\")) {\n\t\t\t\t\t\t// Only consider fields with \"_\"\n\t\t\t\t\t\tconst datasetId = applyObj[applyKey].split(\"_\")[0];\n\t\t\t\t\t\tdatasetIds.add(datasetId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"559d42030ca5c56209d3614a81ee412e3c5b8653","contentHash":"3753dc485b7c202a046cd263f64c52f3140b97f32a1d547f0a20fc415354fa71"},"/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/RoomQueryRunner.ts":{"path":"/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/RoomQueryRunner.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":25},"end":{"line":6,"column":52}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":49}},"5":{"start":{"line":8,"column":21},"end":{"line":8,"column":59}},"6":{"start":{"line":9,"column":26},"end":{"line":9,"column":27}},"7":{"start":{"line":14,"column":8},"end":{"line":14,"column":55}},"8":{"start":{"line":17,"column":8},"end":{"line":17,"column":54}},"9":{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},"10":{"start":{"line":19,"column":12},"end":{"line":19,"column":107}},"11":{"start":{"line":21,"column":24},"end":{"line":21,"column":59}},"12":{"start":{"line":22,"column":29},"end":{"line":22,"column":68}},"13":{"start":{"line":23,"column":32},"end":{"line":25,"column":26}},"14":{"start":{"line":26,"column":8},"end":{"line":26,"column":65}},"15":{"start":{"line":29,"column":8},"end":{"line":33,"column":9}},"16":{"start":{"line":30,"column":12},"end":{"line":32,"column":13}},"17":{"start":{"line":31,"column":16},"end":{"line":31,"column":41}},"18":{"start":{"line":34,"column":8},"end":{"line":34,"column":94}},"19":{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},"20":{"start":{"line":38,"column":12},"end":{"line":38,"column":24}},"21":{"start":{"line":40,"column":31},"end":{"line":40,"column":63}},"22":{"start":{"line":41,"column":8},"end":{"line":41,"column":43}},"23":{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},"24":{"start":{"line":45,"column":12},"end":{"line":45,"column":45}},"25":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"26":{"start":{"line":48,"column":12},"end":{"line":48,"column":43}},"27":{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},"28":{"start":{"line":51,"column":12},"end":{"line":51,"column":45}},"29":{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},"30":{"start":{"line":54,"column":12},"end":{"line":54,"column":48}},"31":{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},"32":{"start":{"line":57,"column":12},"end":{"line":57,"column":43}},"33":{"start":{"line":59,"column":8},"end":{"line":59,"column":76}},"34":{"start":{"line":62,"column":27},"end":{"line":62,"column":97}},"35":{"start":{"line":62,"column":60},"end":{"line":62,"column":96}},"36":{"start":{"line":63,"column":8},"end":{"line":63,"column":76}},"37":{"start":{"line":63,"column":25},"end":{"line":63,"column":75}},"38":{"start":{"line":63,"column":58},"end":{"line":63,"column":74}},"39":{"start":{"line":66,"column":27},"end":{"line":66,"column":96}},"40":{"start":{"line":66,"column":59},"end":{"line":66,"column":95}},"41":{"start":{"line":67,"column":8},"end":{"line":67,"column":75}},"42":{"start":{"line":67,"column":25},"end":{"line":67,"column":74}},"43":{"start":{"line":67,"column":57},"end":{"line":67,"column":73}},"44":{"start":{"line":70,"column":26},"end":{"line":70,"column":65}},"45":{"start":{"line":71,"column":8},"end":{"line":71,"column":42}},"46":{"start":{"line":71,"column":25},"end":{"line":71,"column":41}},"47":{"start":{"line":74,"column":25},"end":{"line":74,"column":65}},"48":{"start":{"line":75,"column":27},"end":{"line":75,"column":42}},"49":{"start":{"line":76,"column":20},"end":{"line":76,"column":46}},"50":{"start":{"line":77,"column":22},"end":{"line":77,"column":37}},"51":{"start":{"line":78,"column":19},"end":{"line":78,"column":36}},"52":{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},"53":{"start":{"line":80,"column":12},"end":{"line":80,"column":93}},"54":{"start":{"line":82,"column":8},"end":{"line":94,"column":10}},"55":{"start":{"line":83,"column":30},"end":{"line":83,"column":59}},"56":{"start":{"line":84,"column":12},"end":{"line":86,"column":13}},"57":{"start":{"line":85,"column":16},"end":{"line":85,"column":95}},"58":{"start":{"line":87,"column":12},"end":{"line":89,"column":13}},"59":{"start":{"line":88,"column":16},"end":{"line":88,"column":41}},"60":{"start":{"line":90,"column":12},"end":{"line":92,"column":13}},"61":{"start":{"line":91,"column":16},"end":{"line":91,"column":41}},"62":{"start":{"line":93,"column":12},"end":{"line":93,"column":39}},"63":{"start":{"line":97,"column":20},"end":{"line":97,"column":47}},"64":{"start":{"line":98,"column":22},"end":{"line":98,"column":38}},"65":{"start":{"line":99,"column":19},"end":{"line":99,"column":36}},"66":{"start":{"line":100,"column":8},"end":{"line":102,"column":9}},"67":{"start":{"line":101,"column":12},"end":{"line":101,"column":93}},"68":{"start":{"line":103,"column":8},"end":{"line":105,"column":9}},"69":{"start":{"line":104,"column":12},"end":{"line":104,"column":92}},"70":{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},"71":{"start":{"line":107,"column":12},"end":{"line":107,"column":96}},"72":{"start":{"line":109,"column":29},"end":{"line":109,"column":58}},"73":{"start":{"line":110,"column":22},"end":{"line":110,"column":46}},"74":{"start":{"line":111,"column":8},"end":{"line":117,"column":10}},"75":{"start":{"line":112,"column":30},"end":{"line":112,"column":59}},"76":{"start":{"line":113,"column":12},"end":{"line":115,"column":13}},"77":{"start":{"line":114,"column":16},"end":{"line":114,"column":95}},"78":{"start":{"line":116,"column":12},"end":{"line":116,"column":41}},"79":{"start":{"line":120,"column":27},"end":{"line":120,"column":45}},"80":{"start":{"line":121,"column":26},"end":{"line":121,"column":48}},"81":{"start":{"line":122,"column":8},"end":{"line":122,"column":66}},"82":{"start":{"line":125,"column":29},"end":{"line":125,"column":49}},"83":{"start":{"line":126,"column":29},"end":{"line":126,"column":64}},"84":{"start":{"line":127,"column":8},"end":{"line":127,"column":56}},"85":{"start":{"line":130,"column":8},"end":{"line":132,"column":9}},"86":{"start":{"line":131,"column":12},"end":{"line":131,"column":29}},"87":{"start":{"line":133,"column":28},"end":{"line":133,"column":42}},"88":{"start":{"line":134,"column":8},"end":{"line":136,"column":9}},"89":{"start":{"line":135,"column":12},"end":{"line":135,"column":93}},"90":{"start":{"line":137,"column":8},"end":{"line":160,"column":9}},"91":{"start":{"line":139,"column":16},"end":{"line":139,"column":50}},"92":{"start":{"line":141,"column":16},"end":{"line":141,"column":51}},"93":{"start":{"line":143,"column":16},"end":{"line":143,"column":48}},"94":{"start":{"line":145,"column":16},"end":{"line":145,"column":46}},"95":{"start":{"line":147,"column":16},"end":{"line":147,"column":49}},"96":{"start":{"line":149,"column":16},"end":{"line":149,"column":46}},"97":{"start":{"line":151,"column":16},"end":{"line":151,"column":51}},"98":{"start":{"line":153,"column":16},"end":{"line":153,"column":39}},"99":{"start":{"line":155,"column":16},"end":{"line":155,"column":37}},"100":{"start":{"line":157,"column":16},"end":{"line":157,"column":37}},"101":{"start":{"line":159,"column":16},"end":{"line":159,"column":82}},"102":{"start":{"line":163,"column":26},"end":{"line":163,"column":47}},"103":{"start":{"line":164,"column":28},"end":{"line":164,"column":57}},"104":{"start":{"line":165,"column":8},"end":{"line":165,"column":85}},"105":{"start":{"line":168,"column":28},"end":{"line":168,"column":37}},"106":{"start":{"line":169,"column":8},"end":{"line":175,"column":11}},"107":{"start":{"line":170,"column":29},"end":{"line":170,"column":92}},"108":{"start":{"line":170,"column":52},"end":{"line":170,"column":81}},"109":{"start":{"line":171,"column":12},"end":{"line":173,"column":13}},"110":{"start":{"line":172,"column":16},"end":{"line":172,"column":46}},"111":{"start":{"line":174,"column":12},"end":{"line":174,"column":49}},"112":{"start":{"line":176,"column":8},"end":{"line":176,"column":27}},"113":{"start":{"line":179,"column":24},"end":{"line":179,"column":26}},"114":{"start":{"line":180,"column":8},"end":{"line":193,"column":11}},"115":{"start":{"line":181,"column":27},"end":{"line":181,"column":29}},"116":{"start":{"line":182,"column":12},"end":{"line":184,"column":15}},"117":{"start":{"line":183,"column":16},"end":{"line":183,"column":64}},"118":{"start":{"line":185,"column":12},"end":{"line":191,"column":13}},"119":{"start":{"line":186,"column":33},"end":{"line":186,"column":53}},"120":{"start":{"line":187,"column":35},"end":{"line":187,"column":49}},"121":{"start":{"line":188,"column":41},"end":{"line":188,"column":69}},"122":{"start":{"line":189,"column":40},"end":{"line":189,"column":66}},"123":{"start":{"line":190,"column":16},"end":{"line":190,"column":101}},"124":{"start":{"line":192,"column":12},"end":{"line":192,"column":33}},"125":{"start":{"line":194,"column":8},"end":{"line":194,"column":23}},"126":{"start":{"line":197,"column":26},"end":{"line":197,"column":100}},"127":{"start":{"line":197,"column":48},"end":{"line":197,"column":99}},"128":{"start":{"line":198,"column":8},"end":{"line":220,"column":9}},"129":{"start":{"line":200,"column":16},"end":{"line":200,"column":89}},"130":{"start":{"line":200,"column":55},"end":{"line":200,"column":86}},"131":{"start":{"line":202,"column":16},"end":{"line":202,"column":89}},"132":{"start":{"line":202,"column":55},"end":{"line":202,"column":86}},"133":{"start":{"line":204,"column":16},"end":{"line":206,"column":17}},"134":{"start":{"line":205,"column":20},"end":{"line":205,"column":104}},"135":{"start":{"line":207,"column":30},"end":{"line":207,"column":154}},"136":{"start":{"line":207,"column":58},"end":{"line":207,"column":124}},"137":{"start":{"line":208,"column":28},"end":{"line":208,"column":59}},"138":{"start":{"line":209,"column":16},"end":{"line":209,"column":62}},"139":{"start":{"line":212,"column":16},"end":{"line":214,"column":17}},"140":{"start":{"line":213,"column":20},"end":{"line":213,"column":104}},"141":{"start":{"line":215,"column":16},"end":{"line":215,"column":132}},"142":{"start":{"line":215,"column":62},"end":{"line":215,"column":99}},"143":{"start":{"line":217,"column":16},"end":{"line":217,"column":90}},"144":{"start":{"line":217,"column":51},"end":{"line":217,"column":82}},"145":{"start":{"line":219,"column":16},"end":{"line":219,"column":84}},"146":{"start":{"line":223,"column":8},"end":{"line":225,"column":9}},"147":{"start":{"line":224,"column":12},"end":{"line":224,"column":91}},"148":{"start":{"line":226,"column":24},"end":{"line":226,"column":39}},"149":{"start":{"line":227,"column":21},"end":{"line":233,"column":10}},"150":{"start":{"line":228,"column":24},"end":{"line":228,"column":26}},"151":{"start":{"line":229,"column":12},"end":{"line":231,"column":13}},"152":{"start":{"line":230,"column":16},"end":{"line":230,"column":57}},"153":{"start":{"line":232,"column":12},"end":{"line":232,"column":23}},"154":{"start":{"line":234,"column":8},"end":{"line":236,"column":9}},"155":{"start":{"line":235,"column":12},"end":{"line":235,"column":63}},"156":{"start":{"line":237,"column":8},"end":{"line":237,"column":22}},"157":{"start":{"line":240,"column":8},"end":{"line":261,"column":9}},"158":{"start":{"line":241,"column":24},"end":{"line":241,"column":29}},"159":{"start":{"line":242,"column":12},"end":{"line":242,"column":89}},"160":{"start":{"line":242,"column":40},"end":{"line":242,"column":86}},"161":{"start":{"line":244,"column":13},"end":{"line":261,"column":9}},"162":{"start":{"line":245,"column":25},"end":{"line":245,"column":35}},"163":{"start":{"line":246,"column":24},"end":{"line":246,"column":53}},"164":{"start":{"line":247,"column":12},"end":{"line":257,"column":15}},"165":{"start":{"line":248,"column":16},"end":{"line":255,"column":17}},"166":{"start":{"line":249,"column":20},"end":{"line":251,"column":21}},"167":{"start":{"line":250,"column":24},"end":{"line":250,"column":35}},"168":{"start":{"line":252,"column":20},"end":{"line":254,"column":21}},"169":{"start":{"line":253,"column":24},"end":{"line":253,"column":36}},"170":{"start":{"line":256,"column":16},"end":{"line":256,"column":25}},"171":{"start":{"line":260,"column":12},"end":{"line":260,"column":77}},"172":{"start":{"line":264,"column":0},"end":{"line":264,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":32},"end":{"line":15,"column":5}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":25},"end":{"line":27,"column":5}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":28},"end":{"line":35,"column":5}},"line":28},"4":{"name":"(anonymous_4)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":30},"end":{"line":42,"column":5}},"line":36},"5":{"name":"(anonymous_5)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":5}},"loc":{"start":{"line":43,"column":32},"end":{"line":60,"column":5}},"line":43},"6":{"name":"(anonymous_6)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":29},"end":{"line":64,"column":5}},"line":61},"7":{"name":"(anonymous_7)","decl":{"start":{"line":62,"column":45},"end":{"line":62,"column":46}},"loc":{"start":{"line":62,"column":60},"end":{"line":62,"column":96}},"line":62},"8":{"name":"(anonymous_8)","decl":{"start":{"line":63,"column":15},"end":{"line":63,"column":16}},"loc":{"start":{"line":63,"column":25},"end":{"line":63,"column":75}},"line":63},"9":{"name":"(anonymous_9)","decl":{"start":{"line":63,"column":42},"end":{"line":63,"column":43}},"loc":{"start":{"line":63,"column":58},"end":{"line":63,"column":74}},"line":63},"10":{"name":"(anonymous_10)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":27},"end":{"line":68,"column":5}},"line":65},"11":{"name":"(anonymous_11)","decl":{"start":{"line":66,"column":44},"end":{"line":66,"column":45}},"loc":{"start":{"line":66,"column":59},"end":{"line":66,"column":95}},"line":66},"12":{"name":"(anonymous_12)","decl":{"start":{"line":67,"column":15},"end":{"line":67,"column":16}},"loc":{"start":{"line":67,"column":25},"end":{"line":67,"column":74}},"line":67},"13":{"name":"(anonymous_13)","decl":{"start":{"line":67,"column":41},"end":{"line":67,"column":42}},"loc":{"start":{"line":67,"column":57},"end":{"line":67,"column":73}},"line":67},"14":{"name":"(anonymous_14)","decl":{"start":{"line":69,"column":4},"end":{"line":69,"column":5}},"loc":{"start":{"line":69,"column":28},"end":{"line":72,"column":5}},"line":69},"15":{"name":"(anonymous_15)","decl":{"start":{"line":71,"column":15},"end":{"line":71,"column":16}},"loc":{"start":{"line":71,"column":25},"end":{"line":71,"column":41}},"line":71},"16":{"name":"(anonymous_16)","decl":{"start":{"line":73,"column":4},"end":{"line":73,"column":5}},"loc":{"start":{"line":73,"column":28},"end":{"line":95,"column":5}},"line":73},"17":{"name":"(anonymous_17)","decl":{"start":{"line":82,"column":15},"end":{"line":82,"column":16}},"loc":{"start":{"line":82,"column":25},"end":{"line":94,"column":9}},"line":82},"18":{"name":"(anonymous_18)","decl":{"start":{"line":96,"column":4},"end":{"line":96,"column":5}},"loc":{"start":{"line":96,"column":26},"end":{"line":118,"column":5}},"line":96},"19":{"name":"(anonymous_19)","decl":{"start":{"line":111,"column":15},"end":{"line":111,"column":16}},"loc":{"start":{"line":111,"column":25},"end":{"line":117,"column":9}},"line":111},"20":{"name":"(anonymous_20)","decl":{"start":{"line":119,"column":4},"end":{"line":119,"column":5}},"loc":{"start":{"line":119,"column":37},"end":{"line":123,"column":5}},"line":119},"21":{"name":"(anonymous_21)","decl":{"start":{"line":124,"column":4},"end":{"line":124,"column":5}},"loc":{"start":{"line":124,"column":29},"end":{"line":128,"column":5}},"line":124},"22":{"name":"(anonymous_22)","decl":{"start":{"line":129,"column":4},"end":{"line":129,"column":5}},"loc":{"start":{"line":129,"column":29},"end":{"line":161,"column":5}},"line":129},"23":{"name":"(anonymous_23)","decl":{"start":{"line":162,"column":4},"end":{"line":162,"column":5}},"loc":{"start":{"line":162,"column":48},"end":{"line":166,"column":5}},"line":162},"24":{"name":"(anonymous_24)","decl":{"start":{"line":167,"column":4},"end":{"line":167,"column":5}},"loc":{"start":{"line":167,"column":29},"end":{"line":177,"column":5}},"line":167},"25":{"name":"(anonymous_25)","decl":{"start":{"line":169,"column":21},"end":{"line":169,"column":22}},"loc":{"start":{"line":169,"column":31},"end":{"line":175,"column":9}},"line":169},"26":{"name":"(anonymous_26)","decl":{"start":{"line":170,"column":43},"end":{"line":170,"column":44}},"loc":{"start":{"line":170,"column":52},"end":{"line":170,"column":81}},"line":170},"27":{"name":"(anonymous_27)","decl":{"start":{"line":178,"column":4},"end":{"line":178,"column":5}},"loc":{"start":{"line":178,"column":58},"end":{"line":195,"column":5}},"line":178},"28":{"name":"(anonymous_28)","decl":{"start":{"line":180,"column":28},"end":{"line":180,"column":29}},"loc":{"start":{"line":180,"column":39},"end":{"line":193,"column":9}},"line":180},"29":{"name":"(anonymous_29)","decl":{"start":{"line":182,"column":30},"end":{"line":182,"column":31}},"loc":{"start":{"line":182,"column":39},"end":{"line":184,"column":13}},"line":182},"30":{"name":"(anonymous_30)","decl":{"start":{"line":196,"column":4},"end":{"line":196,"column":5}},"loc":{"start":{"line":196,"column":43},"end":{"line":221,"column":5}},"line":196},"31":{"name":"(anonymous_31)","decl":{"start":{"line":197,"column":38},"end":{"line":197,"column":39}},"loc":{"start":{"line":197,"column":48},"end":{"line":197,"column":99}},"line":197},"32":{"name":"(anonymous_32)","decl":{"start":{"line":200,"column":45},"end":{"line":200,"column":46}},"loc":{"start":{"line":200,"column":55},"end":{"line":200,"column":86}},"line":200},"33":{"name":"(anonymous_33)","decl":{"start":{"line":202,"column":45},"end":{"line":202,"column":46}},"loc":{"start":{"line":202,"column":55},"end":{"line":202,"column":86}},"line":202},"34":{"name":"(anonymous_34)","decl":{"start":{"line":207,"column":43},"end":{"line":207,"column":44}},"loc":{"start":{"line":207,"column":58},"end":{"line":207,"column":124}},"line":207},"35":{"name":"(anonymous_35)","decl":{"start":{"line":215,"column":47},"end":{"line":215,"column":48}},"loc":{"start":{"line":215,"column":62},"end":{"line":215,"column":99}},"line":215},"36":{"name":"(anonymous_36)","decl":{"start":{"line":217,"column":41},"end":{"line":217,"column":42}},"loc":{"start":{"line":217,"column":51},"end":{"line":217,"column":82}},"line":217},"37":{"name":"(anonymous_37)","decl":{"start":{"line":222,"column":4},"end":{"line":222,"column":5}},"loc":{"start":{"line":222,"column":32},"end":{"line":238,"column":5}},"line":222},"38":{"name":"(anonymous_38)","decl":{"start":{"line":227,"column":30},"end":{"line":227,"column":31}},"loc":{"start":{"line":227,"column":40},"end":{"line":233,"column":9}},"line":227},"39":{"name":"(anonymous_39)","decl":{"start":{"line":239,"column":4},"end":{"line":239,"column":5}},"loc":{"start":{"line":239,"column":31},"end":{"line":262,"column":5}},"line":239},"40":{"name":"(anonymous_40)","decl":{"start":{"line":242,"column":29},"end":{"line":242,"column":30}},"loc":{"start":{"line":242,"column":40},"end":{"line":242,"column":86}},"line":242},"41":{"name":"(anonymous_41)","decl":{"start":{"line":247,"column":29},"end":{"line":247,"column":30}},"loc":{"start":{"line":247,"column":39},"end":{"line":257,"column":13}},"line":247}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},{"start":{"line":18,"column":8},"end":{"line":20,"column":9}}],"line":18},"4":{"loc":{"start":{"line":23,"column":32},"end":{"line":25,"column":26}},"type":"cond-expr","locations":[{"start":{"line":24,"column":14},"end":{"line":24,"column":76}},{"start":{"line":25,"column":14},"end":{"line":25,"column":26}}],"line":23},"5":{"loc":{"start":{"line":30,"column":12},"end":{"line":32,"column":13}},"type":"if","locations":[{"start":{"line":30,"column":12},"end":{"line":32,"column":13}},{"start":{"line":30,"column":12},"end":{"line":32,"column":13}}],"line":30},"6":{"loc":{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},{"start":{"line":37,"column":8},"end":{"line":39,"column":9}}],"line":37},"7":{"loc":{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},{"start":{"line":44,"column":8},"end":{"line":46,"column":9}}],"line":44},"8":{"loc":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},{"start":{"line":47,"column":8},"end":{"line":49,"column":9}}],"line":47},"9":{"loc":{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},{"start":{"line":50,"column":8},"end":{"line":52,"column":9}}],"line":50},"10":{"loc":{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},{"start":{"line":53,"column":8},"end":{"line":55,"column":9}}],"line":53},"11":{"loc":{"start":{"line":53,"column":12},"end":{"line":53,"column":44}},"type":"binary-expr","locations":[{"start":{"line":53,"column":12},"end":{"line":53,"column":20}},{"start":{"line":53,"column":24},"end":{"line":53,"column":32}},{"start":{"line":53,"column":36},"end":{"line":53,"column":44}}],"line":53},"12":{"loc":{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},"type":"if","locations":[{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},{"start":{"line":56,"column":8},"end":{"line":58,"column":9}}],"line":56},"13":{"loc":{"start":{"line":74,"column":25},"end":{"line":74,"column":65}},"type":"cond-expr","locations":[{"start":{"line":74,"column":36},"end":{"line":74,"column":40}},{"start":{"line":74,"column":43},"end":{"line":74,"column":65}}],"line":74},"14":{"loc":{"start":{"line":74,"column":43},"end":{"line":74,"column":65}},"type":"cond-expr","locations":[{"start":{"line":74,"column":54},"end":{"line":74,"column":58}},{"start":{"line":74,"column":61},"end":{"line":74,"column":65}}],"line":74},"15":{"loc":{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},"type":"if","locations":[{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},{"start":{"line":79,"column":8},"end":{"line":81,"column":9}}],"line":79},"16":{"loc":{"start":{"line":84,"column":12},"end":{"line":86,"column":13}},"type":"if","locations":[{"start":{"line":84,"column":12},"end":{"line":86,"column":13}},{"start":{"line":84,"column":12},"end":{"line":86,"column":13}}],"line":84},"17":{"loc":{"start":{"line":84,"column":16},"end":{"line":84,"column":74}},"type":"binary-expr","locations":[{"start":{"line":84,"column":16},"end":{"line":84,"column":45}},{"start":{"line":84,"column":49},"end":{"line":84,"column":74}}],"line":84},"18":{"loc":{"start":{"line":87,"column":12},"end":{"line":89,"column":13}},"type":"if","locations":[{"start":{"line":87,"column":12},"end":{"line":89,"column":13}},{"start":{"line":87,"column":12},"end":{"line":89,"column":13}}],"line":87},"19":{"loc":{"start":{"line":90,"column":12},"end":{"line":92,"column":13}},"type":"if","locations":[{"start":{"line":90,"column":12},"end":{"line":92,"column":13}},{"start":{"line":90,"column":12},"end":{"line":92,"column":13}}],"line":90},"20":{"loc":{"start":{"line":100,"column":8},"end":{"line":102,"column":9}},"type":"if","locations":[{"start":{"line":100,"column":8},"end":{"line":102,"column":9}},{"start":{"line":100,"column":8},"end":{"line":102,"column":9}}],"line":100},"21":{"loc":{"start":{"line":103,"column":8},"end":{"line":105,"column":9}},"type":"if","locations":[{"start":{"line":103,"column":8},"end":{"line":105,"column":9}},{"start":{"line":103,"column":8},"end":{"line":105,"column":9}}],"line":103},"22":{"loc":{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},"type":"if","locations":[{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},{"start":{"line":106,"column":8},"end":{"line":108,"column":9}}],"line":106},"23":{"loc":{"start":{"line":113,"column":12},"end":{"line":115,"column":13}},"type":"if","locations":[{"start":{"line":113,"column":12},"end":{"line":115,"column":13}},{"start":{"line":113,"column":12},"end":{"line":115,"column":13}}],"line":113},"24":{"loc":{"start":{"line":122,"column":15},"end":{"line":122,"column":65}},"type":"binary-expr","locations":[{"start":{"line":122,"column":15},"end":{"line":122,"column":31}},{"start":{"line":122,"column":35},"end":{"line":122,"column":65}}],"line":122},"25":{"loc":{"start":{"line":130,"column":8},"end":{"line":132,"column":9}},"type":"if","locations":[{"start":{"line":130,"column":8},"end":{"line":132,"column":9}},{"start":{"line":130,"column":8},"end":{"line":132,"column":9}}],"line":130},"26":{"loc":{"start":{"line":134,"column":8},"end":{"line":136,"column":9}},"type":"if","locations":[{"start":{"line":134,"column":8},"end":{"line":136,"column":9}},{"start":{"line":134,"column":8},"end":{"line":136,"column":9}}],"line":134},"27":{"loc":{"start":{"line":137,"column":8},"end":{"line":160,"column":9}},"type":"switch","locations":[{"start":{"line":138,"column":12},"end":{"line":139,"column":50}},{"start":{"line":140,"column":12},"end":{"line":141,"column":51}},{"start":{"line":142,"column":12},"end":{"line":143,"column":48}},{"start":{"line":144,"column":12},"end":{"line":145,"column":46}},{"start":{"line":146,"column":12},"end":{"line":147,"column":49}},{"start":{"line":148,"column":12},"end":{"line":149,"column":46}},{"start":{"line":150,"column":12},"end":{"line":151,"column":51}},{"start":{"line":152,"column":12},"end":{"line":153,"column":39}},{"start":{"line":154,"column":12},"end":{"line":155,"column":37}},{"start":{"line":156,"column":12},"end":{"line":157,"column":37}},{"start":{"line":158,"column":12},"end":{"line":159,"column":82}}],"line":137},"28":{"loc":{"start":{"line":171,"column":12},"end":{"line":173,"column":13}},"type":"if","locations":[{"start":{"line":171,"column":12},"end":{"line":173,"column":13}},{"start":{"line":171,"column":12},"end":{"line":173,"column":13}}],"line":171},"29":{"loc":{"start":{"line":198,"column":8},"end":{"line":220,"column":9}},"type":"switch","locations":[{"start":{"line":199,"column":12},"end":{"line":200,"column":89}},{"start":{"line":201,"column":12},"end":{"line":202,"column":89}},{"start":{"line":203,"column":12},"end":{"line":210,"column":13}},{"start":{"line":211,"column":12},"end":{"line":215,"column":132}},{"start":{"line":216,"column":12},"end":{"line":217,"column":90}},{"start":{"line":218,"column":12},"end":{"line":219,"column":84}}],"line":198},"30":{"loc":{"start":{"line":204,"column":16},"end":{"line":206,"column":17}},"type":"if","locations":[{"start":{"line":204,"column":16},"end":{"line":206,"column":17}},{"start":{"line":204,"column":16},"end":{"line":206,"column":17}}],"line":204},"31":{"loc":{"start":{"line":212,"column":16},"end":{"line":214,"column":17}},"type":"if","locations":[{"start":{"line":212,"column":16},"end":{"line":214,"column":17}},{"start":{"line":212,"column":16},"end":{"line":214,"column":17}}],"line":212},"32":{"loc":{"start":{"line":223,"column":8},"end":{"line":225,"column":9}},"type":"if","locations":[{"start":{"line":223,"column":8},"end":{"line":225,"column":9}},{"start":{"line":223,"column":8},"end":{"line":225,"column":9}}],"line":223},"33":{"loc":{"start":{"line":223,"column":12},"end":{"line":223,"column":63}},"type":"binary-expr","locations":[{"start":{"line":223,"column":12},"end":{"line":223,"column":28}},{"start":{"line":223,"column":32},"end":{"line":223,"column":63}}],"line":223},"34":{"loc":{"start":{"line":234,"column":8},"end":{"line":236,"column":9}},"type":"if","locations":[{"start":{"line":234,"column":8},"end":{"line":236,"column":9}},{"start":{"line":234,"column":8},"end":{"line":236,"column":9}}],"line":234},"35":{"loc":{"start":{"line":240,"column":8},"end":{"line":261,"column":9}},"type":"if","locations":[{"start":{"line":240,"column":8},"end":{"line":261,"column":9}},{"start":{"line":240,"column":8},"end":{"line":261,"column":9}}],"line":240},"36":{"loc":{"start":{"line":242,"column":40},"end":{"line":242,"column":86}},"type":"cond-expr","locations":[{"start":{"line":242,"column":58},"end":{"line":242,"column":59}},{"start":{"line":242,"column":62},"end":{"line":242,"column":86}}],"line":242},"37":{"loc":{"start":{"line":242,"column":62},"end":{"line":242,"column":86}},"type":"cond-expr","locations":[{"start":{"line":242,"column":80},"end":{"line":242,"column":82}},{"start":{"line":242,"column":85},"end":{"line":242,"column":86}}],"line":242},"38":{"loc":{"start":{"line":244,"column":13},"end":{"line":261,"column":9}},"type":"if","locations":[{"start":{"line":244,"column":13},"end":{"line":261,"column":9}},{"start":{"line":244,"column":13},"end":{"line":261,"column":9}}],"line":244},"39":{"loc":{"start":{"line":244,"column":17},"end":{"line":244,"column":85}},"type":"binary-expr","locations":[{"start":{"line":244,"column":17},"end":{"line":244,"column":42}},{"start":{"line":244,"column":46},"end":{"line":244,"column":56}},{"start":{"line":244,"column":60},"end":{"line":244,"column":85}}],"line":244},"40":{"loc":{"start":{"line":246,"column":24},"end":{"line":246,"column":53}},"type":"cond-expr","locations":[{"start":{"line":246,"column":47},"end":{"line":246,"column":49}},{"start":{"line":246,"column":52},"end":{"line":246,"column":53}}],"line":246},"41":{"loc":{"start":{"line":249,"column":20},"end":{"line":251,"column":21}},"type":"if","locations":[{"start":{"line":249,"column":20},"end":{"line":251,"column":21}},{"start":{"line":249,"column":20},"end":{"line":251,"column":21}}],"line":249},"42":{"loc":{"start":{"line":252,"column":20},"end":{"line":254,"column":21}},"type":"if","locations":[{"start":{"line":252,"column":20},"end":{"line":254,"column":21}},{"start":{"line":252,"column":20},"end":{"line":254,"column":21}}],"line":252}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":61,"8":4,"9":4,"10":0,"11":4,"12":4,"13":4,"14":3,"15":4,"16":4,"17":4,"18":0,"19":4,"20":1,"21":3,"22":3,"23":5,"24":1,"25":4,"26":0,"27":4,"28":0,"29":4,"30":3,"31":1,"32":1,"33":0,"34":1,"35":2,"36":1,"37":364,"38":639,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":3,"48":3,"49":3,"50":3,"51":3,"52":3,"53":0,"54":3,"55":1003,"56":1003,"57":0,"58":1003,"59":1003,"60":0,"61":0,"62":0,"63":1,"64":1,"65":1,"66":1,"67":0,"68":1,"69":0,"70":1,"71":0,"72":1,"73":1,"74":1,"75":364,"76":364,"77":0,"78":364,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":2829,"86":94,"87":2735,"88":2735,"89":0,"90":2735,"91":0,"92":837,"93":465,"94":0,"95":0,"96":1,"97":364,"98":704,"99":364,"100":0,"101":0,"102":3,"103":3,"104":3,"105":3,"106":3,"107":732,"108":732,"109":732,"110":91,"111":732,"112":3,"113":3,"114":3,"115":48,"116":48,"117":48,"118":48,"119":48,"120":48,"121":48,"122":48,"123":48,"124":47,"125":2,"126":48,"127":49,"128":48,"129":3,"130":4,"131":0,"132":0,"133":1,"134":1,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":44,"144":364,"145":0,"146":3,"147":0,"148":3,"149":3,"150":104,"151":104,"152":265,"153":104,"154":3,"155":3,"156":3,"157":3,"158":2,"159":2,"160":439,"161":1,"162":1,"163":1,"164":1,"165":4,"166":4,"167":3,"168":1,"169":1,"170":0,"171":0,"172":1},"f":{"0":2,"1":61,"2":4,"3":4,"4":4,"5":5,"6":1,"7":2,"8":364,"9":639,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":3,"17":1003,"18":1,"19":364,"20":1,"21":1,"22":2829,"23":3,"24":3,"25":732,"26":732,"27":3,"28":48,"29":48,"30":48,"31":49,"32":4,"33":0,"34":0,"35":0,"36":364,"37":3,"38":104,"39":3,"40":439,"41":4},"b":{"0":[1,1,1],"1":[1,1],"2":[2,2],"3":[0,4],"4":[3,1],"5":[4,0],"6":[1,3],"7":[1,4],"8":[0,4],"9":[0,4],"10":[3,1],"11":[4,1,1],"12":[1,0],"13":[3,0],"14":[0,0],"15":[0,3],"16":[0,1003],"17":[1003,1003],"18":[1003,0],"19":[0,0],"20":[0,1],"21":[0,1],"22":[0,1],"23":[0,364],"24":[1,0],"25":[94,2735],"26":[0,2735],"27":[0,837,465,0,0,1,364,704,364,0,0],"28":[91,641],"29":[3,0,1,0,44,0],"30":[1,0],"31":[0,0],"32":[0,3],"33":[3,3],"34":[3,0],"35":[2,1],"36":[163,276],"37":[217,59],"38":[1,0],"39":[1,1,1],"40":[1,0],"41":[3,1],"42":[1,0]},"inputSourceMap":{"version":3,"file":"/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/RoomQueryRunner.ts","sources":["/Users/huangjiakang/Desktop/CPSC310/project_team051/src/controller/RoomQueryRunner.ts"],"names":[],"mappings":"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","sourcesContent":["import { InsightError, InsightResult } from \"./IInsightFacade\";\nimport DatasetManager from \"./DatasetManager\";\nimport Room from \"./Room\";\nimport Decimal from \"decimal.js\";\n\ntype DatasetEntry = Room;\n\nconst DECIMAL_PRECISION = 2;\n\nexport default class RoomQueryRunner {\n\tprivate datasetMap: Map<string, DatasetEntry[]>;\n\tprivate datasetId!: string;\n\n\tconstructor(datasetManager: DatasetManager) {\n\t\tthis.datasetMap = datasetManager.getDatasets() as Map<string, Room[]>;\n\t}\n\n\t// Execute the query and return the results\n\tpublic async execute(query: any): Promise<InsightResult[]> {\n\t\tthis.datasetId = this.extractDatasetId(query);\n\n\t\tif (!this.datasetMap.has(this.datasetId)) {\n\t\t\tthrow new InsightError(`Dataset with id \"${this.datasetId}\" does not exist.`);\n\t\t}\n\n\t\tconst dataset = this.datasetMap.get(this.datasetId) as Room[];\n\t\tconst filteredData = this.applyFilters(dataset, query.WHERE);\n\n\t\tconst transformedData: InsightResult[] = query.TRANSFORMATIONS\n\t\t\t? this.applyTransformations(filteredData, query.TRANSFORMATIONS)\n\t\t\t: (filteredData as unknown as InsightResult[]);\n\n\t\treturn this.applyOptions(transformedData, query.OPTIONS);\n\t}\n\n\tprivate extractDatasetId(query: any): string {\n\t\tfor (const col of query.OPTIONS.COLUMNS) {\n\t\t\tif (col.includes(\"_\")) {\n\t\t\t\treturn col.split(\"_\")[0];\n\t\t\t}\n\t\t}\n\t\tthrow new InsightError(\"Could not extract dataset ID from COLUMNS.\");\n\t}\n\n\tprivate applyFilters(data: Room[], where: any): Room[] {\n\t\tif (Object.keys(where).length === 0) {\n\t\t\treturn data;\n\t\t}\n\t\tconst filterFunction = this.createFilterFunction(where);\n\t\treturn data.filter(filterFunction);\n\t}\n\n\tprivate createFilterFunction(where: any): (item: Room) => boolean {\n\t\tif (where.AND) {\n\t\t\treturn this.handleAnd(where.AND);\n\t\t}\n\t\tif (where.OR) {\n\t\t\treturn this.handleOr(where.OR);\n\t\t}\n\t\tif (where.NOT) {\n\t\t\treturn this.handleNot(where.NOT);\n\t\t}\n\t\tif (where.GT || where.LT || where.EQ) {\n\t\t\treturn this.handleComparison(where);\n\t\t}\n\t\tif (where.IS) {\n\t\t\treturn this.handleIs(where.IS);\n\t\t}\n\t\tthrow new InsightError(\"Invalid WHERE condition.\");\n\t}\n\n\tprivate handleAnd(andConditions: any[]): (item: Room) => boolean {\n\t\tconst subFilters = andConditions.map((condition) => this.createFilterFunction(condition));\n\t\treturn (item: Room) => subFilters.every((filterFunc) => filterFunc(item));\n\t}\n\n\tprivate handleOr(orConditions: any[]): (item: Room) => boolean {\n\t\tconst subFilters = orConditions.map((condition) => this.createFilterFunction(condition));\n\t\treturn (item: Room) => subFilters.some((filterFunc) => filterFunc(item));\n\t}\n\n\tprivate handleNot(notCondition: any): (item: Room) => boolean {\n\t\tconst subFilter = this.createFilterFunction(notCondition);\n\t\treturn (item: Room) => !subFilter(item);\n\t}\n\n\tprivate handleComparison(where: any): (item: Room) => boolean {\n\t\tconst operator = where.GT ? \"GT\" : where.LT ? \"LT\" : \"EQ\";\n\t\tconst comparison = where[operator];\n\t\tconst key = Object.keys(comparison)[0];\n\t\tconst value = comparison[key];\n\n\t\tconst id = key.split(\"_\")[0];\n\t\tif (id !== this.datasetId) {\n\t\t\tthrow new InsightError(`Key does not match dataset ID: ${key}`);\n\t\t}\n\n\t\treturn (item: Room) => {\n\t\t\tconst itemValue = this.getValueByKey(item, key);\n\n\t\t\tif (typeof itemValue !== \"number\" || typeof value !== \"number\") {\n\t\t\t\tthrow new InsightError(\"Comparison requires numeric values.\");\n\t\t\t}\n\n\t\t\tif (operator === \"GT\") {\n\t\t\t\treturn itemValue > value;\n\t\t\t}\n\t\t\tif (operator === \"LT\") {\n\t\t\t\treturn itemValue < value;\n\t\t\t}\n\t\t\treturn itemValue === value;\n\t\t};\n\t}\n\n\tprivate handleIs(isCondition: any): (item: Room) => boolean {\n\t\tconst key = Object.keys(isCondition)[0];\n\t\tconst value = isCondition[key];\n\n\t\tconst id = key.split(\"_\")[0];\n\t\tif (id !== this.datasetId) {\n\t\t\tthrow new InsightError(`Key does not match dataset ID: ${key}`);\n\t\t}\n\n\t\tif (typeof value !== \"string\") {\n\t\t\tthrow new InsightError(\"IS operator requires a string value.\");\n\t\t}\n\n\t\tif (this.hasInvalidWildcardPattern(value)) {\n\t\t\tthrow new InsightError(\"Invalid wildcard pattern in IS operator.\");\n\t\t}\n\n\t\tconst regexPattern = this.buildRegexPattern(value);\n\t\tconst regex = new RegExp(regexPattern);\n\n\t\treturn (item: Room) => {\n\t\t\tconst itemValue = this.getValueByKey(item, key);\n\n\t\t\tif (typeof itemValue !== \"string\") {\n\t\t\t\tthrow new InsightError(\"IS operator requires string fields.\");\n\t\t\t}\n\n\t\t\treturn regex.test(itemValue);\n\t\t};\n\t}\n\n\tprivate hasInvalidWildcardPattern(value: string): boolean {\n\t\tconst firstIndex = value.indexOf(\"*\");\n\t\tconst lastIndex = value.lastIndexOf(\"*\");\n\t\treturn firstIndex !== 0 && lastIndex !== value.length - 1;\n\t}\n\n\tprivate buildRegexPattern(value: string): string {\n\t\tconst specialChars = /[.+?^${}()|[\\]\\\\]/g;\n\t\tconst escapedValue = value.replace(specialChars, \"\\\\$&\");\n\t\treturn `^${escapedValue.replace(/\\*/g, \".*\")}$`;\n\t}\n\n\tprivate getValueByKey(item: Room | InsightResult, key: string): any {\n\t\tif (!(item instanceof Room)) {\n\t\t\treturn item[key];\n\t\t}\n\n\t\tconst [id, field] = key.split(\"_\");\n\t\tif (id !== this.datasetId) {\n\t\t\tthrow new InsightError(`Key does not match dataset ID: ${key}`);\n\t\t}\n\n\t\tswitch (field) {\n\t\t\tcase \"fullname\":\n\t\t\t\treturn String(item.getFullname());\n\t\t\tcase \"shortname\":\n\t\t\t\treturn String(item.getShortname());\n\t\t\tcase \"number\":\n\t\t\t\treturn String(item.getNumber());\n\t\t\tcase \"name\":\n\t\t\t\treturn String(item.getName());\n\t\t\tcase \"address\":\n\t\t\t\treturn String(item.getAddress());\n\t\t\tcase \"type\":\n\t\t\t\treturn String(item.getType());\n\t\t\tcase \"furniture\":\n\t\t\t\treturn String(item.getFurniture());\n\t\t\tcase \"seats\":\n\t\t\t\treturn item.getSeats();\n\t\t\tcase \"lat\":\n\t\t\t\treturn item.getLat();\n\t\t\tcase \"lon\":\n\t\t\t\treturn item.getLon();\n\t\t\tdefault:\n\t\t\t\tthrow new InsightError(`Invalid column: ${key}`);\n\t\t}\n\t}\n\n\tprivate applyTransformations(data: Room[], transformations: any): InsightResult[] {\n\t\tconst groupKeys = transformations.GROUP;\n\t\tconst groupedData = this.groupBy(data, groupKeys);\n\t\treturn this.applyAggregations(groupedData, transformations.APPLY, groupKeys);\n\t}\n\n\tprivate groupBy(data: Room[], groupKeys: string[]): Map<string, Room[]> {\n\t\tconst groupedData = new Map<string, Room[]>();\n\n\t\tdata.forEach((item) => {\n\t\t\tconst groupKey = groupKeys.map((key) => this.getValueByKey(item, key)).join(\"_\");\n\t\t\tif (!groupedData.has(groupKey)) {\n\t\t\t\tgroupedData.set(groupKey, []);\n\t\t\t}\n\t\t\tgroupedData.get(groupKey)!.push(item);\n\t\t});\n\n\t\treturn groupedData;\n\t}\n\n\tprivate applyAggregations(groupedData: Map<string, Room[]>, applyRules: any[], groupKeys: string[]): InsightResult[] {\n\t\tconst results: InsightResult[] = [];\n\n\t\tgroupedData.forEach((group) => {\n\t\t\tconst result: any = {};\n\n\t\t\tgroupKeys.forEach((key) => {\n\t\t\t\tresult[key] = this.getValueByKey(group[0], key);\n\t\t\t});\n\n\t\t\tfor (const rule of applyRules) {\n\t\t\t\tconst applyKey = Object.keys(rule)[0];\n\t\t\t\tconst applyToken = rule[applyKey];\n\t\t\t\tconst aggregationField = Object.values(applyToken)[0] as string;\n\t\t\t\tconst aggregationType = Object.keys(applyToken)[0] as string;\n\n\t\t\t\tresult[applyKey] = this.performAggregation(aggregationType, group, aggregationField);\n\t\t\t}\n\n\t\t\tresults.push(result);\n\t\t});\n\n\t\treturn results;\n\t}\n\n\tprivate performAggregation(type: string, group: Room[], field: string): number {\n\t\t// Check if the field is numeric for AVG and SUM operations\n\t\tconst isNumeric = group.every((item) => typeof this.getValueByKey(item, field) === \"number\");\n\n\t\tswitch (type) {\n\t\t\tcase \"MAX\":\n\t\t\t\treturn Math.max(...group.map((item) => this.getValueByKey(item, field) as number));\n\t\t\tcase \"MIN\":\n\t\t\t\treturn Math.min(...group.map((item) => this.getValueByKey(item, field) as number));\n\t\t\tcase \"AVG\": {\n\t\t\t\tif (!isNumeric) {\n\t\t\t\t\tthrow new InsightError(\"AVG aggregation requires a numeric field\");\n\t\t\t\t}\n\t\t\t\tconst total = group.reduce(\n\t\t\t\t\t(acc, item) => acc.add(new Decimal(this.getValueByKey(item, field) as number)),\n\t\t\t\t\tnew Decimal(0)\n\t\t\t\t);\n\t\t\t\tconst avg = total.toNumber() / group.length;\n\t\t\t\treturn Number(avg.toFixed(DECIMAL_PRECISION));\n\t\t\t}\n\t\t\tcase \"SUM\":\n\t\t\t\tif (!isNumeric) {\n\t\t\t\t\tthrow new InsightError(\"SUM aggregation requires a numeric field\");\n\t\t\t\t}\n\t\t\t\treturn parseFloat(\n\t\t\t\t\tgroup.reduce((acc, item) => acc + (this.getValueByKey(item, field) as number), 0).toFixed(DECIMAL_PRECISION)\n\t\t\t\t);\n\t\t\tcase \"COUNT\":\n\t\t\t\treturn new Set(group.map((item) => this.getValueByKey(item, field))).size;\n\t\t\tdefault:\n\t\t\t\tthrow new InsightError(\"Invalid aggregation type\");\n\t\t}\n\t}\n\n\tprivate applyOptions(data: Room[] | InsightResult[], options: any): InsightResult[] {\n\t\tif (!options.COLUMNS || !Array.isArray(options.COLUMNS)) {\n\t\t\tthrow new InsightError(\"OPTIONS must contain COLUMNS array.\");\n\t\t}\n\n\t\tconst columns = options.COLUMNS;\n\t\tlet result = data.map((item) => {\n\t\t\tconst res: any = {};\n\t\t\tfor (const col of columns) {\n\t\t\t\tres[col] = this.getValueByKey(item, col);\n\t\t\t}\n\t\t\treturn res;\n\t\t});\n\n\t\tif (options.ORDER) {\n\t\t\tresult = this.applyOrdering(result, options.ORDER);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate applyOrdering(data: InsightResult[], order: any): InsightResult[] {\n\t\tif (typeof order === \"string\") {\n\t\t\tconst key = order;\n\t\t\treturn data.sort((a, b) => (a[key] > b[key] ? 1 : a[key] < b[key] ? -1 : 0));\n\t\t} else if (typeof order === \"object\" && order.keys && Array.isArray(order.keys)) {\n\t\t\tconst keys = order.keys;\n\t\t\tconst dir = order.dir === \"DOWN\" ? -1 : 1;\n\n\t\t\treturn data.sort((a, b) => {\n\t\t\t\tfor (const key of keys) {\n\t\t\t\t\tif (a[key] > b[key]) {\n\t\t\t\t\t\treturn dir;\n\t\t\t\t\t}\n\t\t\t\t\tif (a[key] < b[key]) {\n\t\t\t\t\t\treturn -dir;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t} else {\n\t\t\tthrow new InsightError(\"Invalid ORDER format.\");\n\t\t}\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7b28cf2bbbdfa1f200891814573ea959f10e4c4a","contentHash":"8de1242977573da589f658a7e2da88e9c6d78066ed463958d4067ae6a60e17b9"}}