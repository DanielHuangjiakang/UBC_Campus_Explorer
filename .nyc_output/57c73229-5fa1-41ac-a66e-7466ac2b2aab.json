{"/Users/liuhongkai/CPSC310_project/project_team051/src/controller/IInsightFacade.ts":{"path":"/Users/liuhongkai/CPSC310_project/project_team051/src/controller/IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":82,"6":82,"7":1,"8":2,"9":2,"10":1,"11":2,"12":2,"13":1},"f":{"0":1,"1":82,"2":2,"3":2},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/liuhongkai/CPSC310_project/project_team051/src/controller/IInsightFacade.ts","sources":["/Users/liuhongkai/CPSC310_project/project_team051/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,2CAAqB,CAAA;IACrB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAUD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\n * This is the primary high-level API for the project. In this folder there should be:\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\n * You should not change this interface at all or the test suite will not work.\n */\n\nexport enum InsightDatasetKind {\n\tSections = \"sections\",\n\tRooms = \"rooms\",\n}\n\nexport interface InsightDataset {\n\tid: string;\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n}\n\nexport type InsightResult = Record<string, string | number>;\n\nexport class InsightError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, InsightError);\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, NotFoundError);\n\t}\n}\n\nexport class ResultTooLargeError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, ResultTooLargeError);\n\t}\n}\n\nexport interface IInsightFacade {\n\t/**\n\t * Add a dataset to insightUBC.\n\t *\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\n\t * @param kind  The kind of the dataset\n\t *\n\t * @return Promise <string[]>\n\t *\n\t * The promise should fulfill on a successful add, reject for any failures.\n\t * The promise should fulfill with a string array,\n\t * containing the ids of all currently added datasets upon a successful add.\n\t * The promise should reject with an InsightError describing the error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n\t *\n\t * After receiving the dataset, it should be processed into a data structure of\n\t * your design. The processed data structure should be persisted to disk; your\n\t * system should be able to load this persisted value into memory for answering\n\t * queries.\n\t *\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\n\t * be successfully answered.\n\t */\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\n\n\t/**\n\t * Remove a dataset from insightUBC.\n\t *\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\n\t *\n\t * @return Promise <string>\n\t *\n\t * The promise should fulfill upon a successful removal, reject on any error.\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t *\n\t * The promise should fulfill the id of the dataset that was removed.\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\n\t *\n\t * This will delete both disk and memory caches for the dataset for the id meaning\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\n\t */\n\tremoveDataset(id: string): Promise<string>;\n\n\t/**\n\t * Perform a query on insightUBC.\n\t *\n\t * @param query  The query to be performed.\n\t *\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\n\t * or references multiple datasets, it should be rejected.\n\t *\n\t * @return Promise <InsightResult[]>\n\t *\n\t * The promise should fulfill with an array of results.\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\n\t * or an InsightError (for any other source of failure) describing the error.\n\t */\n\tperformQuery(query: unknown): Promise<InsightResult[]>;\n\n\t/**\n\t * List all currently added datasets, their types, and number of rows.\n\t *\n\t * @return Promise <InsightDataset[]>\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\n\t */\n\tlistDatasets(): Promise<InsightDataset[]>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c42a20ce2321f2e4948e0ac2cf5abb63350836da","contentHash":"85189f6896e8ddc2d9c988af88f2f71ebabb815a15ca0555f59d6b305302a76b"},"/Users/liuhongkai/CPSC310_project/project_team051/src/controller/InsightFacade.ts":{"path":"/Users/liuhongkai/CPSC310_project/project_team051/src/controller/InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":25},"end":{"line":6,"column":52}},"4":{"start":{"line":7,"column":25},"end":{"line":7,"column":69}},"5":{"start":{"line":8,"column":25},"end":{"line":8,"column":69}},"6":{"start":{"line":9,"column":24},"end":{"line":9,"column":67}},"7":{"start":{"line":10,"column":16},"end":{"line":10,"column":49}},"8":{"start":{"line":17,"column":8},"end":{"line":17,"column":61}},"9":{"start":{"line":18,"column":8},"end":{"line":18,"column":33}},"10":{"start":{"line":19,"column":8},"end":{"line":19,"column":78}},"11":{"start":{"line":20,"column":8},"end":{"line":20,"column":61}},"12":{"start":{"line":23,"column":8},"end":{"line":23,"column":49}},"13":{"start":{"line":24,"column":8},"end":{"line":24,"column":48}},"14":{"start":{"line":25,"column":8},"end":{"line":25,"column":53}},"15":{"start":{"line":26,"column":20},"end":{"line":26,"column":41}},"16":{"start":{"line":27,"column":8},"end":{"line":48,"column":9}},"17":{"start":{"line":28,"column":12},"end":{"line":31,"column":13}},"18":{"start":{"line":29,"column":16},"end":{"line":29,"column":55}},"19":{"start":{"line":30,"column":16},"end":{"line":30,"column":40}},"20":{"start":{"line":32,"column":29},"end":{"line":32,"column":75}},"21":{"start":{"line":33,"column":31},"end":{"line":33,"column":41}},"22":{"start":{"line":34,"column":33},"end":{"line":34,"column":60}},"23":{"start":{"line":35,"column":12},"end":{"line":37,"column":13}},"24":{"start":{"line":36,"column":16},"end":{"line":36,"column":84}},"25":{"start":{"line":38,"column":35},"end":{"line":38,"column":84}},"26":{"start":{"line":39,"column":27},"end":{"line":39,"column":48}},"27":{"start":{"line":40,"column":12},"end":{"line":42,"column":13}},"28":{"start":{"line":41,"column":16},"end":{"line":41,"column":94}},"29":{"start":{"line":43,"column":12},"end":{"line":43,"column":84}},"30":{"start":{"line":44,"column":12},"end":{"line":44,"column":73}},"31":{"start":{"line":47,"column":12},"end":{"line":47,"column":77}},"32":{"start":{"line":49,"column":8},"end":{"line":49,"column":51}},"33":{"start":{"line":52,"column":8},"end":{"line":55,"column":9}},"34":{"start":{"line":53,"column":12},"end":{"line":53,"column":51}},"35":{"start":{"line":54,"column":12},"end":{"line":54,"column":36}},"36":{"start":{"line":56,"column":8},"end":{"line":83,"column":9}},"37":{"start":{"line":57,"column":12},"end":{"line":59,"column":13}},"38":{"start":{"line":58,"column":16},"end":{"line":58,"column":80}},"39":{"start":{"line":60,"column":29},"end":{"line":60,"column":34}},"40":{"start":{"line":61,"column":12},"end":{"line":63,"column":13}},"41":{"start":{"line":62,"column":16},"end":{"line":62,"column":101}},"42":{"start":{"line":64,"column":38},"end":{"line":64,"column":71}},"43":{"start":{"line":65,"column":30},"end":{"line":65,"column":81}},"44":{"start":{"line":66,"column":12},"end":{"line":68,"column":13}},"45":{"start":{"line":67,"column":16},"end":{"line":67,"column":106}},"46":{"start":{"line":69,"column":28},"end":{"line":69,"column":75}},"47":{"start":{"line":70,"column":30},"end":{"line":70,"column":34}},"48":{"start":{"line":71,"column":12},"end":{"line":73,"column":13}},"49":{"start":{"line":72,"column":16},"end":{"line":72,"column":65}},"50":{"start":{"line":74,"column":12},"end":{"line":74,"column":27}},"51":{"start":{"line":77,"column":12},"end":{"line":82,"column":13}},"52":{"start":{"line":78,"column":16},"end":{"line":78,"column":26}},"53":{"start":{"line":81,"column":16},"end":{"line":81,"column":83}},"54":{"start":{"line":86,"column":8},"end":{"line":89,"column":9}},"55":{"start":{"line":87,"column":12},"end":{"line":87,"column":51}},"56":{"start":{"line":88,"column":12},"end":{"line":88,"column":36}},"57":{"start":{"line":90,"column":8},"end":{"line":90,"column":49}},"58":{"start":{"line":91,"column":8},"end":{"line":97,"column":9}},"59":{"start":{"line":92,"column":12},"end":{"line":92,"column":52}},"60":{"start":{"line":93,"column":12},"end":{"line":93,"column":72}},"61":{"start":{"line":96,"column":12},"end":{"line":96,"column":73}},"62":{"start":{"line":98,"column":8},"end":{"line":98,"column":35}},"63":{"start":{"line":101,"column":8},"end":{"line":104,"column":9}},"64":{"start":{"line":102,"column":12},"end":{"line":102,"column":51}},"65":{"start":{"line":103,"column":12},"end":{"line":103,"column":36}},"66":{"start":{"line":105,"column":8},"end":{"line":105,"column":55}},"67":{"start":{"line":108,"column":0},"end":{"line":108,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":18},"end":{"line":21,"column":5}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":40},"end":{"line":50,"column":5}},"line":22},"3":{"name":"(anonymous_3)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":30},"end":{"line":84,"column":5}},"line":51},"4":{"name":"(anonymous_4)","decl":{"start":{"line":85,"column":4},"end":{"line":85,"column":5}},"loc":{"start":{"line":85,"column":28},"end":{"line":99,"column":5}},"line":85},"5":{"name":"(anonymous_5)","decl":{"start":{"line":100,"column":4},"end":{"line":100,"column":5}},"loc":{"start":{"line":100,"column":25},"end":{"line":106,"column":5}},"line":100}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":28,"column":12},"end":{"line":31,"column":13}},"type":"if","locations":[{"start":{"line":28,"column":12},"end":{"line":31,"column":13}},{"start":{"line":28,"column":12},"end":{"line":31,"column":13}}],"line":28},"4":{"loc":{"start":{"line":35,"column":12},"end":{"line":37,"column":13}},"type":"if","locations":[{"start":{"line":35,"column":12},"end":{"line":37,"column":13}},{"start":{"line":35,"column":12},"end":{"line":37,"column":13}}],"line":35},"5":{"loc":{"start":{"line":40,"column":12},"end":{"line":42,"column":13}},"type":"if","locations":[{"start":{"line":40,"column":12},"end":{"line":42,"column":13}},{"start":{"line":40,"column":12},"end":{"line":42,"column":13}}],"line":40},"6":{"loc":{"start":{"line":52,"column":8},"end":{"line":55,"column":9}},"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":55,"column":9}},{"start":{"line":52,"column":8},"end":{"line":55,"column":9}}],"line":52},"7":{"loc":{"start":{"line":57,"column":12},"end":{"line":59,"column":13}},"type":"if","locations":[{"start":{"line":57,"column":12},"end":{"line":59,"column":13}},{"start":{"line":57,"column":12},"end":{"line":59,"column":13}}],"line":57},"8":{"loc":{"start":{"line":61,"column":12},"end":{"line":63,"column":13}},"type":"if","locations":[{"start":{"line":61,"column":12},"end":{"line":63,"column":13}},{"start":{"line":61,"column":12},"end":{"line":63,"column":13}}],"line":61},"9":{"loc":{"start":{"line":66,"column":12},"end":{"line":68,"column":13}},"type":"if","locations":[{"start":{"line":66,"column":12},"end":{"line":68,"column":13}},{"start":{"line":66,"column":12},"end":{"line":68,"column":13}}],"line":66},"10":{"loc":{"start":{"line":71,"column":12},"end":{"line":73,"column":13}},"type":"if","locations":[{"start":{"line":71,"column":12},"end":{"line":73,"column":13}},{"start":{"line":71,"column":12},"end":{"line":73,"column":13}}],"line":71},"11":{"loc":{"start":{"line":77,"column":12},"end":{"line":82,"column":13}},"type":"if","locations":[{"start":{"line":77,"column":12},"end":{"line":82,"column":13}},{"start":{"line":77,"column":12},"end":{"line":82,"column":13}}],"line":77},"12":{"loc":{"start":{"line":77,"column":16},"end":{"line":77,"column":115}},"type":"binary-expr","locations":[{"start":{"line":77,"column":16},"end":{"line":77,"column":60}},{"start":{"line":77,"column":64},"end":{"line":77,"column":115}}],"line":77},"13":{"loc":{"start":{"line":86,"column":8},"end":{"line":89,"column":9}},"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":89,"column":9}},{"start":{"line":86,"column":8},"end":{"line":89,"column":9}}],"line":86},"14":{"loc":{"start":{"line":101,"column":8},"end":{"line":104,"column":9}},"type":"if","locations":[{"start":{"line":101,"column":8},"end":{"line":104,"column":9}},{"start":{"line":101,"column":8},"end":{"line":104,"column":9}}],"line":101}},"s":{"0":1,"1":4,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":52,"9":52,"10":52,"11":52,"12":50,"13":46,"14":45,"15":44,"16":44,"17":44,"18":31,"19":31,"20":44,"21":42,"22":42,"23":42,"24":0,"25":42,"26":42,"27":42,"28":9,"29":33,"30":33,"31":11,"32":33,"33":39,"34":0,"35":0,"36":39,"37":39,"38":4,"39":26,"40":26,"41":0,"42":26,"43":26,"44":26,"45":1,"46":25,"47":24,"48":24,"49":2,"50":22,"51":17,"52":17,"53":0,"54":12,"55":3,"56":3,"57":12,"58":11,"59":11,"60":2,"61":9,"62":9,"63":22,"64":9,"65":9,"66":22,"67":1},"f":{"0":4,"1":52,"2":50,"3":39,"4":12,"5":22},"b":{"0":[1,1,1],"1":[3,1],"2":[4,4],"3":[31,13],"4":[0,42],"5":[9,33],"6":[0,39],"7":[4,26],"8":[0,26],"9":[1,25],"10":[2,22],"11":[17,0],"12":[17,2],"13":[3,9],"14":[9,13]},"inputSourceMap":{"version":3,"file":"/Users/liuhongkai/CPSC310_project/project_team051/src/controller/InsightFacade.ts","sources":["/Users/liuhongkai/CPSC310_project/project_team051/src/controller/InsightFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tIInsightFacade,\n\tInsightDataset,\n\tInsightDatasetKind,\n\tInsightError,\n\tInsightResult,\n\tResultTooLargeError,\n\tNotFoundError,\n} from \"./IInsightFacade\";\nimport DatasetManager from \"./DatasetManager\";\nimport QueryValidator, { Query } from \"./QueryValidator\"; // Import Query interface\nimport QueryExecutor from \"./QueryExecutor\";\nimport JSZip from \"jszip\";\n\nexport default class InsightFacade implements IInsightFacade {\n\tprivate datasetManager: DatasetManager;\n\tprivate initialized: boolean; // Flag to track initialization\n\tprivate queryValidator: QueryValidator;\n\tprivate queryExecutor: QueryExecutor;\n\n\tconstructor() {\n\t\tthis.datasetManager = new DatasetManager();\n\t\tthis.initialized = false; // Ensure initialization flag is set to false initially\n\t\tthis.queryExecutor = new QueryExecutor(this.datasetManager);\n\t\tthis.queryValidator = new QueryValidator();\n\t}\n\n\tpublic async addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\n\t\t// Validate dataset ID and kind\n\t\tawait this.datasetManager.validateID(id);\n\t\tawait this.datasetManager.idExisted(id); // Check if the ID already exists\n\t\tawait this.datasetManager.validateKind(kind);\n\n\t\tconst zip = new JSZip();\n\t\ttry {\n\t\t\t// Initialize dataset manager if not already initialized\n\t\t\tif (!this.initialized) {\n\t\t\t\tawait this.datasetManager.initialize();\n\t\t\t\tthis.initialized = true; // Set initialized to true after successful initialization\n\t\t\t}\n\n\t\t\tconst unzipped = await zip.loadAsync(content, { base64: true });\n\t\t\tconst folderName = \"courses/\";\n\t\t\tconst courseFolder = unzipped.folder(folderName);\n\n\t\t\tif (courseFolder === null) {\n\t\t\t\tthrow new InsightError(\"No courses folder exists\");\n\t\t\t}\n\n\t\t\t// Parse sections from the course folder\n\t\t\tconst parsedSections = await this.datasetManager.parseJson(courseFolder);\n\t\t\tconst rowNum = parsedSections.length;\n\t\t\tif (rowNum === 0) {\n\t\t\t\tthrow new InsightError(\"No valid sections found in dataset\");\n\t\t\t}\n\n\t\t\t// Write the dataset to disk and update internal maps\n\t\t\tawait this.datasetManager.writeDatasetToZip(id, kind, rowNum, unzipped);\n\t\t\tthis.datasetManager.setDatasetMaps(id, kind, parsedSections);\n\t\t} catch (_) {\n\t\t\t// Log error for debugging and throw a general error\n\t\t\t//  console.error(`Failed to add dataset: ${err}`);\n\t\t\tthrow new InsightError(\"Failed to add dataset\");\n\t\t}\n\n\t\treturn this.datasetManager.getDatasetIDs(); // Return the list of dataset IDs\n\t}\n\n\tpublic async performQuery(query: unknown): Promise<InsightResult[]> {\n\t\t// Initialize dataset manager if not already initialized\n\t\tif (!this.initialized) {\n\t\t\tawait this.datasetManager.initialize();\n\t\t\tthis.initialized = true;\n\t\t}\n\n\t\ttry {\n\t\t\t// Validate the query structure\n\t\t\tif (!this.queryValidator.checkValidEBNF(query)) {\n\t\t\t\tthrow new InsightError(\"Invalid query format\");\n\t\t\t}\n\n\t\t\t// At this point, we can assert that query is of type Query\n\t\t\tconst queryObj = query as Query;\n\n\t\t\t// Ensure the query references exactly one dataset\n\t\t\tif (!this.queryValidator.referencesSingleDataset(queryObj)) {\n\t\t\t\tthrow new InsightError(\"Query must reference exactly one dataset.\");\n\t\t\t}\n\n\t\t\t// Check if the required dataset exists\n\t\t\tconst availableDatasets = this.datasetManager.getDatasets();\n\t\t\tconst datasetId = this.queryValidator.getDatasetIdFromQuery(queryObj);\n\t\t\tif (!availableDatasets.has(datasetId)) {\n\t\t\t\tthrow new InsightError(`Dataset with id \"${datasetId}\" does not exist.`);\n\t\t\t}\n\n\t\t\t// Execute the query using QueryExecutor\n\t\t\tconst results = await this.queryExecutor.executeQuery(queryObj);\n\n\t\t\t// Ensure that the result set is within the acceptable size\n\t\t\tconst maxLength = 5000;\n\t\t\tif (results.length > maxLength) {\n\t\t\t\tthrow new ResultTooLargeError();\n\t\t\t}\n\n\t\t\treturn results; // Return the query results\n\t\t} catch (err) {\n\t\t\tif (err instanceof InsightError || err instanceof ResultTooLargeError) {\n\t\t\t\tthrow err;\n\t\t\t} else {\n\t\t\t\tthrow new InsightError(\"Failed to perform query\");\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async removeDataset(id: string): Promise<string> {\n\t\t// Initialize dataset manager if not already initialized\n\t\tif (!this.initialized) {\n\t\t\tawait this.datasetManager.initialize();\n\t\t\tthis.initialized = true;\n\t\t}\n\n\t\t// Validate the dataset ID\n\t\tawait this.datasetManager.validateID(id);\n\n\t\ttry {\n\t\t\t// Check if the dataset exists before removing\n\t\t\tawait this.datasetManager.idExisted(id);\n\t\t\treturn Promise.reject(new NotFoundError());\n\t\t} catch (_) {\n\t\t\t// Remove dataset from disk and internal maps\n\t\t\tawait this.datasetManager.removeDatasetFromFacadeAndDisk(id);\n\t\t}\n\n\t\treturn Promise.resolve(id); // Return the removed dataset ID\n\t}\n\n\tpublic async listDatasets(): Promise<InsightDataset[]> {\n\t\t// Initialize dataset manager if not already initialized\n\t\tif (!this.initialized) {\n\t\t\tawait this.datasetManager.initialize();\n\t\t\tthis.initialized = true;\n\t\t}\n\n\t\t// Return the list of available datasets\n\t\treturn this.datasetManager.getInsightDataset();\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b78bfaad1822c3eb92324941fff09c7108e96761","contentHash":"bc53b3f83b7e794169715796db8829cfca8647f53c86822339be64f0f5b53c1c"},"/Users/liuhongkai/CPSC310_project/project_team051/src/controller/DatasetManager.ts":{"path":"/Users/liuhongkai/CPSC310_project/project_team051/src/controller/DatasetManager.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":16},"end":{"line":6,"column":49}},"4":{"start":{"line":7,"column":19},"end":{"line":7,"column":55}},"5":{"start":{"line":8,"column":20},"end":{"line":8,"column":57}},"6":{"start":{"line":9,"column":18},"end":{"line":9,"column":55}},"7":{"start":{"line":10,"column":25},"end":{"line":10,"column":52}},"8":{"start":{"line":12,"column":23},"end":{"line":12,"column":32}},"9":{"start":{"line":13,"column":20},"end":{"line":13,"column":29}},"10":{"start":{"line":14,"column":17},"end":{"line":14,"column":66}},"11":{"start":{"line":16,"column":28},"end":{"line":16,"column":56}},"12":{"start":{"line":17,"column":8},"end":{"line":17,"column":54}},"13":{"start":{"line":20,"column":8},"end":{"line":20,"column":37}},"14":{"start":{"line":23,"column":8},"end":{"line":23,"column":48}},"15":{"start":{"line":24,"column":8},"end":{"line":24,"column":60}},"16":{"start":{"line":27,"column":8},"end":{"line":27,"column":56}},"17":{"start":{"line":30,"column":32},"end":{"line":30,"column":34}},"18":{"start":{"line":31,"column":20},"end":{"line":31,"column":40}},"19":{"start":{"line":32,"column":8},"end":{"line":37,"column":9}},"20":{"start":{"line":33,"column":34},"end":{"line":33,"column":60}},"21":{"start":{"line":34,"column":25},"end":{"line":34,"column":41}},"22":{"start":{"line":35,"column":28},"end":{"line":35,"column":44}},"23":{"start":{"line":36,"column":12},"end":{"line":36,"column":56}},"24":{"start":{"line":38,"column":8},"end":{"line":38,"column":31}},"25":{"start":{"line":41,"column":25},"end":{"line":41,"column":27}},"26":{"start":{"line":42,"column":8},"end":{"line":51,"column":9}},"27":{"start":{"line":43,"column":12},"end":{"line":43,"column":98}},"28":{"start":{"line":44,"column":31},"end":{"line":44,"column":92}},"29":{"start":{"line":45,"column":32},"end":{"line":45,"column":85}},"30":{"start":{"line":46,"column":12},"end":{"line":46,"column":49}},"31":{"start":{"line":47,"column":12},"end":{"line":47,"column":30}},"32":{"start":{"line":50,"column":12},"end":{"line":50,"column":30}},"33":{"start":{"line":54,"column":8},"end":{"line":54,"column":60}},"34":{"start":{"line":55,"column":25},"end":{"line":66,"column":13}},"35":{"start":{"line":55,"column":62},"end":{"line":66,"column":12}},"36":{"start":{"line":56,"column":24},"end":{"line":56,"column":45}},"37":{"start":{"line":57,"column":27},"end":{"line":57,"column":126}},"38":{"start":{"line":58,"column":28},"end":{"line":58,"column":53}},"39":{"start":{"line":59,"column":29},"end":{"line":59,"column":75}},"40":{"start":{"line":60,"column":33},"end":{"line":60,"column":60}},"41":{"start":{"line":61,"column":12},"end":{"line":63,"column":13}},"42":{"start":{"line":62,"column":16},"end":{"line":62,"column":82}},"43":{"start":{"line":64,"column":29},"end":{"line":64,"column":63}},"44":{"start":{"line":65,"column":12},"end":{"line":65,"column":28}},"45":{"start":{"line":67,"column":37},"end":{"line":67,"column":64}},"46":{"start":{"line":68,"column":8},"end":{"line":73,"column":9}},"47":{"start":{"line":68,"column":21},"end":{"line":68,"column":22}},"48":{"start":{"line":69,"column":12},"end":{"line":72,"column":13}},"49":{"start":{"line":70,"column":16},"end":{"line":70,"column":86}},"50":{"start":{"line":71,"column":16},"end":{"line":71,"column":104}},"51":{"start":{"line":76,"column":8},"end":{"line":78,"column":9}},"52":{"start":{"line":77,"column":12},"end":{"line":77,"column":73}},"53":{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},"54":{"start":{"line":82,"column":12},"end":{"line":82,"column":66}},"55":{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},"56":{"start":{"line":87,"column":12},"end":{"line":87,"column":68}},"57":{"start":{"line":91,"column":8},"end":{"line":100,"column":9}},"58":{"start":{"line":92,"column":12},"end":{"line":92,"column":64}},"59":{"start":{"line":93,"column":29},"end":{"line":93,"column":83}},"60":{"start":{"line":94,"column":31},"end":{"line":94,"column":87}},"61":{"start":{"line":95,"column":12},"end":{"line":95,"column":60}},"62":{"start":{"line":96,"column":12},"end":{"line":96,"column":69}},"63":{"start":{"line":99,"column":12},"end":{"line":99,"column":80}},"64":{"start":{"line":103,"column":25},"end":{"line":103,"column":27}},"65":{"start":{"line":104,"column":8},"end":{"line":123,"column":11}},"66":{"start":{"line":105,"column":12},"end":{"line":122,"column":13}},"67":{"start":{"line":106,"column":16},"end":{"line":121,"column":22}},"68":{"start":{"line":107,"column":20},"end":{"line":120,"column":21}},"69":{"start":{"line":108,"column":44},"end":{"line":108,"column":70}},"70":{"start":{"line":109,"column":43},"end":{"line":109,"column":66}},"71":{"start":{"line":110,"column":24},"end":{"line":112,"column":25}},"72":{"start":{"line":111,"column":28},"end":{"line":111,"column":91}},"73":{"start":{"line":113,"column":24},"end":{"line":113,"column":96}},"74":{"start":{"line":116,"column":24},"end":{"line":117,"column":25}},"75":{"start":{"line":118,"column":38},"end":{"line":118,"column":40}},"76":{"start":{"line":119,"column":24},"end":{"line":119,"column":54}},"77":{"start":{"line":124,"column":30},"end":{"line":124,"column":57}},"78":{"start":{"line":125,"column":8},"end":{"line":125,"column":36}},"79":{"start":{"line":128,"column":25},"end":{"line":128,"column":27}},"80":{"start":{"line":129,"column":8},"end":{"line":144,"column":11}},"81":{"start":{"line":130,"column":26},"end":{"line":139,"column":55}},"82":{"start":{"line":140,"column":12},"end":{"line":143,"column":13}},"83":{"start":{"line":141,"column":32},"end":{"line":141,"column":287}},"84":{"start":{"line":142,"column":16},"end":{"line":142,"column":39}},"85":{"start":{"line":145,"column":8},"end":{"line":145,"column":24}},"86":{"start":{"line":148,"column":8},"end":{"line":148,"column":60}},"87":{"start":{"line":149,"column":25},"end":{"line":149,"column":79}},"88":{"start":{"line":150,"column":8},"end":{"line":153,"column":11}},"89":{"start":{"line":151,"column":12},"end":{"line":152,"column":13}},"90":{"start":{"line":154,"column":8},"end":{"line":154,"column":52}},"91":{"start":{"line":155,"column":8},"end":{"line":155,"column":38}},"92":{"start":{"line":156,"column":8},"end":{"line":156,"column":41}},"93":{"start":{"line":159,"column":25},"end":{"line":159,"column":86}},"94":{"start":{"line":160,"column":25},"end":{"line":160,"column":53}},"95":{"start":{"line":161,"column":8},"end":{"line":166,"column":9}},"96":{"start":{"line":162,"column":12},"end":{"line":162,"column":50}},"97":{"start":{"line":165,"column":12},"end":{"line":165,"column":69}},"98":{"start":{"line":165,"column":53},"end":{"line":165,"column":67}},"99":{"start":{"line":167,"column":8},"end":{"line":173,"column":9}},"100":{"start":{"line":168,"column":24},"end":{"line":168,"column":25}},"101":{"start":{"line":169,"column":12},"end":{"line":169,"column":104}},"102":{"start":{"line":172,"column":12},"end":{"line":172,"column":84}},"103":{"start":{"line":176,"column":0},"end":{"line":176,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":23},"end":{"line":18,"column":5}},"line":15},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":18},"end":{"line":21,"column":5}},"line":19},"3":{"name":"(anonymous_3)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":39},"end":{"line":25,"column":5}},"line":22},"4":{"name":"(anonymous_4)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":20},"end":{"line":28,"column":5}},"line":26},"5":{"name":"(anonymous_5)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":24},"end":{"line":39,"column":5}},"line":29},"6":{"name":"(anonymous_6)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":28},"end":{"line":52,"column":5}},"line":40},"7":{"name":"(anonymous_7)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":45},"end":{"line":74,"column":5}},"line":53},"8":{"name":"(anonymous_8)","decl":{"start":{"line":55,"column":41},"end":{"line":55,"column":42}},"loc":{"start":{"line":55,"column":62},"end":{"line":66,"column":12}},"line":55},"9":{"name":"(anonymous_9)","decl":{"start":{"line":55,"column":63},"end":{"line":55,"column":64}},"loc":{"start":{"line":55,"column":75},"end":{"line":66,"column":9}},"line":55},"10":{"name":"(anonymous_10)","decl":{"start":{"line":75,"column":4},"end":{"line":75,"column":5}},"loc":{"start":{"line":75,"column":25},"end":{"line":79,"column":5}},"line":75},"11":{"name":"(anonymous_11)","decl":{"start":{"line":80,"column":4},"end":{"line":80,"column":5}},"loc":{"start":{"line":80,"column":24},"end":{"line":84,"column":5}},"line":80},"12":{"name":"(anonymous_12)","decl":{"start":{"line":85,"column":4},"end":{"line":85,"column":5}},"loc":{"start":{"line":85,"column":29},"end":{"line":89,"column":5}},"line":85},"13":{"name":"(anonymous_13)","decl":{"start":{"line":90,"column":4},"end":{"line":90,"column":5}},"loc":{"start":{"line":90,"column":60},"end":{"line":101,"column":5}},"line":90},"14":{"name":"(anonymous_14)","decl":{"start":{"line":102,"column":4},"end":{"line":102,"column":5}},"loc":{"start":{"line":102,"column":34},"end":{"line":126,"column":5}},"line":102},"15":{"name":"(anonymous_15)","decl":{"start":{"line":104,"column":29},"end":{"line":104,"column":30}},"loc":{"start":{"line":104,"column":42},"end":{"line":123,"column":9}},"line":104},"16":{"name":"(anonymous_16)","decl":{"start":{"line":106,"column":31},"end":{"line":106,"column":32}},"loc":{"start":{"line":106,"column":43},"end":{"line":121,"column":17}},"line":106},"17":{"name":"(anonymous_17)","decl":{"start":{"line":127,"column":4},"end":{"line":127,"column":5}},"loc":{"start":{"line":127,"column":51},"end":{"line":146,"column":5}},"line":127},"18":{"name":"(anonymous_18)","decl":{"start":{"line":129,"column":21},"end":{"line":129,"column":22}},"loc":{"start":{"line":129,"column":40},"end":{"line":144,"column":9}},"line":129},"19":{"name":"(anonymous_19)","decl":{"start":{"line":147,"column":4},"end":{"line":147,"column":5}},"loc":{"start":{"line":147,"column":45},"end":{"line":157,"column":5}},"line":147},"20":{"name":"(anonymous_20)","decl":{"start":{"line":150,"column":44},"end":{"line":150,"column":45}},"loc":{"start":{"line":150,"column":53},"end":{"line":153,"column":9}},"line":150},"21":{"name":"(anonymous_21)","decl":{"start":{"line":158,"column":4},"end":{"line":158,"column":5}},"loc":{"start":{"line":158,"column":47},"end":{"line":174,"column":5}},"line":158},"22":{"name":"(anonymous_22)","decl":{"start":{"line":165,"column":43},"end":{"line":165,"column":44}},"loc":{"start":{"line":165,"column":53},"end":{"line":165,"column":67}},"line":165}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":61,"column":12},"end":{"line":63,"column":13}},"type":"if","locations":[{"start":{"line":61,"column":12},"end":{"line":63,"column":13}},{"start":{"line":61,"column":12},"end":{"line":63,"column":13}}],"line":61},"4":{"loc":{"start":{"line":69,"column":12},"end":{"line":72,"column":13}},"type":"if","locations":[{"start":{"line":69,"column":12},"end":{"line":72,"column":13}},{"start":{"line":69,"column":12},"end":{"line":72,"column":13}}],"line":69},"5":{"loc":{"start":{"line":76,"column":8},"end":{"line":78,"column":9}},"type":"if","locations":[{"start":{"line":76,"column":8},"end":{"line":78,"column":9}},{"start":{"line":76,"column":8},"end":{"line":78,"column":9}}],"line":76},"6":{"loc":{"start":{"line":76,"column":12},"end":{"line":76,"column":55}},"type":"binary-expr","locations":[{"start":{"line":76,"column":12},"end":{"line":76,"column":21}},{"start":{"line":76,"column":25},"end":{"line":76,"column":35}},{"start":{"line":76,"column":39},"end":{"line":76,"column":55}}],"line":76},"7":{"loc":{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},"type":"if","locations":[{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},{"start":{"line":81,"column":8},"end":{"line":83,"column":9}}],"line":81},"8":{"loc":{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},{"start":{"line":86,"column":8},"end":{"line":88,"column":9}}],"line":86},"9":{"loc":{"start":{"line":105,"column":12},"end":{"line":122,"column":13}},"type":"if","locations":[{"start":{"line":105,"column":12},"end":{"line":122,"column":13}},{"start":{"line":105,"column":12},"end":{"line":122,"column":13}}],"line":105},"10":{"loc":{"start":{"line":105,"column":16},"end":{"line":105,"column":99}},"type":"binary-expr","locations":[{"start":{"line":105,"column":16},"end":{"line":105,"column":25}},{"start":{"line":105,"column":29},"end":{"line":105,"column":63}},{"start":{"line":105,"column":67},"end":{"line":105,"column":99}}],"line":105},"11":{"loc":{"start":{"line":110,"column":24},"end":{"line":112,"column":25}},"type":"if","locations":[{"start":{"line":110,"column":24},"end":{"line":112,"column":25}},{"start":{"line":110,"column":24},"end":{"line":112,"column":25}}],"line":110},"12":{"loc":{"start":{"line":116,"column":24},"end":{"line":117,"column":25}},"type":"if","locations":[{"start":{"line":116,"column":24},"end":{"line":117,"column":25}},{"start":{"line":116,"column":24},"end":{"line":117,"column":25}}],"line":116},"13":{"loc":{"start":{"line":130,"column":26},"end":{"line":139,"column":55}},"type":"binary-expr","locations":[{"start":{"line":130,"column":26},"end":{"line":130,"column":62}},{"start":{"line":131,"column":16},"end":{"line":131,"column":56}},{"start":{"line":132,"column":16},"end":{"line":132,"column":55}},{"start":{"line":133,"column":16},"end":{"line":133,"column":59}},{"start":{"line":134,"column":16},"end":{"line":134,"column":57}},{"start":{"line":135,"column":16},"end":{"line":135,"column":54}},{"start":{"line":136,"column":16},"end":{"line":136,"column":53}},{"start":{"line":137,"column":16},"end":{"line":137,"column":54}},{"start":{"line":138,"column":16},"end":{"line":138,"column":54}},{"start":{"line":139,"column":16},"end":{"line":139,"column":55}}],"line":130},"14":{"loc":{"start":{"line":140,"column":12},"end":{"line":143,"column":13}},"type":"if","locations":[{"start":{"line":140,"column":12},"end":{"line":143,"column":13}},{"start":{"line":140,"column":12},"end":{"line":143,"column":13}}],"line":140},"15":{"loc":{"start":{"line":151,"column":12},"end":{"line":152,"column":13}},"type":"if","locations":[{"start":{"line":151,"column":12},"end":{"line":152,"column":13}},{"start":{"line":151,"column":12},"end":{"line":152,"column":13}}],"line":151},"16":{"loc":{"start":{"line":161,"column":8},"end":{"line":166,"column":9}},"type":"if","locations":[{"start":{"line":161,"column":8},"end":{"line":166,"column":9}},{"start":{"line":161,"column":8},"end":{"line":166,"column":9}}],"line":161}},"s":{"0":1,"1":4,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":52,"9":52,"10":52,"11":43,"12":43,"13":78,"14":33,"15":33,"16":55,"17":22,"18":22,"19":22,"20":12,"21":12,"22":12,"23":12,"24":22,"25":85,"26":85,"27":85,"28":85,"29":85,"30":32,"31":32,"32":53,"33":43,"34":43,"35":12,"36":12,"37":12,"38":12,"39":12,"40":12,"41":12,"42":0,"43":12,"44":12,"45":43,"46":43,"47":43,"48":12,"49":10,"50":10,"51":62,"52":5,"53":57,"54":10,"55":45,"56":1,"57":33,"58":33,"59":33,"60":33,"61":33,"62":33,"63":0,"64":54,"65":54,"66":23900,"67":23854,"68":23854,"69":23854,"70":23854,"71":23850,"72":31,"73":23819,"74":35,"75":35,"76":35,"77":54,"78":54,"79":23819,"80":23819,"81":284013,"82":284013,"83":284012,"84":284012,"85":23819,"86":9,"87":9,"88":9,"89":9,"90":9,"91":9,"92":9,"93":42,"94":42,"95":42,"96":33,"97":9,"98":13,"99":42,"100":42,"101":42,"102":0,"103":1},"f":{"0":4,"1":43,"2":78,"3":33,"4":55,"5":22,"6":85,"7":43,"8":12,"9":12,"10":62,"11":57,"12":45,"13":33,"14":54,"15":23900,"16":23854,"17":23819,"18":284013,"19":9,"20":9,"21":42,"22":13},"b":{"0":[1,1,1],"1":[1,3],"2":[4,4],"3":[0,12],"4":[10,2],"5":[5,57],"6":[62,59,58],"7":[10,47],"8":[1,44],"9":[23854,46],"10":[23900,23900,23854],"11":[31,23819],"12":[35,0],"13":[284013,284013,284013,284012,284012,284012,284012,284012,284012,284012],"14":[284012,1],"15":[0,9],"16":[33,9]},"inputSourceMap":{"version":3,"file":"/Users/liuhongkai/CPSC310_project/project_team051/src/controller/DatasetManager.ts","sources":["/Users/liuhongkai/CPSC310_project/project_team051/src/controller/DatasetManager.ts"],"names":[],"mappings":"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","sourcesContent":["import JSZip from \"jszip\";\nimport fs from \"fs-extra\";\nimport path from \"node:path\";\nimport Section from \"./Section\";\nimport { InsightError, InsightDatasetKind, InsightDataset } from \"./IInsightFacade\"; // Adjust the imports as needed\n\nexport default class DatasetManager {\n\tprivate datasetsSections: Map<string, Section[]> = new Map<string, Section[]>();\n\tprivate datasetsKinds: Map<string, [InsightDatasetKind, number]> = new Map<string, [InsightDatasetKind, number]>();\n\tprivate folderPath = path.join(__dirname, \"../../data\");\n\n\tpublic async initialize(): Promise<void> {\n\t\tconst idsAndKinds = await this.readIdsFromFile();\n\t\tawait this.processStoredZipFiles(idsAndKinds);\n\t}\n\n\tpublic getDatasets(): Map<string, Section[]> {\n\t\treturn this.datasetsSections;\n\t}\n\n\t// Setter for datasetsSections\n\tpublic setDatasetMaps(id: string, kind: InsightDatasetKind, sections: Section[]): void {\n\t\tthis.datasetsSections.set(id, sections);\n\t\tthis.datasetsKinds.set(id, [kind, sections.length]);\n\t}\n\n\t// Getter for datasetsSections IDS\n\tpublic getDatasetIDs(): string[] {\n\t\treturn Array.from(this.datasetsSections.keys());\n\t}\n\n\tpublic getInsightDataset(): InsightDataset[] {\n\t\tconst InsightDatasets: InsightDataset[] = [];\n\t\tconst ids: string[] = this.getDatasetIDs();\n\t\tfor (const id of ids) {\n\t\t\tconst kindAndRowNum: [InsightDatasetKind, number] | undefined = this.datasetsKinds.get(id);\n\t\t\tconst kind: InsightDatasetKind = kindAndRowNum![0];\n\t\t\tconst numRows: number = kindAndRowNum![1];\n\t\t\tInsightDatasets.push({ id, kind, numRows });\n\t\t}\n\t\treturn InsightDatasets;\n\t}\n\n\tpublic async readIdsFromFile(): Promise<[string, [InsightDatasetKind, number]][]> {\n\t\tlet parsedData: [string, [InsightDatasetKind, number]][] = [];\n\t\ttry {\n\t\t\tawait fs.ensureDir(path.join(__dirname, \"../../data\"));\n\t\t\tconst idFilePath = path.join(__dirname, \"../../data/id_log.json\");\n\t\t\tconst fileContent = await fs.readFile(idFilePath, \"utf8\");\n\t\t\tparsedData = JSON.parse(fileContent);\n\t\t\treturn parsedData;\n\t\t} catch (_) {\n\t\t\treturn parsedData;\n\t\t}\n\t}\n\n\tpublic async processStoredZipFiles(idsAndKinds: [string, [InsightDatasetKind, number]][]): Promise<void> {\n\t\tawait fs.ensureDir(this.folderPath);\n\t\tconst promises: Promise<Section[]>[] = idsAndKinds.map(async (idAndKind) =>\n\t\t\t(async (): Promise<Section[]> => {\n\t\t\t\tconst zip = new JSZip();\n\t\t\t\tconst buffer = await fs.readFile(path.join(this.folderPath, `${idAndKind[0]}.zip`));\n\t\t\t\tconst content = buffer.toString(\"base64\");\n\t\t\t\tconst unzipped = await zip.loadAsync(content, { base64: true });\n\t\t\t\tconst courseFolder = unzipped.folder(\"courses/\");\n\t\t\t\tif (courseFolder === null) {\n\t\t\t\t\tthrow new Error(`No courses folder found in ${idAndKind[0]}.zip`);\n\t\t\t\t}\n\t\t\t\tconst sections = await this.parseJson(courseFolder);\n\t\t\t\treturn sections;\n\t\t\t})()\n\t\t);\n\t\tconst arrayOfSectionsArray: Section[][] = await Promise.all(promises);\n\t\tfor (let i = 0; i < idsAndKinds.length; i++) {\n\t\t\tif (!this.datasetsSections.has(idsAndKinds[i][0])) {\n\t\t\t\tthis.datasetsSections.set(idsAndKinds[i][0], arrayOfSectionsArray[i]);\n\t\t\t\tthis.datasetsKinds.set(idsAndKinds[i][0], [idsAndKinds[i][1][0], idsAndKinds[i][1][1]]);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async validateID(id: string): Promise<void> {\n\t\tif (id === \"\" || id === \" \" || id.includes(\"_\")) {\n\t\t\tthrow new InsightError(\"Invalid ID string\");\n\t\t}\n\t}\n\n\tpublic async idExisted(id: string): Promise<void> {\n\t\tif (this.datasetsSections.has(id)) {\n\t\t\tthrow new InsightError(\"ID is used\");\n\t\t}\n\t}\n\n\tpublic async validateKind(kind: InsightDatasetKind): Promise<void> {\n\t\tif (kind !== InsightDatasetKind.Sections) {\n\t\t\tthrow new InsightError(\"Invalid Kind\");\n\t\t}\n\t}\n\n\tpublic async writeDatasetToZip(\n\t\tid: string,\n\t\tkind: InsightDatasetKind,\n\t\trowNum: number,\n\t\tcourseFolder: JSZip\n\t): Promise<void> {\n\t\ttry {\n\t\t\tawait fs.ensureDir(this.folderPath);\n\t\t\tconst filePath = path.join(this.folderPath, `${id}.zip`);\n\t\t\tconst zipContent = await courseFolder.generateAsync({ type: \"nodebuffer\" });\n\t\t\tawait this.updateIdToJsonFile(id, kind, rowNum);\n\t\t\tawait fs.writeFile(filePath, zipContent);\n\t\t} catch (_) {\n\t\t\tthrow new InsightError(\"Failed to save .zip file\");\n\t\t}\n\t}\n\n\tpublic async parseJson(courseFolder: JSZip): Promise<Section[]> {\n\t\tconst promises: Promise<Section[]>[] = [];\n\t\tcourseFolder.forEach((_, file: JSZip.JSZipObject) => {\n\t\t\tif (!file.dir && !file.name.startsWith(\"courses/.\") && file.name.startsWith(\"courses/\")) {\n\t\t\t\tpromises.push(\n\t\t\t\t\t(async (): Promise<Section[]> => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst fileContent = await file.async(\"string\");\n\t\t\t\t\t\t\tconst parsedData = JSON.parse(fileContent);\n\t\t\t\t\t\t\tif (parsedData.result === undefined) {\n\t\t\t\t\t\t\t\tthrow new InsightError(\"Result is undefined\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn this.validateAndExtractSectionQueryableFields(parsedData.result);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t// console.error(`Error parsing file ${file.name}:`, err);\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst empty: Section[] = [];\n\t\t\t\t\t\t\treturn Promise.resolve(empty);\n\t\t\t\t\t\t}\n\t\t\t\t\t})()\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\tconst sectionsArray = await Promise.all(promises);\n\t\treturn sectionsArray.flat();\n\t}\n\n\tprivate validateAndExtractSectionQueryableFields(data: any[]): Section[] {\n\t\tconst sections: Section[] = [];\n\t\tdata.forEach((singleSection) => {\n\t\t\tconst valid: boolean =\n\t\t\t\ttypeof singleSection.id === \"number\" &&\n\t\t\t\ttypeof singleSection.Course === \"string\" &&\n\t\t\t\ttypeof singleSection.Title === \"string\" &&\n\t\t\t\ttypeof singleSection.Professor === \"string\" &&\n\t\t\t\ttypeof singleSection.Subject === \"string\" &&\n\t\t\t\ttypeof singleSection.Year === \"string\" &&\n\t\t\t\ttypeof singleSection.Avg === \"number\" &&\n\t\t\t\ttypeof singleSection.Pass === \"number\" &&\n\t\t\t\ttypeof singleSection.Fail === \"number\" &&\n\t\t\t\ttypeof singleSection.Audit === \"number\";\n\t\t\tif (valid) {\n\t\t\t\tconst section = new Section(\n\t\t\t\t\tsingleSection.id.toString(),\n\t\t\t\t\tsingleSection.Course,\n\t\t\t\t\tsingleSection.Title,\n\t\t\t\t\tsingleSection.Professor,\n\t\t\t\t\tsingleSection.Subject,\n\t\t\t\t\tparseInt(singleSection.Year, 10),\n\t\t\t\t\tsingleSection.Avg,\n\t\t\t\t\tsingleSection.Pass,\n\t\t\t\t\tsingleSection.Fail,\n\t\t\t\t\tsingleSection.Audit\n\t\t\t\t);\n\t\t\t\tsections.push(section);\n\t\t\t}\n\t\t});\n\t\treturn sections;\n\t}\n\n\tpublic async removeDatasetFromFacadeAndDisk(id: string): Promise<void> {\n\t\tawait fs.ensureDir(this.folderPath);\n\t\tconst filePath = path.join(this.folderPath, `${id}.zip`);\n\t\tfs.unlink(filePath, (err) => {\n\t\t\tif (err) {\n\t\t\t\t//\n\t\t\t}\n\t\t});\n\t\tawait this.updateIdToJsonFile(id, null, -1);\n\t\tthis.datasetsKinds.delete(id);\n\t\tthis.datasetsSections.delete(id);\n\t}\n\n\tprivate async updateIdToJsonFile(id: string, kind: InsightDatasetKind | null, rowNum: number): Promise<void> {\n\t\tconst filePath = path.join(__dirname, \"../../data/id_log.json\");\n\t\tlet parsedData: [string, [InsightDatasetKind, number]][] = await this.readIdsFromFile();\n\t\tif (kind !== null) {\n\t\t\tparsedData.push([id, [kind, rowNum]]);\n\t\t} else {\n\t\t\tparsedData = parsedData.filter((data) => data[0] !== id);\n\t\t}\n\n\t\ttry {\n\t\t\tconst two = 2;\n\t\t\tawait fs.writeFile(filePath, JSON.stringify(parsedData, null, two), \"utf8\");\n\t\t} catch (_) {\n\t\t\tthrow new InsightError(\"Failed to updateIdToJsonFile\");\n\t\t}\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d63cdee159c5a867b0712b4e795c9f40f4d313b9","contentHash":"d12b274a023ac4cda4712ba1f78eaf108f51757164daa5bdedadbd67d4ff061f"},"/Users/liuhongkai/CPSC310_project/project_team051/src/controller/Section.ts":{"path":"/Users/liuhongkai/CPSC310_project/project_team051/src/controller/Section.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":15,"column":8},"end":{"line":15,"column":25}},"2":{"start":{"line":16,"column":8},"end":{"line":16,"column":21}},"3":{"start":{"line":17,"column":8},"end":{"line":17,"column":27}},"4":{"start":{"line":18,"column":8},"end":{"line":18,"column":37}},"5":{"start":{"line":19,"column":8},"end":{"line":19,"column":25}},"6":{"start":{"line":20,"column":8},"end":{"line":20,"column":25}},"7":{"start":{"line":21,"column":8},"end":{"line":21,"column":23}},"8":{"start":{"line":22,"column":8},"end":{"line":22,"column":25}},"9":{"start":{"line":23,"column":8},"end":{"line":23,"column":25}},"10":{"start":{"line":24,"column":8},"end":{"line":24,"column":27}},"11":{"start":{"line":27,"column":8},"end":{"line":27,"column":25}},"12":{"start":{"line":30,"column":8},"end":{"line":30,"column":23}},"13":{"start":{"line":33,"column":8},"end":{"line":33,"column":26}},"14":{"start":{"line":36,"column":8},"end":{"line":36,"column":31}},"15":{"start":{"line":39,"column":8},"end":{"line":39,"column":25}},"16":{"start":{"line":42,"column":8},"end":{"line":42,"column":25}},"17":{"start":{"line":45,"column":8},"end":{"line":45,"column":24}},"18":{"start":{"line":48,"column":8},"end":{"line":48,"column":25}},"19":{"start":{"line":51,"column":8},"end":{"line":51,"column":25}},"20":{"start":{"line":54,"column":8},"end":{"line":54,"column":26}},"21":{"start":{"line":57,"column":0},"end":{"line":57,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":81},"end":{"line":25,"column":5}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":14},"end":{"line":28,"column":5}},"line":26},"2":{"name":"(anonymous_2)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":12},"end":{"line":31,"column":5}},"line":29},"3":{"name":"(anonymous_3)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":15},"end":{"line":34,"column":5}},"line":32},"4":{"name":"(anonymous_4)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":20},"end":{"line":37,"column":5}},"line":35},"5":{"name":"(anonymous_5)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":14},"end":{"line":40,"column":5}},"line":38},"6":{"name":"(anonymous_6)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":14},"end":{"line":43,"column":5}},"line":41},"7":{"name":"(anonymous_7)","decl":{"start":{"line":44,"column":4},"end":{"line":44,"column":5}},"loc":{"start":{"line":44,"column":13},"end":{"line":46,"column":5}},"line":44},"8":{"name":"(anonymous_8)","decl":{"start":{"line":47,"column":4},"end":{"line":47,"column":5}},"loc":{"start":{"line":47,"column":14},"end":{"line":49,"column":5}},"line":47},"9":{"name":"(anonymous_9)","decl":{"start":{"line":50,"column":4},"end":{"line":50,"column":5}},"loc":{"start":{"line":50,"column":14},"end":{"line":52,"column":5}},"line":50},"10":{"name":"(anonymous_10)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":15},"end":{"line":55,"column":5}},"line":53}},"branchMap":{},"s":{"0":1,"1":284012,"2":284012,"3":284012,"4":284012,"5":284012,"6":284012,"7":284012,"8":284012,"9":284012,"10":284012,"11":3,"12":324271,"13":3,"14":129238,"15":77827,"16":2,"17":1109643,"18":3,"19":3,"20":3,"21":1},"f":{"0":284012,"1":3,"2":324271,"3":3,"4":129238,"5":77827,"6":2,"7":1109643,"8":3,"9":3,"10":3},"b":{},"inputSourceMap":{"version":3,"file":"/Users/liuhongkai/CPSC310_project/project_team051/src/controller/Section.ts","sources":["/Users/liuhongkai/CPSC310_project/project_team051/src/controller/Section.ts"],"names":[],"mappings":";;AAAA,MAAqB,OAAO;IACV,IAAI,CAAS;IACb,EAAE,CAAS;IACX,KAAK,CAAS;IACd,UAAU,CAAS;IACnB,IAAI,CAAS;IACb,IAAI,CAAS;IACb,GAAG,CAAS;IACZ,IAAI,CAAS;IACb,IAAI,CAAS;IACb,KAAK,CAAS;IAE/B,YACC,IAAY,EACZ,EAAU,EACV,KAAa,EACb,UAAkB,EAClB,IAAY,EACZ,IAAY,EACZ,GAAW,EACX,IAAY,EACZ,IAAY,EACZ,KAAa;QAEb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACpB,CAAC;IAGM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAGM,KAAK;QACX,OAAO,IAAI,CAAC,EAAE,CAAC;IAChB,CAAC;IAGM,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;IAGM,aAAa;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;IACxB,CAAC;IAGM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAGM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAGM,MAAM;QACZ,OAAO,IAAI,CAAC,GAAG,CAAC;IACjB,CAAC;IAGM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAGM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAGM,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;CACD;AArFD,0BAqFC","sourcesContent":["export default class Section {\n\tprivate readonly uuid: string;\n\tprivate readonly id: string;\n\tprivate readonly title: string;\n\tprivate readonly instructor: string;\n\tprivate readonly dept: string;\n\tprivate readonly year: number;\n\tprivate readonly avg: number;\n\tprivate readonly pass: number;\n\tprivate readonly fail: number;\n\tprivate readonly audit: number;\n\n\tconstructor(\n\t\tuuid: string,\n\t\tid: string,\n\t\ttitle: string,\n\t\tinstructor: string,\n\t\tdept: string,\n\t\tyear: number,\n\t\tavg: number,\n\t\tpass: number,\n\t\tfail: number,\n\t\taudit: number\n\t) {\n\t\tthis.uuid = uuid;\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.instructor = instructor;\n\t\tthis.dept = dept;\n\t\tthis.year = year;\n\t\tthis.avg = avg;\n\t\tthis.pass = pass;\n\t\tthis.fail = fail;\n\t\tthis.audit = audit;\n\t}\n\n\t// Getter for uuid\n\tpublic getUuid(): string {\n\t\treturn this.uuid;\n\t}\n\n\t// Getter for id\n\tpublic getId(): string {\n\t\treturn this.id;\n\t}\n\n\t// Getter for title\n\tpublic getTitle(): string {\n\t\treturn this.title;\n\t}\n\n\t// Getter for instructor\n\tpublic getInstructor(): string {\n\t\treturn this.instructor;\n\t}\n\n\t// Getter for dept (department)\n\tpublic getDept(): string {\n\t\treturn this.dept;\n\t}\n\n\t// Getter for year\n\tpublic getYear(): number {\n\t\treturn this.year;\n\t}\n\n\t// Getter for avg (average)\n\tpublic getAvg(): number {\n\t\treturn this.avg;\n\t}\n\n\t// Getter for pass\n\tpublic getPass(): number {\n\t\treturn this.pass;\n\t}\n\n\t// Getter for fail\n\tpublic getFail(): number {\n\t\treturn this.fail;\n\t}\n\n\t// Getter for audit\n\tpublic getAudit(): number {\n\t\treturn this.audit;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9ba1840269d06863d6f953c1ff9fc9f7281a690d","contentHash":"acbcc941459c991278718c3a8ad598958124dbd5fcd3c6b5d1ab0091e029d842"},"/Users/liuhongkai/CPSC310_project/project_team051/src/controller/QueryValidator.ts":{"path":"/Users/liuhongkai/CPSC310_project/project_team051/src/controller/QueryValidator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":25},"end":{"line":3,"column":52}},"2":{"start":{"line":6,"column":8},"end":{"line":8,"column":9}},"3":{"start":{"line":7,"column":12},"end":{"line":7,"column":76}},"4":{"start":{"line":9,"column":25},"end":{"line":9,"column":30}},"5":{"start":{"line":10,"column":26},"end":{"line":10,"column":62}},"6":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"7":{"start":{"line":12,"column":12},"end":{"line":12,"column":25}},"8":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"9":{"start":{"line":15,"column":12},"end":{"line":15,"column":25}},"10":{"start":{"line":17,"column":8},"end":{"line":17,"column":20}},"11":{"start":{"line":20,"column":8},"end":{"line":26,"column":51}},"12":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"13":{"start":{"line":30,"column":12},"end":{"line":30,"column":103}},"14":{"start":{"line":32,"column":8},"end":{"line":32,"column":20}},"15":{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},"16":{"start":{"line":36,"column":12},"end":{"line":36,"column":24}},"17":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"18":{"start":{"line":39,"column":12},"end":{"line":39,"column":25}},"19":{"start":{"line":41,"column":8},"end":{"line":41,"column":20}},"20":{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},"21":{"start":{"line":45,"column":12},"end":{"line":45,"column":25}},"22":{"start":{"line":47,"column":8},"end":{"line":53,"column":9}},"23":{"start":{"line":48,"column":26},"end":{"line":48,"column":49}},"24":{"start":{"line":49,"column":12},"end":{"line":51,"column":13}},"25":{"start":{"line":50,"column":16},"end":{"line":50,"column":91}},"26":{"start":{"line":52,"column":12},"end":{"line":52,"column":72}},"27":{"start":{"line":52,"column":38},"end":{"line":52,"column":70}},"28":{"start":{"line":54,"column":8},"end":{"line":59,"column":9}},"29":{"start":{"line":55,"column":12},"end":{"line":57,"column":13}},"30":{"start":{"line":56,"column":16},"end":{"line":56,"column":89}},"31":{"start":{"line":58,"column":12},"end":{"line":58,"column":61}},"32":{"start":{"line":60,"column":8},"end":{"line":62,"column":9}},"33":{"start":{"line":61,"column":12},"end":{"line":61,"column":91}},"34":{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},"35":{"start":{"line":64,"column":12},"end":{"line":64,"column":65}},"36":{"start":{"line":66,"column":8},"end":{"line":66,"column":21}},"37":{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},"38":{"start":{"line":70,"column":12},"end":{"line":70,"column":90}},"39":{"start":{"line":72,"column":27},"end":{"line":72,"column":67}},"40":{"start":{"line":73,"column":21},"end":{"line":73,"column":39}},"41":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"42":{"start":{"line":75,"column":12},"end":{"line":75,"column":93}},"43":{"start":{"line":77,"column":20},"end":{"line":77,"column":27}},"44":{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},"45":{"start":{"line":79,"column":12},"end":{"line":79,"column":25}},"46":{"start":{"line":81,"column":31},"end":{"line":81,"column":45}},"47":{"start":{"line":82,"column":8},"end":{"line":84,"column":9}},"48":{"start":{"line":83,"column":12},"end":{"line":83,"column":93}},"49":{"start":{"line":85,"column":8},"end":{"line":87,"column":9}},"50":{"start":{"line":86,"column":12},"end":{"line":86,"column":25}},"51":{"start":{"line":88,"column":22},"end":{"line":88,"column":32}},"52":{"start":{"line":89,"column":8},"end":{"line":91,"column":9}},"53":{"start":{"line":90,"column":12},"end":{"line":90,"column":89}},"54":{"start":{"line":92,"column":8},"end":{"line":92,"column":20}},"55":{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},"56":{"start":{"line":96,"column":12},"end":{"line":96,"column":90}},"57":{"start":{"line":98,"column":27},"end":{"line":98,"column":72}},"58":{"start":{"line":99,"column":21},"end":{"line":99,"column":39}},"59":{"start":{"line":100,"column":8},"end":{"line":102,"column":9}},"60":{"start":{"line":101,"column":12},"end":{"line":101,"column":93}},"61":{"start":{"line":103,"column":20},"end":{"line":103,"column":27}},"62":{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},"63":{"start":{"line":105,"column":12},"end":{"line":105,"column":25}},"64":{"start":{"line":107,"column":31},"end":{"line":107,"column":45}},"65":{"start":{"line":108,"column":8},"end":{"line":110,"column":9}},"66":{"start":{"line":109,"column":12},"end":{"line":109,"column":93}},"67":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"68":{"start":{"line":112,"column":12},"end":{"line":112,"column":25}},"69":{"start":{"line":114,"column":22},"end":{"line":114,"column":32}},"70":{"start":{"line":115,"column":8},"end":{"line":117,"column":9}},"71":{"start":{"line":116,"column":12},"end":{"line":116,"column":90}},"72":{"start":{"line":118,"column":8},"end":{"line":118,"column":20}},"73":{"start":{"line":121,"column":8},"end":{"line":123,"column":9}},"74":{"start":{"line":122,"column":12},"end":{"line":122,"column":86}},"75":{"start":{"line":124,"column":8},"end":{"line":124,"column":57}},"76":{"start":{"line":125,"column":8},"end":{"line":129,"column":9}},"77":{"start":{"line":126,"column":12},"end":{"line":128,"column":13}},"78":{"start":{"line":127,"column":16},"end":{"line":127,"column":29}},"79":{"start":{"line":130,"column":8},"end":{"line":130,"column":20}},"80":{"start":{"line":133,"column":8},"end":{"line":135,"column":9}},"81":{"start":{"line":134,"column":12},"end":{"line":134,"column":103}},"82":{"start":{"line":136,"column":26},"end":{"line":136,"column":111}},"83":{"start":{"line":137,"column":8},"end":{"line":148,"column":9}},"84":{"start":{"line":138,"column":12},"end":{"line":140,"column":13}},"85":{"start":{"line":139,"column":16},"end":{"line":139,"column":90}},"86":{"start":{"line":141,"column":35},"end":{"line":141,"column":49}},"87":{"start":{"line":142,"column":12},"end":{"line":144,"column":13}},"88":{"start":{"line":143,"column":16},"end":{"line":143,"column":97}},"89":{"start":{"line":145,"column":12},"end":{"line":147,"column":13}},"90":{"start":{"line":146,"column":16},"end":{"line":146,"column":94}},"91":{"start":{"line":151,"column":8},"end":{"line":171,"column":9}},"92":{"start":{"line":152,"column":12},"end":{"line":154,"column":13}},"93":{"start":{"line":153,"column":16},"end":{"line":153,"column":89}},"94":{"start":{"line":156,"column":13},"end":{"line":171,"column":9}},"95":{"start":{"line":157,"column":12},"end":{"line":159,"column":13}},"96":{"start":{"line":158,"column":16},"end":{"line":158,"column":97}},"97":{"start":{"line":160,"column":12},"end":{"line":164,"column":13}},"98":{"start":{"line":161,"column":16},"end":{"line":163,"column":17}},"99":{"start":{"line":162,"column":20},"end":{"line":162,"column":100}},"100":{"start":{"line":165,"column":12},"end":{"line":167,"column":13}},"101":{"start":{"line":166,"column":16},"end":{"line":166,"column":93}},"102":{"start":{"line":170,"column":12},"end":{"line":170,"column":77}},"103":{"start":{"line":172,"column":8},"end":{"line":172,"column":20}},"104":{"start":{"line":175,"column":27},"end":{"line":175,"column":36}},"105":{"start":{"line":176,"column":8},"end":{"line":180,"column":9}},"106":{"start":{"line":179,"column":12},"end":{"line":179,"column":103}},"107":{"start":{"line":181,"column":31},"end":{"line":195,"column":9}},"108":{"start":{"line":182,"column":12},"end":{"line":194,"column":13}},"109":{"start":{"line":183,"column":16},"end":{"line":193,"column":17}},"110":{"start":{"line":184,"column":20},"end":{"line":192,"column":21}},"111":{"start":{"line":185,"column":24},"end":{"line":191,"column":25}},"112":{"start":{"line":186,"column":28},"end":{"line":186,"column":53}},"113":{"start":{"line":188,"column":29},"end":{"line":191,"column":25}},"114":{"start":{"line":189,"column":46},"end":{"line":189,"column":63}},"115":{"start":{"line":190,"column":28},"end":{"line":190,"column":54}},"116":{"start":{"line":196,"column":8},"end":{"line":196,"column":30}},"117":{"start":{"line":197,"column":8},"end":{"line":197,"column":37}},"118":{"start":{"line":200,"column":8},"end":{"line":202,"column":9}},"119":{"start":{"line":201,"column":12},"end":{"line":201,"column":103}},"120":{"start":{"line":203,"column":8},"end":{"line":207,"column":9}},"121":{"start":{"line":204,"column":12},"end":{"line":206,"column":13}},"122":{"start":{"line":205,"column":16},"end":{"line":205,"column":41}},"123":{"start":{"line":208,"column":8},"end":{"line":208,"column":94}},"124":{"start":{"line":211,"column":0},"end":{"line":211,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":26},"end":{"line":18,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":25},"end":{"line":27,"column":5}},"line":19},"2":{"name":"(anonymous_2)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":29},"end":{"line":33,"column":5}},"line":28},"3":{"name":"(anonymous_3)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":41},"end":{"line":42,"column":5}},"line":34},"4":{"name":"(anonymous_4)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":5}},"loc":{"start":{"line":43,"column":37},"end":{"line":67,"column":5}},"line":43},"5":{"name":"(anonymous_5)","decl":{"start":{"line":52,"column":31},"end":{"line":52,"column":32}},"loc":{"start":{"line":52,"column":38},"end":{"line":52,"column":70}},"line":52},"6":{"name":"(anonymous_6)","decl":{"start":{"line":68,"column":4},"end":{"line":68,"column":5}},"loc":{"start":{"line":68,"column":41},"end":{"line":93,"column":5}},"line":68},"7":{"name":"(anonymous_7)","decl":{"start":{"line":94,"column":4},"end":{"line":94,"column":5}},"loc":{"start":{"line":94,"column":41},"end":{"line":119,"column":5}},"line":94},"8":{"name":"(anonymous_8)","decl":{"start":{"line":120,"column":4},"end":{"line":120,"column":5}},"loc":{"start":{"line":120,"column":45},"end":{"line":131,"column":5}},"line":120},"9":{"name":"(anonymous_9)","decl":{"start":{"line":132,"column":4},"end":{"line":132,"column":5}},"loc":{"start":{"line":132,"column":40},"end":{"line":149,"column":5}},"line":132},"10":{"name":"(anonymous_10)","decl":{"start":{"line":150,"column":4},"end":{"line":150,"column":5}},"loc":{"start":{"line":150,"column":33},"end":{"line":173,"column":5}},"line":150},"11":{"name":"(anonymous_11)","decl":{"start":{"line":174,"column":4},"end":{"line":174,"column":5}},"loc":{"start":{"line":174,"column":35},"end":{"line":198,"column":5}},"line":174},"12":{"name":"(anonymous_12)","decl":{"start":{"line":181,"column":31},"end":{"line":181,"column":32}},"loc":{"start":{"line":181,"column":40},"end":{"line":195,"column":9}},"line":181},"13":{"name":"(anonymous_13)","decl":{"start":{"line":199,"column":4},"end":{"line":199,"column":5}},"loc":{"start":{"line":199,"column":33},"end":{"line":209,"column":5}},"line":199}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":8},"end":{"line":8,"column":9}},"type":"if","locations":[{"start":{"line":6,"column":8},"end":{"line":8,"column":9}},{"start":{"line":6,"column":8},"end":{"line":8,"column":9}}],"line":6},"1":{"loc":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},{"start":{"line":11,"column":8},"end":{"line":13,"column":9}}],"line":11},"2":{"loc":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"type":"if","locations":[{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},{"start":{"line":14,"column":8},"end":{"line":16,"column":9}}],"line":14},"3":{"loc":{"start":{"line":20,"column":16},"end":{"line":26,"column":49}},"type":"binary-expr","locations":[{"start":{"line":20,"column":16},"end":{"line":20,"column":41}},{"start":{"line":21,"column":12},"end":{"line":21,"column":26}},{"start":{"line":22,"column":12},"end":{"line":22,"column":28}},{"start":{"line":23,"column":12},"end":{"line":23,"column":30}},{"start":{"line":24,"column":12},"end":{"line":24,"column":45}},{"start":{"line":25,"column":12},"end":{"line":25,"column":34}},{"start":{"line":26,"column":12},"end":{"line":26,"column":49}}],"line":20},"4":{"loc":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},{"start":{"line":29,"column":8},"end":{"line":31,"column":9}}],"line":29},"5":{"loc":{"start":{"line":29,"column":12},"end":{"line":29,"column":75}},"type":"binary-expr","locations":[{"start":{"line":29,"column":12},"end":{"line":29,"column":43}},{"start":{"line":29,"column":47},"end":{"line":29,"column":75}}],"line":29},"6":{"loc":{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},{"start":{"line":35,"column":8},"end":{"line":37,"column":9}}],"line":35},"7":{"loc":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},{"start":{"line":38,"column":8},"end":{"line":40,"column":9}}],"line":38},"8":{"loc":{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},{"start":{"line":44,"column":8},"end":{"line":46,"column":9}}],"line":44},"9":{"loc":{"start":{"line":44,"column":12},"end":{"line":44,"column":57}},"type":"binary-expr","locations":[{"start":{"line":44,"column":12},"end":{"line":44,"column":38}},{"start":{"line":44,"column":42},"end":{"line":44,"column":57}}],"line":44},"10":{"loc":{"start":{"line":47,"column":8},"end":{"line":53,"column":9}},"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":53,"column":9}},{"start":{"line":47,"column":8},"end":{"line":53,"column":9}}],"line":47},"11":{"loc":{"start":{"line":47,"column":12},"end":{"line":47,"column":45}},"type":"binary-expr","locations":[{"start":{"line":47,"column":12},"end":{"line":47,"column":27}},{"start":{"line":47,"column":31},"end":{"line":47,"column":45}}],"line":47},"12":{"loc":{"start":{"line":48,"column":26},"end":{"line":48,"column":49}},"type":"binary-expr","locations":[{"start":{"line":48,"column":26},"end":{"line":48,"column":36}},{"start":{"line":48,"column":40},"end":{"line":48,"column":49}}],"line":48},"13":{"loc":{"start":{"line":49,"column":12},"end":{"line":51,"column":13}},"type":"if","locations":[{"start":{"line":49,"column":12},"end":{"line":51,"column":13}},{"start":{"line":49,"column":12},"end":{"line":51,"column":13}}],"line":49},"14":{"loc":{"start":{"line":49,"column":16},"end":{"line":49,"column":59}},"type":"binary-expr","locations":[{"start":{"line":49,"column":16},"end":{"line":49,"column":37}},{"start":{"line":49,"column":41},"end":{"line":49,"column":59}}],"line":49},"15":{"loc":{"start":{"line":54,"column":8},"end":{"line":59,"column":9}},"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":59,"column":9}},{"start":{"line":54,"column":8},"end":{"line":59,"column":9}}],"line":54},"16":{"loc":{"start":{"line":55,"column":12},"end":{"line":57,"column":13}},"type":"if","locations":[{"start":{"line":55,"column":12},"end":{"line":57,"column":13}},{"start":{"line":55,"column":12},"end":{"line":57,"column":13}}],"line":55},"17":{"loc":{"start":{"line":60,"column":8},"end":{"line":62,"column":9}},"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":62,"column":9}},{"start":{"line":60,"column":8},"end":{"line":62,"column":9}}],"line":60},"18":{"loc":{"start":{"line":60,"column":12},"end":{"line":60,"column":62}},"type":"binary-expr","locations":[{"start":{"line":60,"column":12},"end":{"line":60,"column":26}},{"start":{"line":60,"column":30},"end":{"line":60,"column":44}},{"start":{"line":60,"column":48},"end":{"line":60,"column":62}}],"line":60},"19":{"loc":{"start":{"line":61,"column":43},"end":{"line":61,"column":78}},"type":"binary-expr","locations":[{"start":{"line":61,"column":43},"end":{"line":61,"column":52}},{"start":{"line":61,"column":56},"end":{"line":61,"column":65}},{"start":{"line":61,"column":69},"end":{"line":61,"column":78}}],"line":61},"20":{"loc":{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},{"start":{"line":63,"column":8},"end":{"line":65,"column":9}}],"line":63},"21":{"loc":{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},"type":"if","locations":[{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},{"start":{"line":69,"column":8},"end":{"line":71,"column":9}}],"line":69},"22":{"loc":{"start":{"line":69,"column":12},"end":{"line":69,"column":55}},"type":"binary-expr","locations":[{"start":{"line":69,"column":12},"end":{"line":69,"column":37}},{"start":{"line":69,"column":41},"end":{"line":69,"column":55}}],"line":69},"23":{"loc":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"type":"if","locations":[{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},{"start":{"line":74,"column":8},"end":{"line":76,"column":9}}],"line":74},"24":{"loc":{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},"type":"if","locations":[{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},{"start":{"line":78,"column":8},"end":{"line":80,"column":9}}],"line":78},"25":{"loc":{"start":{"line":82,"column":8},"end":{"line":84,"column":9}},"type":"if","locations":[{"start":{"line":82,"column":8},"end":{"line":84,"column":9}},{"start":{"line":82,"column":8},"end":{"line":84,"column":9}}],"line":82},"26":{"loc":{"start":{"line":85,"column":8},"end":{"line":87,"column":9}},"type":"if","locations":[{"start":{"line":85,"column":8},"end":{"line":87,"column":9}},{"start":{"line":85,"column":8},"end":{"line":87,"column":9}}],"line":85},"27":{"loc":{"start":{"line":89,"column":8},"end":{"line":91,"column":9}},"type":"if","locations":[{"start":{"line":89,"column":8},"end":{"line":91,"column":9}},{"start":{"line":89,"column":8},"end":{"line":91,"column":9}}],"line":89},"28":{"loc":{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},"type":"if","locations":[{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},{"start":{"line":95,"column":8},"end":{"line":97,"column":9}}],"line":95},"29":{"loc":{"start":{"line":95,"column":12},"end":{"line":95,"column":55}},"type":"binary-expr","locations":[{"start":{"line":95,"column":12},"end":{"line":95,"column":37}},{"start":{"line":95,"column":41},"end":{"line":95,"column":55}}],"line":95},"30":{"loc":{"start":{"line":100,"column":8},"end":{"line":102,"column":9}},"type":"if","locations":[{"start":{"line":100,"column":8},"end":{"line":102,"column":9}},{"start":{"line":100,"column":8},"end":{"line":102,"column":9}}],"line":100},"31":{"loc":{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},"type":"if","locations":[{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},{"start":{"line":104,"column":8},"end":{"line":106,"column":9}}],"line":104},"32":{"loc":{"start":{"line":108,"column":8},"end":{"line":110,"column":9}},"type":"if","locations":[{"start":{"line":108,"column":8},"end":{"line":110,"column":9}},{"start":{"line":108,"column":8},"end":{"line":110,"column":9}}],"line":108},"33":{"loc":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},{"start":{"line":111,"column":8},"end":{"line":113,"column":9}}],"line":111},"34":{"loc":{"start":{"line":115,"column":8},"end":{"line":117,"column":9}},"type":"if","locations":[{"start":{"line":115,"column":8},"end":{"line":117,"column":9}},{"start":{"line":115,"column":8},"end":{"line":117,"column":9}}],"line":115},"35":{"loc":{"start":{"line":121,"column":8},"end":{"line":123,"column":9}},"type":"if","locations":[{"start":{"line":121,"column":8},"end":{"line":123,"column":9}},{"start":{"line":121,"column":8},"end":{"line":123,"column":9}}],"line":121},"36":{"loc":{"start":{"line":121,"column":12},"end":{"line":121,"column":59}},"type":"binary-expr","locations":[{"start":{"line":121,"column":12},"end":{"line":121,"column":39}},{"start":{"line":121,"column":43},"end":{"line":121,"column":59}}],"line":121},"37":{"loc":{"start":{"line":125,"column":8},"end":{"line":129,"column":9}},"type":"if","locations":[{"start":{"line":125,"column":8},"end":{"line":129,"column":9}},{"start":{"line":125,"column":8},"end":{"line":129,"column":9}}],"line":125},"38":{"loc":{"start":{"line":126,"column":12},"end":{"line":128,"column":13}},"type":"if","locations":[{"start":{"line":126,"column":12},"end":{"line":128,"column":13}},{"start":{"line":126,"column":12},"end":{"line":128,"column":13}}],"line":126},"39":{"loc":{"start":{"line":133,"column":8},"end":{"line":135,"column":9}},"type":"if","locations":[{"start":{"line":133,"column":8},"end":{"line":135,"column":9}},{"start":{"line":133,"column":8},"end":{"line":135,"column":9}}],"line":133},"40":{"loc":{"start":{"line":133,"column":12},"end":{"line":133,"column":59}},"type":"binary-expr","locations":[{"start":{"line":133,"column":12},"end":{"line":133,"column":35}},{"start":{"line":133,"column":39},"end":{"line":133,"column":59}}],"line":133},"41":{"loc":{"start":{"line":138,"column":12},"end":{"line":140,"column":13}},"type":"if","locations":[{"start":{"line":138,"column":12},"end":{"line":140,"column":13}},{"start":{"line":138,"column":12},"end":{"line":140,"column":13}}],"line":138},"42":{"loc":{"start":{"line":142,"column":12},"end":{"line":144,"column":13}},"type":"if","locations":[{"start":{"line":142,"column":12},"end":{"line":144,"column":13}},{"start":{"line":142,"column":12},"end":{"line":144,"column":13}}],"line":142},"43":{"loc":{"start":{"line":145,"column":12},"end":{"line":147,"column":13}},"type":"if","locations":[{"start":{"line":145,"column":12},"end":{"line":147,"column":13}},{"start":{"line":145,"column":12},"end":{"line":147,"column":13}}],"line":145},"44":{"loc":{"start":{"line":151,"column":8},"end":{"line":171,"column":9}},"type":"if","locations":[{"start":{"line":151,"column":8},"end":{"line":171,"column":9}},{"start":{"line":151,"column":8},"end":{"line":171,"column":9}}],"line":151},"45":{"loc":{"start":{"line":152,"column":12},"end":{"line":154,"column":13}},"type":"if","locations":[{"start":{"line":152,"column":12},"end":{"line":154,"column":13}},{"start":{"line":152,"column":12},"end":{"line":154,"column":13}}],"line":152},"46":{"loc":{"start":{"line":156,"column":13},"end":{"line":171,"column":9}},"type":"if","locations":[{"start":{"line":156,"column":13},"end":{"line":171,"column":9}},{"start":{"line":156,"column":13},"end":{"line":171,"column":9}}],"line":156},"47":{"loc":{"start":{"line":157,"column":12},"end":{"line":159,"column":13}},"type":"if","locations":[{"start":{"line":157,"column":12},"end":{"line":159,"column":13}},{"start":{"line":157,"column":12},"end":{"line":159,"column":13}}],"line":157},"48":{"loc":{"start":{"line":157,"column":16},"end":{"line":157,"column":84}},"type":"binary-expr","locations":[{"start":{"line":157,"column":16},"end":{"line":157,"column":27}},{"start":{"line":157,"column":31},"end":{"line":157,"column":57}},{"start":{"line":157,"column":61},"end":{"line":157,"column":84}}],"line":157},"49":{"loc":{"start":{"line":161,"column":16},"end":{"line":163,"column":17}},"type":"if","locations":[{"start":{"line":161,"column":16},"end":{"line":163,"column":17}},{"start":{"line":161,"column":16},"end":{"line":163,"column":17}}],"line":161},"50":{"loc":{"start":{"line":165,"column":12},"end":{"line":167,"column":13}},"type":"if","locations":[{"start":{"line":165,"column":12},"end":{"line":167,"column":13}},{"start":{"line":165,"column":12},"end":{"line":167,"column":13}}],"line":165},"51":{"loc":{"start":{"line":165,"column":16},"end":{"line":165,"column":64}},"type":"binary-expr","locations":[{"start":{"line":165,"column":16},"end":{"line":165,"column":25}},{"start":{"line":165,"column":29},"end":{"line":165,"column":64}}],"line":165},"52":{"loc":{"start":{"line":176,"column":8},"end":{"line":180,"column":9}},"type":"if","locations":[{"start":{"line":176,"column":8},"end":{"line":180,"column":9}},{"start":{"line":176,"column":8},"end":{"line":180,"column":9}}],"line":176},"53":{"loc":{"start":{"line":176,"column":12},"end":{"line":178,"column":46}},"type":"binary-expr","locations":[{"start":{"line":176,"column":12},"end":{"line":176,"column":33}},{"start":{"line":177,"column":12},"end":{"line":177,"column":50}},{"start":{"line":178,"column":12},"end":{"line":178,"column":46}}],"line":176},"54":{"loc":{"start":{"line":182,"column":12},"end":{"line":194,"column":13}},"type":"if","locations":[{"start":{"line":182,"column":12},"end":{"line":194,"column":13}},{"start":{"line":182,"column":12},"end":{"line":194,"column":13}}],"line":182},"55":{"loc":{"start":{"line":182,"column":16},"end":{"line":182,"column":55}},"type":"binary-expr","locations":[{"start":{"line":182,"column":16},"end":{"line":182,"column":39}},{"start":{"line":182,"column":43},"end":{"line":182,"column":55}}],"line":182},"56":{"loc":{"start":{"line":184,"column":20},"end":{"line":192,"column":21}},"type":"if","locations":[{"start":{"line":184,"column":20},"end":{"line":192,"column":21}},{"start":{"line":184,"column":20},"end":{"line":192,"column":21}}],"line":184},"57":{"loc":{"start":{"line":185,"column":24},"end":{"line":191,"column":25}},"type":"if","locations":[{"start":{"line":185,"column":24},"end":{"line":191,"column":25}},{"start":{"line":185,"column":24},"end":{"line":191,"column":25}}],"line":185},"58":{"loc":{"start":{"line":185,"column":28},"end":{"line":185,"column":77}},"type":"binary-expr","locations":[{"start":{"line":185,"column":28},"end":{"line":185,"column":56}},{"start":{"line":185,"column":60},"end":{"line":185,"column":77}}],"line":185},"59":{"loc":{"start":{"line":188,"column":29},"end":{"line":191,"column":25}},"type":"if","locations":[{"start":{"line":188,"column":29},"end":{"line":191,"column":25}},{"start":{"line":188,"column":29},"end":{"line":191,"column":25}}],"line":188},"60":{"loc":{"start":{"line":188,"column":33},"end":{"line":188,"column":77}},"type":"binary-expr","locations":[{"start":{"line":188,"column":33},"end":{"line":188,"column":56}},{"start":{"line":188,"column":60},"end":{"line":188,"column":77}}],"line":188},"61":{"loc":{"start":{"line":200,"column":8},"end":{"line":202,"column":9}},"type":"if","locations":[{"start":{"line":200,"column":8},"end":{"line":202,"column":9}},{"start":{"line":200,"column":8},"end":{"line":202,"column":9}}],"line":200},"62":{"loc":{"start":{"line":200,"column":12},"end":{"line":200,"column":88}},"type":"binary-expr","locations":[{"start":{"line":200,"column":12},"end":{"line":200,"column":50}},{"start":{"line":200,"column":54},"end":{"line":200,"column":88}}],"line":200},"63":{"loc":{"start":{"line":204,"column":12},"end":{"line":206,"column":13}},"type":"if","locations":[{"start":{"line":204,"column":12},"end":{"line":206,"column":13}},{"start":{"line":204,"column":12},"end":{"line":206,"column":13}}],"line":204}},"s":{"0":1,"1":1,"2":39,"3":2,"4":37,"5":37,"6":36,"7":0,"8":33,"9":4,"10":26,"11":39,"12":0,"13":0,"14":0,"15":33,"16":0,"17":33,"18":4,"19":26,"20":44,"21":0,"22":44,"23":8,"24":8,"25":1,"26":7,"27":9,"28":36,"29":2,"30":0,"31":2,"32":34,"33":18,"34":16,"35":14,"36":2,"37":18,"38":0,"39":18,"40":18,"41":18,"42":0,"43":18,"44":18,"45":0,"46":18,"47":18,"48":1,"49":17,"50":1,"51":16,"52":16,"53":0,"54":16,"55":14,"56":0,"57":14,"58":14,"59":14,"60":0,"61":14,"62":14,"63":0,"64":14,"65":14,"66":0,"67":14,"68":1,"69":13,"70":13,"71":1,"72":12,"73":36,"74":0,"75":36,"76":34,"77":33,"78":0,"79":33,"80":36,"81":0,"82":36,"83":36,"84":86,"85":0,"86":86,"87":86,"88":1,"89":85,"90":1,"91":33,"92":33,"93":1,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":32,"104":26,"105":26,"106":0,"107":26,"108":146,"109":146,"110":237,"111":237,"112":120,"113":117,"114":28,"115":28,"116":26,"117":26,"118":63,"119":1,"120":62,"121":62,"122":62,"123":0,"124":1},"f":{"0":39,"1":39,"2":0,"3":33,"4":44,"5":9,"6":18,"7":14,"8":36,"9":36,"10":33,"11":26,"12":146,"13":63},"b":{"0":[2,37],"1":[0,33],"2":[4,26],"3":[39,39,39,38,38,38,38],"4":[0,0],"5":[0,0],"6":[0,33],"7":[4,26],"8":[0,44],"9":[44,44],"10":[8,36],"11":[44,39],"12":[8,3],"13":[1,7],"14":[8,8],"15":[2,34],"16":[0,2],"17":[18,16],"18":[34,22,19],"19":[18,6,3],"20":[14,2],"21":[0,18],"22":[18,18],"23":[0,18],"24":[0,18],"25":[1,17],"26":[1,16],"27":[0,16],"28":[0,14],"29":[14,14],"30":[0,14],"31":[0,14],"32":[0,14],"33":[1,13],"34":[1,12],"35":[0,36],"36":[36,36],"37":[33,1],"38":[0,32],"39":[0,36],"40":[36,36],"41":[0,86],"42":[1,85],"43":[1,84],"44":[33,0],"45":[1,32],"46":[0,0],"47":[0,0],"48":[0,0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,26],"53":[26,26,26],"54":[146,0],"55":[146,146],"56":[237,0],"57":[120,117],"58":[237,120],"59":[28,89],"60":[117,117],"61":[1,62],"62":[63,63],"63":[62,0]},"inputSourceMap":{"version":3,"file":"/Users/liuhongkai/CPSC310_project/project_team051/src/controller/QueryValidator.ts","sources":["/Users/liuhongkai/CPSC310_project/project_team051/src/controller/QueryValidator.ts"],"names":[],"mappings":"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","sourcesContent":["import { InsightError } from \"./IInsightFacade\";\n\nexport interface Query {\n\tWHERE: any;\n\tOPTIONS: {\n\t\tCOLUMNS: string[];\n\t\tORDER?: any;\n\t};\n}\n\nexport default class QueryValidator {\n\tpublic checkValidEBNF(query: unknown): boolean {\n\t\t// Validate that query is an object and conforms to the Query interface\n\t\tif (!this.isQueryObject(query)) {\n\t\t\tthrow new InsightError(\"Invalid query format\");\n\t\t}\n\n\t\tconst queryObj = query as Query;\n\n\t\t// Extract dataset ID from query\n\t\tconst datasetId = this.getDatasetIdFromQuery(queryObj);\n\n\t\t// Validate OPTIONS clause\n\t\tif (!this.isValidOptionsClause(queryObj.OPTIONS, datasetId)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if the format inside WHERE is valid\n\t\tif (!this.isValidWhereClause(queryObj.WHERE, datasetId)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate isQueryObject(query: unknown): query is Query {\n\t\treturn (\n\t\t\ttypeof query === \"object\" &&\n\t\t\tquery !== null &&\n\t\t\t\"WHERE\" in query &&\n\t\t\t\"OPTIONS\" in query &&\n\t\t\ttypeof (query as any).OPTIONS === \"object\" &&\n\t\t\t(query as any).OPTIONS !== null &&\n\t\t\tArray.isArray((query as any).OPTIONS?.COLUMNS)\n\t\t);\n\t}\n\n\tprivate hasValidColumns(options: Query[\"OPTIONS\"]): boolean {\n\t\tif (!Array.isArray(options.COLUMNS) || options.COLUMNS.length === 0) {\n\t\t\tthrow new InsightError(\"OPTIONS must contain a non-empty COLUMNS array.\");\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate isValidWhereClause(WHERE: any, datasetId: string): boolean {\n\t\t// WHERE can be an empty object\n\t\tif (Object.keys(WHERE).length === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Check if WHERE clause contains a valid filter\n\t\tif (!this.isValidFilter(WHERE, datasetId)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate isValidFilter(filter: any, datasetId: string): boolean {\n\t\tif (typeof filter !== \"object\" || filter === null) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check for LOGICCOMPARISON: AND / OR\n\t\tif (\"AND\" in filter || \"OR\" in filter) {\n\t\t\tconst logic = filter.AND || filter.OR;\n\t\t\tif (!Array.isArray(logic) || logic.length === 0) {\n\t\t\t\tthrow new InsightError(\"LOGIC must be a non-empty array\");\n\t\t\t}\n\t\t\t// Recursively check each filter in the FILTER_LIST\n\t\t\treturn logic.every((f: any) => this.isValidFilter(f, datasetId));\n\t\t}\n\n\t\t// Check for NEGATION: NOT\n\t\tif (\"NOT\" in filter) {\n\t\t\tif (Object.keys(filter).length !== 1) {\n\t\t\t\tthrow new InsightError(\"NOT must have exactly one key\");\n\t\t\t}\n\t\t\treturn this.isValidFilter(filter.NOT, datasetId);\n\t\t}\n\n\t\t// Check for MCOMPARISON: GT / LT / EQ\n\t\tif (\"GT\" in filter || \"LT\" in filter || \"EQ\" in filter) {\n\t\t\treturn this.isValidMComparison(filter.GT || filter.LT || filter.EQ, datasetId);\n\t\t}\n\n\t\t// Check for SCOMPARISON: IS\n\t\tif (\"IS\" in filter) {\n\t\t\treturn this.isValidSComparison(filter.IS, datasetId);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate isValidMComparison(mcomp: any, datasetId: string): boolean {\n\t\tif (typeof mcomp !== \"object\" || mcomp === null) {\n\t\t\tthrow new InsightError(\"MCOMPARISON must be a valid object\");\n\t\t}\n\n\t\tconst validMKeys = [\"avg\", \"pass\", \"fail\", \"audit\", \"year\"];\n\t\tconst keys = Object.keys(mcomp);\n\t\tif (keys.length !== 1) {\n\t\t\tthrow new InsightError(\"MCOMPARISON must have exactly one key\");\n\t\t}\n\n\t\tconst key = keys[0];\n\n\t\t// Ensure the key follows the format: dataset_field\n\t\tif (!key.includes(\"_\")) {\n\t\t\treturn false;\n\t\t}\n\t\tconst [keyId, field] = key.split(\"_\");\n\t\tif (keyId !== datasetId) {\n\t\t\tthrow new InsightError(`Key does not match dataset ID: ${key}`);\n\t\t}\n\t\tif (!validMKeys.includes(field)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst value = mcomp[key];\n\t\tif (typeof value !== \"number\") {\n\t\t\tthrow new InsightError(\"GT, LT, EQ require numeric values\");\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate isValidSComparison(scomp: any, datasetId: string): boolean {\n\t\tif (typeof scomp !== \"object\" || scomp === null) {\n\t\t\tthrow new InsightError(\"SCOMPARISON must be a valid object\");\n\t\t}\n\n\t\tconst validSKeys = [\"dept\", \"id\", \"instructor\", \"title\", \"uuid\"];\n\t\tconst keys = Object.keys(scomp);\n\t\tif (keys.length !== 1) {\n\t\t\tthrow new InsightError(\"SCOMPARISON must have exactly one key\");\n\t\t}\n\n\t\tconst key = keys[0];\n\n\t\t// Ensure the key follows the format: dataset_field\n\t\tif (!key.includes(\"_\")) {\n\t\t\treturn false;\n\t\t}\n\t\tconst [keyId, field] = key.split(\"_\");\n\t\tif (keyId !== datasetId) {\n\t\t\tthrow new InsightError(`Key does not match dataset ID: ${key}`);\n\t\t}\n\t\tif (!validSKeys.includes(field)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst value = scomp[key];\n\t\tif (typeof value !== \"string\") {\n\t\t\tthrow new InsightError(\"IS operator requires string values\");\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate isValidOptionsClause(options: Query[\"OPTIONS\"], datasetId: string): boolean {\n\t\tif (typeof options !== \"object\" || options === null) {\n\t\t\tthrow new InsightError(\"OPTIONS must be a valid object\");\n\t\t}\n\n\t\t// Validate COLUMNS\n\t\tthis.validateColumns(options.COLUMNS, datasetId);\n\n\t\t// If ORDER exists, check if it's valid\n\t\tif (\"ORDER\" in options) {\n\t\t\tif (!this.isValidOrder(options.ORDER, options.COLUMNS)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate validateColumns(columns: string[], datasetId: string): void {\n\t\tif (!Array.isArray(columns) || columns.length === 0) {\n\t\t\tthrow new InsightError(\"OPTIONS must contain a non-empty COLUMNS array.\");\n\t\t}\n\n\t\tconst validKeys = [\"avg\", \"pass\", \"fail\", \"audit\", \"year\", \"dept\", \"id\", \"instructor\", \"title\", \"uuid\"];\n\t\tfor (const key of columns) {\n\t\t\tif (!key.includes(\"_\")) {\n\t\t\t\tthrow new InsightError(`Invalid key in COLUMNS: ${key}`);\n\t\t\t}\n\t\t\tconst [keyId, field] = key.split(\"_\");\n\t\t\tif (keyId !== datasetId) {\n\t\t\t\tthrow new InsightError(`Key does not match dataset ID: ${key}`);\n\t\t\t}\n\t\t\tif (!validKeys.includes(field)) {\n\t\t\t\tthrow new InsightError(`Invalid field in COLUMNS: ${field}`);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate isValidOrder(order: any, columns: string[]): boolean {\n\t\tif (typeof order === \"string\") {\n\t\t\tif (!columns.includes(order)) {\n\t\t\t\tthrow new InsightError(\"ORDER key must be in COLUMNS.\");\n\t\t\t}\n\t\t} else if (typeof order === \"object\") {\n\t\t\tif (!order.keys || !Array.isArray(order.keys) || order.keys.length === 0) {\n\t\t\t\tthrow new InsightError(\"ORDER keys must be a non-empty array.\");\n\t\t\t}\n\t\t\tfor (const key of order.keys) {\n\t\t\t\tif (!columns.includes(key)) {\n\t\t\t\t\tthrow new InsightError(`ORDER key ${key} must be in COLUMNS.`);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (order.dir && ![\"UP\", \"DOWN\"].includes(order.dir)) {\n\t\t\t\tthrow new InsightError(\"ORDER dir must be 'UP' or 'DOWN'.\");\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new InsightError(\"Invalid ORDER format.\");\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic referencesSingleDataset(query: unknown): boolean {\n\t\tconst datasetIds = new Set<string>();\n\n\t\t// Ensure OPTIONS and COLUMNS exist\n\t\tif (\n\t\t\t!(\"OPTIONS\" in (query as any)) ||\n\t\t\t!Array.isArray((query as any).OPTIONS?.COLUMNS) ||\n\t\t\t(query as any).OPTIONS.COLUMNS.length === 0\n\t\t) {\n\t\t\tthrow new InsightError(\"OPTIONS must contain a non-empty COLUMNS array.\");\n\t\t}\n\n\t\t// Recursive function to traverse through the query object\n\t\tconst traverseObject = (obj: any): void => {\n\t\t\tif (typeof obj === \"object\" && obj !== null) {\n\t\t\t\tfor (const key in obj) {\n\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(obj, key)) {\n\t\t\t\t\t\tif (typeof obj[key] === \"object\" && obj[key] !== null) {\n\t\t\t\t\t\t\ttraverseObject(obj[key]);\n\t\t\t\t\t\t} else if (typeof key === \"string\" && key.includes(\"_\")) {\n\t\t\t\t\t\t\tconst datasetId = key.split(\"_\")[0];\n\t\t\t\t\t\t\tdatasetIds.add(datasetId);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\ttraverseObject(query);\n\n\t\treturn datasetIds.size === 1;\n\t}\n\n\tpublic getDatasetIdFromQuery(query: Query): string {\n\t\tif (!Array.isArray(query.OPTIONS?.COLUMNS) || query.OPTIONS.COLUMNS.length === 0) {\n\t\t\tthrow new InsightError(\"OPTIONS must contain a non-empty COLUMNS array.\");\n\t\t}\n\n\t\tfor (const col of query.OPTIONS.COLUMNS) {\n\t\t\tif (col.includes(\"_\")) {\n\t\t\t\treturn col.split(\"_\")[0];\n\t\t\t}\n\t\t}\n\n\t\tthrow new InsightError(\"Could not extract dataset ID from COLUMNS.\");\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e4be409eb27b11fc0544b0b47bc68eb6eaa5a4a1","contentHash":"13e136a5da06435d9d3f1b3f977571076269d54f5feed4ffdcd00ca01fbc7833"},"/Users/liuhongkai/CPSC310_project/project_team051/src/controller/QueryExecutor.ts":{"path":"/Users/liuhongkai/CPSC310_project/project_team051/src/controller/QueryExecutor.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":25},"end":{"line":3,"column":52}},"2":{"start":{"line":8,"column":8},"end":{"line":8,"column":53}},"3":{"start":{"line":11,"column":8},"end":{"line":11,"column":59}},"4":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"5":{"start":{"line":13,"column":12},"end":{"line":13,"column":107}},"6":{"start":{"line":15,"column":8},"end":{"line":15,"column":54}},"7":{"start":{"line":16,"column":24},"end":{"line":16,"column":57}},"8":{"start":{"line":17,"column":29},"end":{"line":17,"column":67}},"9":{"start":{"line":18,"column":8},"end":{"line":18,"column":62}},"10":{"start":{"line":21,"column":8},"end":{"line":25,"column":9}},"11":{"start":{"line":22,"column":12},"end":{"line":24,"column":13}},"12":{"start":{"line":23,"column":16},"end":{"line":23,"column":41}},"13":{"start":{"line":26,"column":8},"end":{"line":26,"column":94}},"14":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"15":{"start":{"line":30,"column":12},"end":{"line":30,"column":24}},"16":{"start":{"line":32,"column":31},"end":{"line":32,"column":62}},"17":{"start":{"line":33,"column":8},"end":{"line":33,"column":43}},"18":{"start":{"line":36,"column":8},"end":{"line":38,"column":9}},"19":{"start":{"line":37,"column":12},"end":{"line":37,"column":45}},"20":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"21":{"start":{"line":40,"column":12},"end":{"line":40,"column":43}},"22":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"23":{"start":{"line":43,"column":12},"end":{"line":43,"column":45}},"24":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"25":{"start":{"line":46,"column":12},"end":{"line":46,"column":48}},"26":{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},"27":{"start":{"line":49,"column":12},"end":{"line":49,"column":43}},"28":{"start":{"line":51,"column":8},"end":{"line":51,"column":76}},"29":{"start":{"line":54,"column":27},"end":{"line":54,"column":96}},"30":{"start":{"line":54,"column":60},"end":{"line":54,"column":95}},"31":{"start":{"line":55,"column":8},"end":{"line":55,"column":76}},"32":{"start":{"line":55,"column":25},"end":{"line":55,"column":75}},"33":{"start":{"line":55,"column":58},"end":{"line":55,"column":74}},"34":{"start":{"line":58,"column":27},"end":{"line":58,"column":95}},"35":{"start":{"line":58,"column":59},"end":{"line":58,"column":94}},"36":{"start":{"line":59,"column":8},"end":{"line":59,"column":75}},"37":{"start":{"line":59,"column":25},"end":{"line":59,"column":74}},"38":{"start":{"line":59,"column":57},"end":{"line":59,"column":73}},"39":{"start":{"line":62,"column":26},"end":{"line":62,"column":64}},"40":{"start":{"line":63,"column":8},"end":{"line":63,"column":42}},"41":{"start":{"line":63,"column":25},"end":{"line":63,"column":41}},"42":{"start":{"line":66,"column":25},"end":{"line":66,"column":65}},"43":{"start":{"line":67,"column":27},"end":{"line":67,"column":42}},"44":{"start":{"line":68,"column":20},"end":{"line":68,"column":46}},"45":{"start":{"line":69,"column":22},"end":{"line":69,"column":37}},"46":{"start":{"line":70,"column":19},"end":{"line":70,"column":36}},"47":{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},"48":{"start":{"line":72,"column":12},"end":{"line":72,"column":93}},"49":{"start":{"line":74,"column":8},"end":{"line":89,"column":10}},"50":{"start":{"line":75,"column":30},"end":{"line":75,"column":63}},"51":{"start":{"line":76,"column":12},"end":{"line":78,"column":13}},"52":{"start":{"line":77,"column":16},"end":{"line":77,"column":95}},"53":{"start":{"line":79,"column":12},"end":{"line":81,"column":13}},"54":{"start":{"line":80,"column":16},"end":{"line":80,"column":41}},"55":{"start":{"line":82,"column":12},"end":{"line":84,"column":13}},"56":{"start":{"line":83,"column":16},"end":{"line":83,"column":41}},"57":{"start":{"line":85,"column":12},"end":{"line":87,"column":13}},"58":{"start":{"line":86,"column":16},"end":{"line":86,"column":43}},"59":{"start":{"line":88,"column":12},"end":{"line":88,"column":25}},"60":{"start":{"line":92,"column":20},"end":{"line":92,"column":47}},"61":{"start":{"line":93,"column":22},"end":{"line":93,"column":38}},"62":{"start":{"line":94,"column":19},"end":{"line":94,"column":36}},"63":{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},"64":{"start":{"line":96,"column":12},"end":{"line":96,"column":93}},"65":{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},"66":{"start":{"line":99,"column":12},"end":{"line":99,"column":92}},"67":{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},"68":{"start":{"line":102,"column":12},"end":{"line":102,"column":96}},"69":{"start":{"line":104,"column":29},"end":{"line":104,"column":49}},"70":{"start":{"line":105,"column":29},"end":{"line":105,"column":64}},"71":{"start":{"line":106,"column":29},"end":{"line":106,"column":69}},"72":{"start":{"line":107,"column":22},"end":{"line":107,"column":46}},"73":{"start":{"line":108,"column":8},"end":{"line":114,"column":10}},"74":{"start":{"line":109,"column":30},"end":{"line":109,"column":63}},"75":{"start":{"line":110,"column":12},"end":{"line":112,"column":13}},"76":{"start":{"line":111,"column":16},"end":{"line":111,"column":95}},"77":{"start":{"line":113,"column":12},"end":{"line":113,"column":41}},"78":{"start":{"line":117,"column":27},"end":{"line":117,"column":45}},"79":{"start":{"line":118,"column":26},"end":{"line":118,"column":48}},"80":{"start":{"line":119,"column":8},"end":{"line":121,"column":9}},"81":{"start":{"line":120,"column":12},"end":{"line":120,"column":25}},"82":{"start":{"line":122,"column":8},"end":{"line":124,"column":9}},"83":{"start":{"line":123,"column":12},"end":{"line":123,"column":25}},"84":{"start":{"line":125,"column":8},"end":{"line":127,"column":9}},"85":{"start":{"line":126,"column":12},"end":{"line":126,"column":24}},"86":{"start":{"line":128,"column":8},"end":{"line":130,"column":9}},"87":{"start":{"line":129,"column":12},"end":{"line":129,"column":24}},"88":{"start":{"line":131,"column":8},"end":{"line":131,"column":21}},"89":{"start":{"line":134,"column":28},"end":{"line":134,"column":42}},"90":{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},"91":{"start":{"line":136,"column":12},"end":{"line":136,"column":93}},"92":{"start":{"line":138,"column":8},"end":{"line":161,"column":9}},"93":{"start":{"line":140,"column":16},"end":{"line":140,"column":38}},"94":{"start":{"line":142,"column":16},"end":{"line":142,"column":36}},"95":{"start":{"line":144,"column":16},"end":{"line":144,"column":39}},"96":{"start":{"line":146,"column":16},"end":{"line":146,"column":44}},"97":{"start":{"line":148,"column":16},"end":{"line":148,"column":38}},"98":{"start":{"line":150,"column":16},"end":{"line":150,"column":45}},"99":{"start":{"line":152,"column":16},"end":{"line":152,"column":37}},"100":{"start":{"line":154,"column":16},"end":{"line":154,"column":38}},"101":{"start":{"line":156,"column":16},"end":{"line":156,"column":38}},"102":{"start":{"line":158,"column":16},"end":{"line":158,"column":39}},"103":{"start":{"line":160,"column":16},"end":{"line":160,"column":82}},"104":{"start":{"line":164,"column":8},"end":{"line":167,"column":9}},"105":{"start":{"line":165,"column":27},"end":{"line":165,"column":31}},"106":{"start":{"line":166,"column":12},"end":{"line":166,"column":26}},"107":{"start":{"line":168,"column":8},"end":{"line":168,"column":30}},"108":{"start":{"line":171,"column":8},"end":{"line":173,"column":9}},"109":{"start":{"line":172,"column":12},"end":{"line":172,"column":91}},"110":{"start":{"line":174,"column":24},"end":{"line":174,"column":39}},"111":{"start":{"line":175,"column":21},"end":{"line":181,"column":10}},"112":{"start":{"line":176,"column":24},"end":{"line":176,"column":26}},"113":{"start":{"line":177,"column":12},"end":{"line":179,"column":13}},"114":{"start":{"line":178,"column":16},"end":{"line":178,"column":61}},"115":{"start":{"line":180,"column":12},"end":{"line":180,"column":23}},"116":{"start":{"line":182,"column":8},"end":{"line":184,"column":9}},"117":{"start":{"line":183,"column":12},"end":{"line":183,"column":60}},"118":{"start":{"line":185,"column":8},"end":{"line":185,"column":22}},"119":{"start":{"line":188,"column":8},"end":{"line":209,"column":9}},"120":{"start":{"line":189,"column":24},"end":{"line":189,"column":29}},"121":{"start":{"line":190,"column":12},"end":{"line":190,"column":89}},"122":{"start":{"line":190,"column":40},"end":{"line":190,"column":86}},"123":{"start":{"line":192,"column":13},"end":{"line":209,"column":9}},"124":{"start":{"line":193,"column":25},"end":{"line":193,"column":35}},"125":{"start":{"line":194,"column":24},"end":{"line":194,"column":53}},"126":{"start":{"line":195,"column":12},"end":{"line":205,"column":15}},"127":{"start":{"line":196,"column":16},"end":{"line":203,"column":17}},"128":{"start":{"line":197,"column":20},"end":{"line":199,"column":21}},"129":{"start":{"line":198,"column":24},"end":{"line":198,"column":35}},"130":{"start":{"line":200,"column":20},"end":{"line":202,"column":21}},"131":{"start":{"line":201,"column":24},"end":{"line":201,"column":36}},"132":{"start":{"line":204,"column":16},"end":{"line":204,"column":25}},"133":{"start":{"line":208,"column":12},"end":{"line":208,"column":77}},"134":{"start":{"line":212,"column":28},"end":{"line":212,"column":113}},"135":{"start":{"line":213,"column":26},"end":{"line":213,"column":49}},"136":{"start":{"line":214,"column":8},"end":{"line":216,"column":9}},"137":{"start":{"line":215,"column":12},"end":{"line":215,"column":58}},"138":{"start":{"line":219,"column":19},"end":{"line":219,"column":21}},"139":{"start":{"line":220,"column":8},"end":{"line":229,"column":9}},"140":{"start":{"line":221,"column":12},"end":{"line":228,"column":13}},"141":{"start":{"line":222,"column":16},"end":{"line":227,"column":17}},"142":{"start":{"line":223,"column":20},"end":{"line":223,"column":67}},"143":{"start":{"line":225,"column":21},"end":{"line":227,"column":17}},"144":{"start":{"line":226,"column":20},"end":{"line":226,"column":35}},"145":{"start":{"line":230,"column":8},"end":{"line":230,"column":20}},"146":{"start":{"line":233,"column":31},"end":{"line":233,"column":45}},"147":{"start":{"line":234,"column":8},"end":{"line":236,"column":9}},"148":{"start":{"line":235,"column":12},"end":{"line":235,"column":84}},"149":{"start":{"line":237,"column":8},"end":{"line":239,"column":9}},"150":{"start":{"line":238,"column":12},"end":{"line":238,"column":93}},"151":{"start":{"line":242,"column":0},"end":{"line":242,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":32},"end":{"line":9,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":30},"end":{"line":19,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":33},"end":{"line":27,"column":5}},"line":20},"3":{"name":"(anonymous_3)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":29},"end":{"line":34,"column":5}},"line":28},"4":{"name":"(anonymous_4)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":31},"end":{"line":52,"column":5}},"line":35},"5":{"name":"(anonymous_5)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":29},"end":{"line":56,"column":5}},"line":53},"6":{"name":"(anonymous_6)","decl":{"start":{"line":54,"column":45},"end":{"line":54,"column":46}},"loc":{"start":{"line":54,"column":60},"end":{"line":54,"column":95}},"line":54},"7":{"name":"(anonymous_7)","decl":{"start":{"line":55,"column":15},"end":{"line":55,"column":16}},"loc":{"start":{"line":55,"column":25},"end":{"line":55,"column":75}},"line":55},"8":{"name":"(anonymous_8)","decl":{"start":{"line":55,"column":42},"end":{"line":55,"column":43}},"loc":{"start":{"line":55,"column":58},"end":{"line":55,"column":74}},"line":55},"9":{"name":"(anonymous_9)","decl":{"start":{"line":57,"column":4},"end":{"line":57,"column":5}},"loc":{"start":{"line":57,"column":27},"end":{"line":60,"column":5}},"line":57},"10":{"name":"(anonymous_10)","decl":{"start":{"line":58,"column":44},"end":{"line":58,"column":45}},"loc":{"start":{"line":58,"column":59},"end":{"line":58,"column":94}},"line":58},"11":{"name":"(anonymous_11)","decl":{"start":{"line":59,"column":15},"end":{"line":59,"column":16}},"loc":{"start":{"line":59,"column":25},"end":{"line":59,"column":74}},"line":59},"12":{"name":"(anonymous_12)","decl":{"start":{"line":59,"column":41},"end":{"line":59,"column":42}},"loc":{"start":{"line":59,"column":57},"end":{"line":59,"column":73}},"line":59},"13":{"name":"(anonymous_13)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":28},"end":{"line":64,"column":5}},"line":61},"14":{"name":"(anonymous_14)","decl":{"start":{"line":63,"column":15},"end":{"line":63,"column":16}},"loc":{"start":{"line":63,"column":25},"end":{"line":63,"column":41}},"line":63},"15":{"name":"(anonymous_15)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":28},"end":{"line":90,"column":5}},"line":65},"16":{"name":"(anonymous_16)","decl":{"start":{"line":74,"column":15},"end":{"line":74,"column":16}},"loc":{"start":{"line":74,"column":25},"end":{"line":89,"column":9}},"line":74},"17":{"name":"(anonymous_17)","decl":{"start":{"line":91,"column":4},"end":{"line":91,"column":5}},"loc":{"start":{"line":91,"column":26},"end":{"line":115,"column":5}},"line":91},"18":{"name":"(anonymous_18)","decl":{"start":{"line":108,"column":15},"end":{"line":108,"column":16}},"loc":{"start":{"line":108,"column":25},"end":{"line":114,"column":9}},"line":108},"19":{"name":"(anonymous_19)","decl":{"start":{"line":116,"column":4},"end":{"line":116,"column":5}},"loc":{"start":{"line":116,"column":37},"end":{"line":132,"column":5}},"line":116},"20":{"name":"(anonymous_20)","decl":{"start":{"line":133,"column":4},"end":{"line":133,"column":5}},"loc":{"start":{"line":133,"column":33},"end":{"line":162,"column":5}},"line":133},"21":{"name":"(anonymous_21)","decl":{"start":{"line":163,"column":4},"end":{"line":163,"column":5}},"loc":{"start":{"line":163,"column":21},"end":{"line":169,"column":5}},"line":163},"22":{"name":"(anonymous_22)","decl":{"start":{"line":170,"column":4},"end":{"line":170,"column":5}},"loc":{"start":{"line":170,"column":32},"end":{"line":186,"column":5}},"line":170},"23":{"name":"(anonymous_23)","decl":{"start":{"line":175,"column":30},"end":{"line":175,"column":31}},"loc":{"start":{"line":175,"column":40},"end":{"line":181,"column":9}},"line":175},"24":{"name":"(anonymous_24)","decl":{"start":{"line":187,"column":4},"end":{"line":187,"column":5}},"loc":{"start":{"line":187,"column":28},"end":{"line":210,"column":5}},"line":187},"25":{"name":"(anonymous_25)","decl":{"start":{"line":190,"column":29},"end":{"line":190,"column":30}},"loc":{"start":{"line":190,"column":40},"end":{"line":190,"column":86}},"line":190},"26":{"name":"(anonymous_26)","decl":{"start":{"line":195,"column":29},"end":{"line":195,"column":30}},"loc":{"start":{"line":195,"column":39},"end":{"line":205,"column":13}},"line":195},"27":{"name":"(anonymous_27)","decl":{"start":{"line":211,"column":4},"end":{"line":211,"column":5}},"loc":{"start":{"line":211,"column":40},"end":{"line":217,"column":5}},"line":211},"28":{"name":"(anonymous_28)","decl":{"start":{"line":218,"column":4},"end":{"line":218,"column":5}},"loc":{"start":{"line":218,"column":21},"end":{"line":231,"column":5}},"line":218},"29":{"name":"(anonymous_29)","decl":{"start":{"line":232,"column":4},"end":{"line":232,"column":5}},"loc":{"start":{"line":232,"column":45},"end":{"line":240,"column":5}},"line":232}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"type":"if","locations":[{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},{"start":{"line":12,"column":8},"end":{"line":14,"column":9}}],"line":12},"1":{"loc":{"start":{"line":22,"column":12},"end":{"line":24,"column":13}},"type":"if","locations":[{"start":{"line":22,"column":12},"end":{"line":24,"column":13}},{"start":{"line":22,"column":12},"end":{"line":24,"column":13}}],"line":22},"2":{"loc":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},{"start":{"line":29,"column":8},"end":{"line":31,"column":9}}],"line":29},"3":{"loc":{"start":{"line":36,"column":8},"end":{"line":38,"column":9}},"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":38,"column":9}},{"start":{"line":36,"column":8},"end":{"line":38,"column":9}}],"line":36},"4":{"loc":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},{"start":{"line":39,"column":8},"end":{"line":41,"column":9}}],"line":39},"5":{"loc":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},{"start":{"line":42,"column":8},"end":{"line":44,"column":9}}],"line":42},"6":{"loc":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},{"start":{"line":45,"column":8},"end":{"line":47,"column":9}}],"line":45},"7":{"loc":{"start":{"line":45,"column":12},"end":{"line":45,"column":44}},"type":"binary-expr","locations":[{"start":{"line":45,"column":12},"end":{"line":45,"column":20}},{"start":{"line":45,"column":24},"end":{"line":45,"column":32}},{"start":{"line":45,"column":36},"end":{"line":45,"column":44}}],"line":45},"8":{"loc":{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},{"start":{"line":48,"column":8},"end":{"line":50,"column":9}}],"line":48},"9":{"loc":{"start":{"line":66,"column":25},"end":{"line":66,"column":65}},"type":"cond-expr","locations":[{"start":{"line":66,"column":36},"end":{"line":66,"column":40}},{"start":{"line":66,"column":43},"end":{"line":66,"column":65}}],"line":66},"10":{"loc":{"start":{"line":66,"column":43},"end":{"line":66,"column":65}},"type":"cond-expr","locations":[{"start":{"line":66,"column":54},"end":{"line":66,"column":58}},{"start":{"line":66,"column":61},"end":{"line":66,"column":65}}],"line":66},"11":{"loc":{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},"type":"if","locations":[{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},{"start":{"line":71,"column":8},"end":{"line":73,"column":9}}],"line":71},"12":{"loc":{"start":{"line":76,"column":12},"end":{"line":78,"column":13}},"type":"if","locations":[{"start":{"line":76,"column":12},"end":{"line":78,"column":13}},{"start":{"line":76,"column":12},"end":{"line":78,"column":13}}],"line":76},"13":{"loc":{"start":{"line":76,"column":16},"end":{"line":76,"column":74}},"type":"binary-expr","locations":[{"start":{"line":76,"column":16},"end":{"line":76,"column":45}},{"start":{"line":76,"column":49},"end":{"line":76,"column":74}}],"line":76},"14":{"loc":{"start":{"line":79,"column":12},"end":{"line":81,"column":13}},"type":"if","locations":[{"start":{"line":79,"column":12},"end":{"line":81,"column":13}},{"start":{"line":79,"column":12},"end":{"line":81,"column":13}}],"line":79},"15":{"loc":{"start":{"line":82,"column":12},"end":{"line":84,"column":13}},"type":"if","locations":[{"start":{"line":82,"column":12},"end":{"line":84,"column":13}},{"start":{"line":82,"column":12},"end":{"line":84,"column":13}}],"line":82},"16":{"loc":{"start":{"line":85,"column":12},"end":{"line":87,"column":13}},"type":"if","locations":[{"start":{"line":85,"column":12},"end":{"line":87,"column":13}},{"start":{"line":85,"column":12},"end":{"line":87,"column":13}}],"line":85},"17":{"loc":{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},"type":"if","locations":[{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},{"start":{"line":95,"column":8},"end":{"line":97,"column":9}}],"line":95},"18":{"loc":{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},"type":"if","locations":[{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},{"start":{"line":98,"column":8},"end":{"line":100,"column":9}}],"line":98},"19":{"loc":{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},"type":"if","locations":[{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},{"start":{"line":101,"column":8},"end":{"line":103,"column":9}}],"line":101},"20":{"loc":{"start":{"line":110,"column":12},"end":{"line":112,"column":13}},"type":"if","locations":[{"start":{"line":110,"column":12},"end":{"line":112,"column":13}},{"start":{"line":110,"column":12},"end":{"line":112,"column":13}}],"line":110},"21":{"loc":{"start":{"line":119,"column":8},"end":{"line":121,"column":9}},"type":"if","locations":[{"start":{"line":119,"column":8},"end":{"line":121,"column":9}},{"start":{"line":119,"column":8},"end":{"line":121,"column":9}}],"line":119},"22":{"loc":{"start":{"line":122,"column":8},"end":{"line":124,"column":9}},"type":"if","locations":[{"start":{"line":122,"column":8},"end":{"line":124,"column":9}},{"start":{"line":122,"column":8},"end":{"line":124,"column":9}}],"line":122},"23":{"loc":{"start":{"line":125,"column":8},"end":{"line":127,"column":9}},"type":"if","locations":[{"start":{"line":125,"column":8},"end":{"line":127,"column":9}},{"start":{"line":125,"column":8},"end":{"line":127,"column":9}}],"line":125},"24":{"loc":{"start":{"line":125,"column":12},"end":{"line":125,"column":62}},"type":"binary-expr","locations":[{"start":{"line":125,"column":12},"end":{"line":125,"column":28}},{"start":{"line":125,"column":32},"end":{"line":125,"column":62}}],"line":125},"25":{"loc":{"start":{"line":128,"column":8},"end":{"line":130,"column":9}},"type":"if","locations":[{"start":{"line":128,"column":8},"end":{"line":130,"column":9}},{"start":{"line":128,"column":8},"end":{"line":130,"column":9}}],"line":128},"26":{"loc":{"start":{"line":128,"column":12},"end":{"line":128,"column":92}},"type":"binary-expr","locations":[{"start":{"line":128,"column":12},"end":{"line":128,"column":36}},{"start":{"line":128,"column":41},"end":{"line":128,"column":57}},{"start":{"line":128,"column":61},"end":{"line":128,"column":91}}],"line":128},"27":{"loc":{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},{"start":{"line":135,"column":8},"end":{"line":137,"column":9}}],"line":135},"28":{"loc":{"start":{"line":138,"column":8},"end":{"line":161,"column":9}},"type":"switch","locations":[{"start":{"line":139,"column":12},"end":{"line":140,"column":38}},{"start":{"line":141,"column":12},"end":{"line":142,"column":36}},{"start":{"line":143,"column":12},"end":{"line":144,"column":39}},{"start":{"line":145,"column":12},"end":{"line":146,"column":44}},{"start":{"line":147,"column":12},"end":{"line":148,"column":38}},{"start":{"line":149,"column":12},"end":{"line":150,"column":45}},{"start":{"line":151,"column":12},"end":{"line":152,"column":37}},{"start":{"line":153,"column":12},"end":{"line":154,"column":38}},{"start":{"line":155,"column":12},"end":{"line":156,"column":38}},{"start":{"line":157,"column":12},"end":{"line":158,"column":39}},{"start":{"line":159,"column":12},"end":{"line":160,"column":82}}],"line":138},"29":{"loc":{"start":{"line":164,"column":8},"end":{"line":167,"column":9}},"type":"if","locations":[{"start":{"line":164,"column":8},"end":{"line":167,"column":9}},{"start":{"line":164,"column":8},"end":{"line":167,"column":9}}],"line":164},"30":{"loc":{"start":{"line":171,"column":8},"end":{"line":173,"column":9}},"type":"if","locations":[{"start":{"line":171,"column":8},"end":{"line":173,"column":9}},{"start":{"line":171,"column":8},"end":{"line":173,"column":9}}],"line":171},"31":{"loc":{"start":{"line":171,"column":12},"end":{"line":171,"column":63}},"type":"binary-expr","locations":[{"start":{"line":171,"column":12},"end":{"line":171,"column":28}},{"start":{"line":171,"column":32},"end":{"line":171,"column":63}}],"line":171},"32":{"loc":{"start":{"line":182,"column":8},"end":{"line":184,"column":9}},"type":"if","locations":[{"start":{"line":182,"column":8},"end":{"line":184,"column":9}},{"start":{"line":182,"column":8},"end":{"line":184,"column":9}}],"line":182},"33":{"loc":{"start":{"line":188,"column":8},"end":{"line":209,"column":9}},"type":"if","locations":[{"start":{"line":188,"column":8},"end":{"line":209,"column":9}},{"start":{"line":188,"column":8},"end":{"line":209,"column":9}}],"line":188},"34":{"loc":{"start":{"line":190,"column":40},"end":{"line":190,"column":86}},"type":"cond-expr","locations":[{"start":{"line":190,"column":58},"end":{"line":190,"column":59}},{"start":{"line":190,"column":62},"end":{"line":190,"column":86}}],"line":190},"35":{"loc":{"start":{"line":190,"column":62},"end":{"line":190,"column":86}},"type":"cond-expr","locations":[{"start":{"line":190,"column":80},"end":{"line":190,"column":82}},{"start":{"line":190,"column":85},"end":{"line":190,"column":86}}],"line":190},"36":{"loc":{"start":{"line":192,"column":13},"end":{"line":209,"column":9}},"type":"if","locations":[{"start":{"line":192,"column":13},"end":{"line":209,"column":9}},{"start":{"line":192,"column":13},"end":{"line":209,"column":9}}],"line":192},"37":{"loc":{"start":{"line":192,"column":17},"end":{"line":192,"column":85}},"type":"binary-expr","locations":[{"start":{"line":192,"column":17},"end":{"line":192,"column":42}},{"start":{"line":192,"column":46},"end":{"line":192,"column":56}},{"start":{"line":192,"column":60},"end":{"line":192,"column":85}}],"line":192},"38":{"loc":{"start":{"line":194,"column":24},"end":{"line":194,"column":53}},"type":"cond-expr","locations":[{"start":{"line":194,"column":47},"end":{"line":194,"column":49}},{"start":{"line":194,"column":52},"end":{"line":194,"column":53}}],"line":194},"39":{"loc":{"start":{"line":197,"column":20},"end":{"line":199,"column":21}},"type":"if","locations":[{"start":{"line":197,"column":20},"end":{"line":199,"column":21}},{"start":{"line":197,"column":20},"end":{"line":199,"column":21}}],"line":197},"40":{"loc":{"start":{"line":200,"column":20},"end":{"line":202,"column":21}},"type":"if","locations":[{"start":{"line":200,"column":20},"end":{"line":202,"column":21}},{"start":{"line":200,"column":20},"end":{"line":202,"column":21}}],"line":200},"41":{"loc":{"start":{"line":220,"column":8},"end":{"line":229,"column":9}},"type":"if","locations":[{"start":{"line":220,"column":8},"end":{"line":229,"column":9}},{"start":{"line":220,"column":8},"end":{"line":229,"column":9}}],"line":220},"42":{"loc":{"start":{"line":220,"column":12},"end":{"line":220,"column":51}},"type":"binary-expr","locations":[{"start":{"line":220,"column":12},"end":{"line":220,"column":35}},{"start":{"line":220,"column":39},"end":{"line":220,"column":51}}],"line":220},"43":{"loc":{"start":{"line":222,"column":16},"end":{"line":227,"column":17}},"type":"if","locations":[{"start":{"line":222,"column":16},"end":{"line":227,"column":17}},{"start":{"line":222,"column":16},"end":{"line":227,"column":17}}],"line":222},"44":{"loc":{"start":{"line":225,"column":21},"end":{"line":227,"column":17}},"type":"if","locations":[{"start":{"line":225,"column":21},"end":{"line":227,"column":17}},{"start":{"line":225,"column":21},"end":{"line":227,"column":17}}],"line":225},"45":{"loc":{"start":{"line":234,"column":8},"end":{"line":236,"column":9}},"type":"if","locations":[{"start":{"line":234,"column":8},"end":{"line":236,"column":9}},{"start":{"line":234,"column":8},"end":{"line":236,"column":9}}],"line":234},"46":{"loc":{"start":{"line":237,"column":8},"end":{"line":239,"column":9}},"type":"if","locations":[{"start":{"line":237,"column":8},"end":{"line":239,"column":9}},{"start":{"line":237,"column":8},"end":{"line":239,"column":9}}],"line":237}},"s":{"0":1,"1":1,"2":52,"3":25,"4":25,"5":0,"6":25,"7":25,"8":25,"9":24,"10":25,"11":25,"12":25,"13":0,"14":25,"15":0,"16":25,"17":24,"18":33,"19":2,"20":31,"21":2,"22":29,"23":2,"24":27,"25":16,"26":11,"27":11,"28":0,"29":2,"30":3,"31":2,"32":129224,"33":132351,"34":2,"35":3,"36":2,"37":129224,"38":193830,"39":2,"40":2,"41":129224,"42":16,"43":16,"44":16,"45":16,"46":16,"47":16,"48":0,"49":16,"50":1033786,"51":1033786,"52":0,"53":1033786,"54":646120,"55":387666,"56":193836,"57":193830,"58":193830,"59":0,"60":11,"61":11,"62":11,"63":11,"64":0,"65":11,"66":0,"67":11,"68":1,"69":10,"70":10,"71":10,"72":10,"73":10,"74":455415,"75":455415,"76":0,"77":455415,"78":11,"79":11,"80":11,"81":3,"82":8,"83":2,"84":6,"85":1,"86":5,"87":0,"88":5,"89":1640994,"90":1640994,"91":0,"92":1640994,"93":3,"94":324271,"95":3,"96":129235,"97":77827,"98":3,"99":1109643,"100":3,"101":3,"102":3,"103":0,"104":3,"105":1,"106":1,"107":2,"108":24,"109":0,"110":24,"111":24,"112":75857,"113":75857,"114":151793,"115":75857,"116":24,"117":23,"118":24,"119":23,"120":23,"121":23,"122":1009414,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":25,"135":25,"136":25,"137":0,"138":25,"139":25,"140":25,"141":50,"142":0,"143":50,"144":0,"145":25,"146":0,"147":0,"148":0,"149":0,"150":0,"151":1},"f":{"0":52,"1":25,"2":25,"3":25,"4":33,"5":2,"6":3,"7":129224,"8":132351,"9":2,"10":3,"11":129224,"12":193830,"13":2,"14":129224,"15":16,"16":1033786,"17":11,"18":455415,"19":11,"20":1640994,"21":3,"22":24,"23":75857,"24":23,"25":1009414,"26":0,"27":25,"28":25,"29":0},"b":{"0":[0,25],"1":[25,0],"2":[0,25],"3":[2,31],"4":[2,29],"5":[2,27],"6":[16,11],"7":[27,17,14],"8":[11,0],"9":[10,6],"10":[3,3],"11":[0,16],"12":[0,1033786],"13":[1033786,1033786],"14":[646120,387666],"15":[193836,193830],"16":[193830,0],"17":[0,11],"18":[0,11],"19":[1,10],"20":[0,455415],"21":[3,8],"22":[2,6],"23":[1,5],"24":[6,2],"25":[0,5],"26":[5,2,2],"27":[0,1640994],"28":[3,324271,3,129235,77827,3,1109643,3,3,3,0],"29":[1,2],"30":[0,24],"31":[24,24],"32":[23,1],"33":[23,0],"34":[317024,692390],"35":[520976,171414],"36":[0,0],"37":[0,0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[25,0],"42":[25,25],"43":[0,50],"44":[0,50],"45":[0,0],"46":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/liuhongkai/CPSC310_project/project_team051/src/controller/QueryExecutor.ts","sources":["/Users/liuhongkai/CPSC310_project/project_team051/src/controller/QueryExecutor.ts"],"names":[],"mappings":"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","sourcesContent":["import { InsightError, InsightResult } from \"./IInsightFacade\";\nimport DatasetManager from \"./DatasetManager\"; // Use DatasetManager for handling datasets\nimport Section from \"./Section\";\n\nexport default class QueryExecutor {\n\tprivate datasets: Map<string, Section[]>;\n\tprivate datasetId!: string; // Declare datasetId with definite assignment\n\n\tconstructor(datasetManager: DatasetManager) {\n\t\tthis.datasets = datasetManager.getDatasets(); // Get datasets from DatasetManager\n\t}\n\n\tpublic async executeQuery(query: any): Promise<InsightResult[]> {\n\t\t// Extract and store the dataset ID from the query\n\t\tthis.datasetId = this.getDatasetIdFromQuery(query);\n\n\t\t// Check if the dataset exists\n\t\tif (!this.datasets.has(this.datasetId)) {\n\t\t\tthrow new InsightError(`Dataset with id \"${this.datasetId}\" does not exist.`);\n\t\t}\n\n\t\t// Validate query keys\n\t\tthis.validateQueryKeys(query, this.datasetId);\n\n\t\tconst dataset = this.datasets.get(this.datasetId) as Section[];\n\t\tconst filteredData = this.applyFilter(dataset, query.WHERE);\n\t\treturn this.applyOptions(filteredData, query.OPTIONS);\n\t}\n\n\tprivate getDatasetIdFromQuery(query: any): string {\n\t\t// Extract the dataset ID from the first column that includes an underscore\n\t\tfor (const col of query.OPTIONS.COLUMNS) {\n\t\t\tif (col.includes(\"_\")) {\n\t\t\t\treturn col.split(\"_\")[0];\n\t\t\t}\n\t\t}\n\t\tthrow new InsightError(\"Could not extract dataset ID from COLUMNS.\");\n\t}\n\n\tprivate applyFilter(data: Section[], where: any): Section[] {\n\t\t// If WHERE is empty, return all data\n\t\tif (Object.keys(where).length === 0) {\n\t\t\treturn data;\n\t\t}\n\n\t\tconst filterFunction = this.buildFilterFunction(where);\n\t\treturn data.filter(filterFunction);\n\t}\n\n\tprivate buildFilterFunction(where: any): (item: Section) => boolean {\n\t\tif (where.AND) {\n\t\t\treturn this.handleAnd(where.AND);\n\t\t}\n\t\tif (where.OR) {\n\t\t\treturn this.handleOr(where.OR);\n\t\t}\n\t\tif (where.NOT) {\n\t\t\treturn this.handleNot(where.NOT);\n\t\t}\n\t\tif (where.GT || where.LT || where.EQ) {\n\t\t\treturn this.handleComparison(where);\n\t\t}\n\t\tif (where.IS) {\n\t\t\treturn this.handleIs(where.IS);\n\t\t}\n\t\tthrow new InsightError(\"Invalid WHERE condition.\");\n\t}\n\n\tprivate handleAnd(andConditions: any[]): (item: Section) => boolean {\n\t\tconst subFilters: ((item: Section) => boolean)[] = andConditions.map((condition: any) =>\n\t\t\tthis.buildFilterFunction(condition)\n\t\t);\n\t\treturn (item: Section) => subFilters.every((filterFunc) => filterFunc(item));\n\t}\n\n\tprivate handleOr(orConditions: any[]): (item: Section) => boolean {\n\t\tconst subFilters: ((item: Section) => boolean)[] = orConditions.map((condition: any) =>\n\t\t\tthis.buildFilterFunction(condition)\n\t\t);\n\t\treturn (item: Section) => subFilters.some((filterFunc) => filterFunc(item));\n\t}\n\n\tprivate handleNot(notCondition: any): (item: Section) => boolean {\n\t\tconst subFilter = this.buildFilterFunction(notCondition);\n\t\treturn (item: Section) => !subFilter(item);\n\t}\n\n\tprivate handleComparison(where: any): (item: Section) => boolean {\n\t\tconst operator = where.GT ? \"GT\" : where.LT ? \"LT\" : \"EQ\";\n\t\tconst comparison = where[operator];\n\t\tconst key = Object.keys(comparison)[0];\n\t\tconst value = comparison[key];\n\n\t\tconst id = key.split(\"_\")[0]; // Only extract 'id'\n\t\tif (id !== this.datasetId) {\n\t\t\tthrow new InsightError(`Key does not match dataset ID: ${key}`);\n\t\t}\n\n\t\treturn (item: Section) => {\n\t\t\tconst itemValue = this.getItemValueByKey(item, key);\n\n\t\t\tif (typeof itemValue !== \"number\" || typeof value !== \"number\") {\n\t\t\t\tthrow new InsightError(\"Comparison requires numeric values.\");\n\t\t\t}\n\n\t\t\tif (operator === \"GT\") {\n\t\t\t\treturn itemValue > value;\n\t\t\t}\n\t\t\tif (operator === \"LT\") {\n\t\t\t\treturn itemValue < value;\n\t\t\t}\n\t\t\tif (operator === \"EQ\") {\n\t\t\t\treturn itemValue === value;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\t}\n\n\tprivate handleIs(isCondition: any): (item: Section) => boolean {\n\t\tconst key = Object.keys(isCondition)[0];\n\t\tconst value = isCondition[key];\n\n\t\tconst id = key.split(\"_\")[0];\n\t\tif (id !== this.datasetId) {\n\t\t\tthrow new InsightError(`Key does not match dataset ID: ${key}`);\n\t\t}\n\n\t\tif (typeof value !== \"string\") {\n\t\t\tthrow new InsightError(\"IS operator requires a string value.\");\n\t\t}\n\n\t\t// Validate wildcard pattern\n\t\tif (this.hasInvalidWildcardPattern(value)) {\n\t\t\tthrow new InsightError(\"Invalid wildcard pattern in IS operator.\");\n\t\t}\n\n\t\t// Escape special characters except '*'\n\t\tconst specialChars = /[.+?^${}()|[\\]\\\\]/g; // Exclude '*'\n\t\tconst escapedValue = value.replace(specialChars, \"\\\\$&\");\n\n\t\t// Replace '*' with '.*'\n\t\tconst regexPattern = `^${escapedValue.replace(/\\*/g, \".*\")}$`;\n\t\tconst regex = new RegExp(regexPattern);\n\n\t\treturn (item: Section) => {\n\t\t\tconst itemValue = this.getItemValueByKey(item, key);\n\n\t\t\tif (typeof itemValue !== \"string\") {\n\t\t\t\tthrow new InsightError(\"IS operator requires string fields.\");\n\t\t\t}\n\n\t\t\treturn regex.test(itemValue);\n\t\t};\n\t}\n\n\tprivate hasInvalidWildcardPattern(value: string): boolean {\n\t\t// Valid patterns: '*abc', 'abc*', '*abc*', 'abc', '*'\n\t\t// Invalid patterns: 'ab*cd', 'a*b*c', '*ab*cd*', etc.\n\t\tconst firstIndex = value.indexOf(\"*\");\n\t\tconst lastIndex = value.lastIndexOf(\"*\");\n\n\t\tif (firstIndex === -1) {\n\t\t\t// No wildcards, valid pattern\n\t\t\treturn false;\n\t\t}\n\n\t\tif (value.replace(/\\*/g, \"\").length === 0) {\n\t\t\t// Value is only '*', valid pattern\n\t\t\treturn false;\n\t\t}\n\n\t\tif (firstIndex !== 0 && lastIndex !== value.length - 1) {\n\t\t\t// '*' is in the middle, invalid pattern\n\t\t\treturn true;\n\t\t}\n\n\t\tif (firstIndex !== lastIndex && (firstIndex !== 0 || lastIndex !== value.length - 1)) {\n\t\t\t// Multiple '*' not at both ends, invalid pattern\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Helper function to map the string key to the corresponding Section getter.\n\t * @param item The Section object.\n\t * @param key The key used in the query (e.g., 'uuid', 'title', etc.).\n\t * @returns The value from the Section object.\n\t */\n\tprivate getItemValueByKey(item: Section, key: string): string | number {\n\t\tconst [id, field] = key.split(\"_\");\n\t\tif (id !== this.datasetId) {\n\t\t\tthrow new InsightError(`Key does not match dataset ID: ${key}`);\n\t\t}\n\t\tswitch (field) {\n\t\t\tcase \"uuid\":\n\t\t\t\treturn item.getUuid();\n\t\t\tcase \"id\":\n\t\t\t\treturn item.getId();\n\t\t\tcase \"title\":\n\t\t\t\treturn item.getTitle();\n\t\t\tcase \"instructor\":\n\t\t\t\treturn item.getInstructor();\n\t\t\tcase \"dept\":\n\t\t\t\treturn item.getDept();\n\t\t\tcase \"year\":\n\t\t\t\treturn this.adjustYear(item); // Pass the entire item\n\t\t\tcase \"avg\":\n\t\t\t\treturn item.getAvg();\n\t\t\tcase \"pass\":\n\t\t\t\treturn item.getPass();\n\t\t\tcase \"fail\":\n\t\t\t\treturn item.getFail();\n\t\t\tcase \"audit\":\n\t\t\t\treturn item.getAudit();\n\t\t\tdefault:\n\t\t\t\tthrow new InsightError(`Invalid column: ${key}`);\n\t\t}\n\t}\n\n\tprivate adjustYear(item: Section): number {\n\t\t// If instructor is empty, it's an 'overall' section; set year to 1900\n\t\tif (item.getInstructor() === \"\") {\n\t\t\tconst result = 1900;\n\t\t\treturn result;\n\t\t}\n\t\treturn item.getYear();\n\t}\n\n\tprivate applyOptions(data: Section[], options: any): InsightResult[] {\n\t\tif (!options.COLUMNS || !Array.isArray(options.COLUMNS)) {\n\t\t\tthrow new InsightError(\"OPTIONS must contain COLUMNS array.\");\n\t\t}\n\n\t\tconst columns = options.COLUMNS;\n\t\tlet result = data.map((item) => {\n\t\t\tconst res: any = {};\n\t\t\tfor (const col of columns) {\n\t\t\t\tres[col] = this.getItemValueByKey(item, col); // Use helper function here\n\t\t\t}\n\t\t\treturn res;\n\t\t});\n\n\t\tif (options.ORDER) {\n\t\t\tresult = this.applyOrder(result, options.ORDER);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate applyOrder(data: InsightResult[], order: any): InsightResult[] {\n\t\tif (typeof order === \"string\") {\n\t\t\tconst key = order;\n\t\t\treturn data.sort((a, b) => (a[key] > b[key] ? 1 : a[key] < b[key] ? -1 : 0));\n\t\t} else if (typeof order === \"object\" && order.keys && Array.isArray(order.keys)) {\n\t\t\tconst keys = order.keys;\n\t\t\tconst dir = order.dir === \"DOWN\" ? -1 : 1;\n\n\t\t\treturn data.sort((a, b) => {\n\t\t\t\tfor (const key of keys) {\n\t\t\t\t\tif (a[key] > b[key]) {\n\t\t\t\t\t\treturn dir;\n\t\t\t\t\t}\n\t\t\t\t\tif (a[key] < b[key]) {\n\t\t\t\t\t\treturn -dir;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t} else {\n\t\t\tthrow new InsightError(\"Invalid ORDER format.\");\n\t\t}\n\t}\n\n\t// Refactored to reduce method length\n\tprivate validateQueryKeys(query: any, datasetId: string): void {\n\t\tconst validFields = [\"uuid\", \"id\", \"title\", \"instructor\", \"dept\", \"year\", \"avg\", \"pass\", \"fail\", \"audit\"];\n\n\t\tconst queryKeys = this.extractKeys(query);\n\n\t\tfor (const key of queryKeys) {\n\t\t\tthis.validateKey(key, validFields, datasetId);\n\t\t}\n\t}\n\n\tprivate extractKeys(obj: any): string[] {\n\t\tlet keys: string[] = [];\n\t\tif (typeof obj === \"object\" && obj !== null) {\n\t\t\tfor (const key in obj) {\n\t\t\t\tif ([\"AND\", \"OR\", \"NOT\", \"GT\", \"LT\", \"EQ\", \"IS\"].includes(key)) {\n\t\t\t\t\tkeys = keys.concat(this.extractKeys(obj[key]));\n\t\t\t\t} else if (key.includes(\"_\")) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn keys;\n\t}\n\n\tprivate validateKey(key: string, validFields: string[], datasetId: string): void {\n\t\tconst [keyId, field] = key.split(\"_\");\n\t\tif (!validFields.includes(field)) {\n\t\t\tthrow new InsightError(`Invalid key in query: ${key}`);\n\t\t}\n\t\tif (keyId !== datasetId) {\n\t\t\tthrow new InsightError(`Key does not match dataset ID: ${key}`);\n\t\t}\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e707221594553fa09fb33613482408bcab6539d7","contentHash":"11fd1955f4ec2f671c488d22360a6d7300ddf89b6c761b25c2bdc088c240ee23"}}